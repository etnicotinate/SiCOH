LAMMPS (2 Aug 2023 - Update 2)
  using 1 OpenMP thread(s) per MPI task
# Initialization
units           real
dimension       3
boundary        p p p
atom_style      full

variable       timestep equal 0.5   # fs
variable       T equal 300.0   # low temperature
variable       Td equal 100*${timestep}  # damping time
variable       Td equal 100*0.5  
variable       P equal 1.0  # pressure
variable       Pd equal 10*${Td}  # pressure
variable       Pd equal 10*50  

variable       nevery equal 1000
variable       nrepeat equal 1
variable       nfreq equal ${nevery}*${nrepeat}
variable       nfreq equal 1000*${nrepeat}
variable       nfreq equal 1000*1
variable       nthermo equal ${nfreq}/10
variable       nthermo equal 1000/10
variable       nequil equal 200*${nthermo}  # 2000: 10 ps
variable       nequil equal 200*100  

variable       seed string 123456
variable       structure string 333U-50C-9
variable       FF string "* * SiOCHN_2018.ff C H O Si"          # force field args for pair_coeff
# pair_coeff * * CHONSSi.ff C H O Si
# pair_coeff * * CHOSiNa.ff C H O Si
# pair_coeff * * SiOCHN_2018.ff C H O Si
# pair_coeff * * PDMSDecomp.ff C H O Si
# pair_coeff * * CHONSi.ff C H O Si
# pair_coeff * * CHOFe.ff O Si

timestep        ${timestep}
timestep        0.5

# box tilt large
# Read the initial sctructure
read_data       ${structure}.data
read_data       333U-50C-9.data
Reading data file ...
  triclinic box = (0 0 0) to (16.6078 13.4502 17.3502) with tilt (-9.4505 -1.0717 0.0034)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 1 by 2 MPI processor grid
  reading atoms ...
  386 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_data CPU = 0.007 seconds

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
# Charge equilibration for ReaxFF
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400

neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Energy minimization
print "*****Minimization starts.*****"
*****Minimization starts.*****
# Print system info
thermo          ${nthermo}
thermo          100
thermo_style    custom step temp press density vol pe
dump dump_opt all custom 1 dump/dump_opt.lammpstrj id type q x y z
minimize 1.0e-6 1.0e-6 100 1000

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Your simulation uses code contributions which should be cited:

- pair reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 number =  {4--5},
 pages =   {245--259}
}

- fix qeq/reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 pages =   {245--259}
}

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Switching to 'neigh_modify every 1 delay 0 check yes' setting during minimization
WARNING: Fix qeq/reaxff group is not charge neutral, net charge = -0.82 (src/REAXFF/fix_qeq_reaxff.cpp:392)
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 177.2 | 178.6 | 179.8 Mbytes
   Step          Temp          Press         Density         Volume         PotEng    
         0   0              173639.88      1.7478941      3875.657      -35586.149    
        47   0              4030.0107      1.7478941      3875.657      -38156.43     
Loop time of 6.8992 on 4 procs for 47 steps with 386 atoms

97.9% CPU use with 4 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -35586.1485446012  -38156.3954491963  -38156.4298363688
  Force two-norm initial, final = 4205.6054 299.17949
  Force max component initial, final = 603.10212 114.00496
  Final line search alpha, max atom move = 0.0022622169 0.25790394
  Iterations, force evaluations = 47 152

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 5.2365     | 5.3279     | 5.3935     |   2.9 | 77.22
Bond    | 0.00032204 | 0.00034014 | 0.00036066 |   0.0 |  0.00
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.06334    | 0.12879    | 0.22006    |  18.8 |  1.87
Output  | 0.012322   | 0.012861   | 0.013718   |   0.5 |  0.19
Modify  | 1.4219     | 1.422      | 1.4222     |   0.0 | 20.61
Other   |            | 0.007276   |            |       |  0.11

Nlocal:           96.5 ave         100 max          95 min
Histogram: 2 0 1 0 0 0 0 0 0 1
Nghost:         4544.5 ave        4577 max        4514 min
Histogram: 1 0 1 0 0 0 1 0 0 1
Neighs:        65501.5 ave       67863 max       64427 min
Histogram: 2 0 1 0 0 0 0 0 0 1

Total # of neighbors = 262006
Ave neighs/atom = 678.77202
Ave special neighs/atom = 0
Neighbor list builds = 0
Dangerous builds = 0
min_style cg
# Save the optimized structure
write_data ${structure}_opt.data
write_data 333U-50C-9_opt.data
System init for write_data ...
undump dump_opt
reset_timestep 0

velocity        all create ${T} ${seed} dist gaussian
velocity        all create 300 ${seed} dist gaussian
velocity        all create 300 123456 dist gaussian
# equilibration at low T
print "##### Equilibration starts.##### "
##### Equilibration starts.##### 
velocity        all create ${T} 12345
velocity        all create 300 12345
# fix             equil1 all nvt temp ${T} ${T} ${Td}
fix             equil1 all npt temp ${T} ${T} ${Td} tri ${P} ${P} ${Pd}
fix             equil1 all npt temp 300 ${T} ${Td} tri ${P} ${P} ${Pd}
fix             equil1 all npt temp 300 300 ${Td} tri ${P} ${P} ${Pd}
fix             equil1 all npt temp 300 300 50 tri ${P} ${P} ${Pd}
fix             equil1 all npt temp 300 300 50 tri 1 ${P} ${Pd}
fix             equil1 all npt temp 300 300 50 tri 1 1 ${Pd}
fix             equil1 all npt temp 300 300 50 tri 1 1 500

# out put bonds and species information
fix bondinfo all reaxff/bonds ${nfreq} bonds/bonds.reaxff
fix bondinfo all reaxff/bonds 1000 bonds/bonds.reaxff
# fix speciesinfo all reaxff/species ${nevery} ${nrepeat} ${nthermo} bonds/species.out

# compute MSD and RDF
compute msd1 all msd
fix myMSD all ave/time 10 10 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp     file msd.out     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
fix myMSD all ave/time 10 10 100 c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp     file msd.out     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
compute rdf1 all rdf 100  1 1  1 4  3 4  1 2 cutoff 5.0
fix myRDF all ave/time ${nevery} ${nrepeat} ${nfreq} c_rdf1[*]     file rdf.out mode vector     title3 "# Row r g1(r) coor1(r) ..."
fix myRDF all ave/time 1000 ${nrepeat} ${nfreq} c_rdf1[*]     file rdf.out mode vector     title3 "# Row r g1(r) coor1(r) ..."
fix myRDF all ave/time 1000 1 ${nfreq} c_rdf1[*]     file rdf.out mode vector     title3 "# Row r g1(r) coor1(r) ..."
fix myRDF all ave/time 1000 1 1000 c_rdf1[*]     file rdf.out mode vector     title3 "# Row r g1(r) coor1(r) ..."

thermo_style    custom step temp press pe etotal
# Save trajectory
dump dump_eq all custom/gz ${nthermo} dump/dump_eq.lammpstrj.gz id type x y z q
dump dump_eq all custom/gz 100 dump/dump_eq.lammpstrj.gz id type x y z q

run ${nequil}
run 20000
WARNING: Compute rdf cutoff less than neighbor cutoff - forcing a needless neighbor list build (src/compute_rdf.cpp:179)
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  3 neighbor lists, perpetual/occasional/extra = 2 1 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) compute rdf, occasional
      attributes: half, newton on, cut 7
      pair build: half/bin/newton/tri
      stencil: half/bin/3d/tri
      bin: standard
  (3) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 182 | 183.3 | 184.6 Mbytes
   Step          Temp          Press          PotEng         TotEng    
         0   300            8091.1814     -38156.43      -37812.146    
       100   192.21315     -2826.2651     -37993.023     -37772.437    
       200   229.83191     -7622.2107     -37971.017     -37707.259    
       300   284.83429     -771.55939     -37964.101     -37637.221    
       400   304.44315     -6661.123      -37939.129     -37589.746    
       500   330.06497      2092.9915     -37992.768     -37613.981    
       600   332.55695      4306.6478     -38076.216     -37694.57     
       700   320.32524     -9172.4589     -38140.485     -37772.876    
       800   313.40251     -4505.2258     -38204.28      -37844.615    
       900   298.63672     -1177.5052     -38244.732     -37902.013    
      1000   306.18373      6345.9096     -38297.626     -37946.246    
      1100   295.75703     -7726.4015     -38321.891     -37982.476    
      1200   293.78937      5630.0617     -38335.171     -37998.014    
      1300   312.13542     -2320.6208     -38363.849     -38005.638    
      1400   315.26127     -8431.1376     -38400.402     -38038.605    
      1500   299.09382     -3548.0975     -38409.161     -38065.917    
      1600   300.16959      1361.7227     -38427.736     -38083.258    
      1700   297.14578      2642.0612     -38425.946     -38084.938    
      1800   303.84833      8235.8208     -38431.279     -38082.579    
      1900   299.78026      1023.9471     -38472.887     -38128.855    
      2000   294.37161     -4299.6711     -38503.202     -38165.378    
      2100   360.27067     -843.42886     -38600.638     -38187.187    
      2200   272.28686      594.13923     -38541.946     -38229.467    
      2300   271.33434     -4281.0751     -38578.643     -38267.257    
      2400   327.08079     -156.7594      -38675.809     -38300.447    
      2500   295.38297     -6923.1395     -38663.982     -38324.997    
      2600   269.17859     -11391.406     -38644.459     -38335.546    
      2700   308.37487      1167.6023     -38699.189     -38345.294    
      2800   365.36263     -7120.3328     -38771.737     -38352.442    
      2900   300.83018      5187.6839     -38743.972     -38398.736    
      3000   283.2093       1738.8866     -38745.03      -38420.016    
      3100   320.29971     -3917.4883     -38802.003     -38434.424    
      3200   287.27365      750.84317     -38792.088     -38462.409    
      3300   282.68198      9667.4164     -38793.105     -38468.696    
      3400   300.66757     -5491.0774     -38797.263     -38452.213    
      3500   301.55848      7137.4302     -38794.05      -38447.978    
      3600   300.9952      -1232.6227     -38845.129     -38499.703    
      3700   285.35953      3813.7611     -38835.648     -38508.166    
      3800   278.52374     -961.43525     -38824.136     -38504.498    
      3900   321.53228     -3511.6959     -38857.773     -38488.779    
      4000   277.35792      3992.6456     -38786.201     -38467.902    
      4100   311.68119      7435.9026     -38824.152     -38466.463    
      4200   305.18191      1879.6337     -38852.132     -38501.901    
      4300   279.00768     -3045.1856     -38844.365     -38524.173    
      4400   278.53327     -268.97664     -38834.895     -38515.247    
      4500   298.85974     -2136.3907     -38830.331     -38487.356    
      4600   302.05644     -10262.988     -38837.235     -38490.591    
      4700   314.75124     -2229.2946     -38884.753     -38523.54     
      4800   328.33583     -1186.3769     -38933.991     -38557.189    
      4900   308.89595     -8051.1475     -38957.725     -38603.232    
      5000   298.57974      1361.6034     -38974.638     -38631.984    
      5100   303.31961      21063.741     -38990.975     -38642.882    
      5200   298.52655      662.99584     -38995.139     -38652.546    
      5300   298.979       -7096.6971     -39015.22      -38672.108    
      5400   287.27885     -12269.189     -39006.173     -38676.488    
      5500   333.26412     -3695.7461     -39030.155     -38647.697    
      5600   314.23442      8649.1891     -39005.548     -38644.929    
      5700   300.21045     -5413.2802     -39026.876     -38682.351    
      5800   307.65967     -2350.162      -39039.364     -38686.291    
      5900   316.8787       5020.3198     -39059.826     -38696.172    
      6000   275.78304     -3287.976      -39035.277     -38718.785    
      6100   294.40724      13623.836     -39048.923     -38711.058    
      6200   292.2331       3031.8834     -39007.942     -38672.572    
      6300   310.56476      1738.9464     -39036.308     -38679.901    
      6400   264.19772      8746.0662     -38995.055     -38691.859    
      6500   312.7729      -3868.8231     -39058.59      -38699.648    
      6600   299.41991     -6710.2353     -39044.643     -38701.025    
      6700   292.60282      333.56594     -39057.259     -38721.464    
      6800   302.69193      20881.305     -39079.947     -38732.574    
      6900   281.96571      9371.4907     -39063.307     -38739.72     
      7000   322.06656     -1435.0528     -39087.626     -38718.019    
      7100   283.37827     -1419.4667     -39015.749     -38690.541    
      7200   317.3592      -8394.1222     -39057.488     -38693.283    
      7300   283.20286      2626.3191     -39034.951     -38709.944    
      7400   294.56888     -8263.7246     -39077.466     -38739.416    
      7500   311.20635     -6114.1979     -39093.991     -38736.847    
      7600   287.26995      2083.9302     -39060.89      -38731.216    
      7700   321.47338      2112.815      -39093.216     -38724.289    
      7800   281.20394      1179.3517     -39038.671     -38715.958    
      7900   314.59852     -8742.2302     -39051.12      -38690.083    
      8000   328.87828      1277.5061     -39063.135     -38685.71     
      8100   284.8025      -12332.767     -39060.683     -38733.84     
      8200   302.23273     -5510.3325     -39079.194     -38732.349    
      8300   274.16959     -2766.1889     -39027.262     -38712.622    
      8400   315.56519     -5701.6511     -39058.992     -38696.845    
      8500   304.48531     -539.34066     -39043.985     -38694.554    
      8600   285.67893      4623.9538     -39051.015     -38723.167    
      8700   307.9454       1505.1226     -39104.498     -38751.096    
      8800   284.98533     -9980.0381     -39083.251     -38756.198    
      8900   292.72157     -8060.8726     -39097.899     -38761.968    
      9000   326.41031      9549.0052     -39170.88      -38796.288    
      9100   303.3466      -7344.5342     -39169.141     -38821.017    
      9200   297.04342      206.88778     -39148.403     -38807.513    
      9300   303.62061     -758.70682     -39130.954     -38782.516    
      9400   308.88344     -835.14539     -39126.907     -38772.428    
      9500   306.83743      11357.353     -39132.6       -38780.47     
      9600   305.95875     -4094.8431     -39138.466     -38787.344    
      9700   281.40936      1780.2061     -39154.387     -38831.438    
      9800   275.90635     -453.74256     -39145.369     -38828.736    
      9900   282.96937     -11998.062     -39136.172     -38811.433    
     10000   305.98136     -7330.2256     -39142.979     -38791.832    
     10100   314.14435      10910.532     -39147.2       -38786.684    
     10200   335.767       -652.20148     -39150.295     -38764.965    
     10300   299.59589     -7933.8887     -39104.299     -38760.48     
     10400   276.77967     -3379.9293     -39114.118     -38796.482    
     10500   286.33435      1065.6806     -39141.454     -38812.853    
     10600   314.61011      2065.9639     -39174.679     -38813.629    
     10700   312.23491      5441.6365     -39165.927     -38807.602    
     10800   292.33832      13544.342     -39132.057     -38796.566    
     10900   301.54253     -9547.9428     -39126.594     -38780.54     
     11000   286.8649      -3449.6809     -39111.881     -38782.671    
     11100   305.65247     -317.3166      -39168.572     -38817.802    
     11200   307.67784     -12739.053     -39183.208     -38830.113    
     11300   269.37781      5565.317      -39151.484     -38842.343    
     11400   273.94479      5467.2566     -39156.935     -38842.553    
     11500   311.09831      2965.6655     -39156.2       -38799.18     
     11600   292.47927      4181.5582     -39124.863     -38789.211    
     11700   293.82361      6046.0423     -39143.26      -38806.065    
     11800   280.54392     -6125.2033     -39157.7       -38835.744    
     11900   297.31048      12035.262     -39185.433     -38844.236    
     12000   284.43129      107.15103     -39161.432     -38835.016    
     12100   296.36189      897.00915     -39160.359     -38820.251    
     12200   295.43385     -5913.2041     -39157.334     -38818.291    
     12300   321.30635      7215.3186     -39196.488     -38827.753    
     12400   317.52654      400.16278     -39217.109     -38852.712    
     12500   283.51416      2555.6399     -39198.049     -38872.685    
     12600   292.19741     -1788.233      -39206.377     -38871.048    
     12700   301.93959      1727.1849     -39202.711     -38856.201    
     12800   317.98666     -2586.3545     -39204.997     -38840.072    
     12900   318.29798     -7295.5846     -39221.488     -38856.206    
     13000   328.2427      -1543.3622     -39270.253     -38893.558    
     13100   361.13349      10324.703     -39353.342     -38938.901    
     13200   306.48207      1575.1102     -39343.755     -38992.033    
     13300   296.09057      13131.6       -39366.514     -39026.716    
     13400   290.99842     -1689.8619     -39377.639     -39043.685    
     13500   286.14348      1641.7221     -39357.509     -39029.127    
     13600   310.41652     -2493.2159     -39360.457     -39004.219    
     13700   327.58686     -2091.2899     -39380.229     -39004.287    
     13800   287.83899     -7264.9859     -39358.521     -39028.194    
     13900   273.36869     -6127.0243     -39362.119     -39048.398    
     14000   316.95557     -6386.509      -39412.852     -39049.11     
     14100   318.75296      1573.3004     -39408.825     -39043.02     
     14200   312.45748      1208.2812     -39392.47      -39033.89     
     14300   299.59245      2885.1044     -39362.1       -39018.284    
     14400   306.88435      1216.9997     -39338.544     -38986.36     
     14500   320.6141       12461.397     -39370.075     -39002.135    
     14600   308.10961     -3074.1574     -39398.807     -39045.217    
     14700   310.34468      2709.5067     -39416.195     -39060.04     
     14800   299.02247      5945.5156     -39417.022     -39073.86     
     14900   312.74642      2430.7862     -39428.438     -39069.527    
     15000   294.95728     -2210.0162     -39379.001     -39040.505    
     15100   281.81522      2384.9786     -39352.669     -39029.255    
     15200   284.02163      595.46978     -39377.46      -39051.514    
     15300   319.55694     -9455.2236     -39429.57      -39062.843    
     15400   303.38016      2768.756      -39467.01      -39118.847    
     15500   286.43633      6474.0929     -39470.741     -39142.023    
     15600   283.94678     -7321.221      -39480.438     -39154.577    
     15700   301.74124      3215.5239     -39497.504     -39151.222    
     15800   303.88746      11575.833     -39478.244     -39129.499    
     15900   317.88134     -1694.5679     -39474.127     -39109.323    
     16000   295.2207       940.46587     -39448.175     -39109.376    
     16100   302.31716     -774.39166     -39487.309     -39140.367    
     16200   308.13508      10327.491     -39521.358     -39167.739    
     16300   298.73845     -1078.4074     -39510.567     -39167.732    
     16400   309.19098     -9902.8475     -39501.075     -39146.244    
     16500   321.74684      11609.362     -39513.125     -39143.884    
     16600   300.65185     -4482.5952     -39513.008     -39167.976    
     16700   282.09324      1514.1755     -39518.315     -39194.581    
     16800   300.78614     -8544.6207     -39518.07      -39172.884    
     16900   301.11535     -5605.9748     -39493.878     -39148.314    
     17000   296.20378     -4828.4256     -39477.1       -39137.173    
     17100   303.99069      909.87887     -39494.067     -39145.204    
     17200   303.82029      962.71819     -39515.952     -39167.285    
     17300   273.35713     -4217.4278     -39513.84      -39200.132    
     17400   268.42324      1589.54       -39493.282     -39185.237    
     17500   295.59813      87.266415     -39497.981     -39158.749    
     17600   301.55949      5169.6585     -39486.096     -39140.023    
     17700   309.32732      2303.4269     -39484.504     -39129.517    
     17800   287.15747     -6828.9256     -39470.936     -39141.391    
     17900   292.90956      849.17745     -39507.453     -39171.306    
     18000   278.14231     -313.41176     -39508.951     -39189.751    
     18100   296.94714     -12070.405     -39496.397     -39155.617    
     18200   293.5405      -7477.8798     -39471.25      -39134.38     
     18300   309.71419      2808.9887     -39490.188     -39134.756    
     18400   313.60525      6072.2992     -39507.673     -39147.775    
     18500   267.01192     -9009.7906     -39470.987     -39164.56     
     18600   294.88599      465.17243     -39509.063     -39170.648    
     18700   305.87847     -3138.0035     -39488.894     -39137.864    
     18800   331.68954      11709.295     -39505.567     -39124.916    
     18900   292.20459     -6997.9549     -39478.685     -39143.348    
     19000   275.56472     -2927.2671     -39468.544     -39152.303    
     19100   318.12186     -1113.5176     -39508.331     -39143.251    
     19200   323.56778      8072.53       -39477.753     -39106.423    
     19300   309.57921      10564.997     -39465.521     -39110.244    
     19400   289.46813      12023.387     -39468.473     -39136.276    
     19500   305.24955      4394.6078     -39507.992     -39157.684    
     19600   301.8537      -8248.9597     -39504.585     -39158.174    
     19700   307.90346      1089.2858     -39499.437     -39146.083    
     19800   308.85373      5158.2496     -39486.087     -39131.643    
     19900   299.57881     -2138.4059     -39465.523     -39121.723    
     20000   314.53065      3791.4186     -39478.623     -39117.664    
Loop time of 682.279 on 4 procs for 20000 steps with 386 atoms

Performance: 1.266 ns/day, 18.952 hours/ns, 29.314 timesteps/s, 11.315 katom-step/s
98.8% CPU use with 4 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 569.25     | 575.84     | 578.54     |  15.9 | 84.40
Bond    | 0.044294   | 0.044858   | 0.045516   |   0.2 |  0.01
Neigh   | 12.366     | 12.56      | 13.086     |   8.6 |  1.84
Comm    | 9.4958     | 12.189     | 18.785     | 109.4 |  1.79
Output  | 0.071771   | 0.17842    | 0.34428    |  26.5 |  0.03
Modify  | 80.576     | 80.997     | 81.252     |   2.9 | 11.87
Other   |            | 0.4725     |            |       |  0.07

Nlocal:           96.5 ave         100 max          91 min
Histogram: 1 0 0 0 0 0 1 1 0 1
Nghost:        3755.25 ave        3780 max        3728 min
Histogram: 1 0 0 1 0 0 0 1 0 1
Neighs:          56618 ave       58468 max       53669 min
Histogram: 1 0 0 0 0 0 1 1 0 1

Total # of neighbors = 226472
Ave neighs/atom = 586.71503
Ave special neighs/atom = 0
Neighbor list builds = 433
Dangerous builds = 0
# Save the equilibrated structure
write_data ${structure}_eq.data
write_data 333U-50C-9_eq.data
System init for write_data ...
WARNING: Compute rdf cutoff less than neighbor cutoff - forcing a needless neighbor list build (src/compute_rdf.cpp:179)
undump dump_eq
unfix myMSD
unfix myRDF

Total wall time: 0:11:29
