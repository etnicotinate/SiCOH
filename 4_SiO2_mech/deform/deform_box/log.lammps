LAMMPS (2 Aug 2023 - Update 2)
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:98)
  using 1 OpenMP thread(s) per MPI task
# Initialization
units           real
dimension       3
boundary        p p p
atom_style      full
timestep        0.5   # fs

# Define MD parameters
variable nevery equal 10                  # sampling interval
variable nrepeat equal 10                 # number of samples
variable nfreq equal ${nevery}*${nrepeat} # length of one average
variable nfreq equal 10*${nrepeat} 
variable nfreq equal 10*10 
variable nthermo equal ${nfreq}           # interval for thermo output
variable nthermo equal 100           
# 1 ps : 1e3 fs / 0.5 fs = 2e3 steps
variable nequil equal 50*${nthermo}       # steps of equilibration run 10
variable nequil equal 50*100       
variable nrun equal 50*${nthermo}          # stpes of equilibrated run 10
variable nrun equal 50*100          
variable temp equal 300.0                # temperature of initial sample
variable tdamp equal 50.0                 # time constant for thermostat
variable seed equal 123456                # seed for thermostat
variable ufac equal 1.01325e-4         # pressure unit conversion, from atm to Gpa
variable up equal 0.02                  # the deformation magnitude 0.01

# Read the initial sctructure
# box tilt large
variable structure string 333SiO2-1-UFF-c
read_data       ${structure}.data
read_data       333SiO2-1-UFF-c.data
Reading data file ...
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  reading atoms ...
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.001 seconds
  read_data CPU = 0.007 seconds

# Energy minimization
print "*****Minimization starts.*****"
*****Minimization starts.*****
minimize 1.0e-6 1.0e-6 100 1000
WARNING: No pairwise cutoff or binsize set. Atom sorting therefore disabled. (src/atom.cpp:2366)
WARNING: Communication cutoff is 0.0. No ghost atoms will be generated. Atoms may get lost. (src/comm_brick.cpp:210)
Per MPI rank memory allocation (min/avg/max) = 6.364 | 6.364 | 6.364 Mbytes
   Step          Temp          E_pair         E_mol          TotEng         Press     
         0   0              0              0              0              0            
         1   0              0              0              0              0            
Loop time of 6.86281e-05 on 8 procs for 1 steps with 243 atoms

47.9% CPU use with 8 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = search direction is not downhill
  Energy initial, next-to-last, final = 
                     0                  0                  0
  Force two-norm initial, final = 0 0
  Force max component initial, final = 0 0
  Final line search alpha, max atom move = 0 0
  Iterations, force evaluations = 1 0

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0          | 0          | 0          |   0.0 |  0.00
Bond    | 9.08e-07   | 1.9905e-06 | 2.724e-06  |   0.0 |  2.90
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 7.961e-06  | 9.2181e-06 | 1.0336e-05 |   0.0 | 13.43
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 5.742e-05  |            |       | 83.67

Nlocal:         30.375 ave          33 max          24 min
Histogram: 1 0 0 0 0 0 4 0 0 3
Nghost:           2.25 ave           5 max           0 min
Histogram: 2 0 1 0 2 0 0 0 2 1
Neighs:              0 ave           0 max           0 min
Histogram: 8 0 0 0 0 0 0 0 0 0

Total # of neighbors = 0
Ave neighs/atom = 0
Ave special neighs/atom = 0
Neighbor list builds = 0
Dangerous builds = 0
min_style cg
# Save the optimized structure
write_data ${structure}_opt.data
write_data 333SiO2-1-UFF-c_opt.data
System init for write_data ...
WARNING: Communication cutoff is 0.0. No ghost atoms will be generated. Atoms may get lost. (src/comm_brick.cpp:210)
velocity        all create ${temp} ${seed} dist gaussian
velocity        all create 300 ${seed} dist gaussian
velocity        all create 300 123456 dist gaussian

# Equilibration
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
# pair_coeff * * CHONSSi.ff O Si
# pair_coeff * * CHOSiNa.ff O Si
# pair_coeff * * SiOCHN_2018.ff O Si
# pair_coeff * * PDMSDecomp.ff Si O
# pair_coeff * * CHONSi.ff C H O Si
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press density vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50

if "$(is_defined(fix,avgp))" then "unfix avgp"
unfix avgp
if "$(is_defined(fix,avgl))" then "unfix avgl"
run ${nequil}
run 5000

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Your simulation uses code contributions which should be cited:

- pair reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 number =  {4--5},
 pages =   {245--259}
}

- fix qeq/reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 pages =   {245--259}
}

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 105.6 | 105.7 | 105.7 Mbytes
   Step          Temp          PotEng         Press         Density         Volume    
         0   300           -36881.566      21554.577      2.8878482      2983.7813    
       100   188.92841     -36766.953      5351.66        2.8878482      2983.7813    
       200   220.17517     -36750.933      6628.2604      2.8878482      2983.7813    
       300   259.04458     -36733.086      24080.827      2.8878482      2983.7813    
       400   289.17541     -36705.855      13039.752      2.8878482      2983.7813    
       500   301.20525     -36684.69       5557.591       2.8878482      2983.7813    
       600   337.64612     -36722.546      24937.629      2.8878482      2983.7813    
       700   262.25244     -36685.464      8514.1306      2.8878482      2983.7813    
       800   303.58661     -36729.653      9224.5062      2.8878482      2983.7813    
       900   303.53131     -36731.747      21885.818      2.8878482      2983.7813    
      1000   275.51689     -36706.054      11406.564      2.8878482      2983.7813    
      1100   315.29591     -36725.512      8174.335       2.8878482      2983.7813    
      1200   292.4403      -36702.435      16606.339      2.8878482      2983.7813    
      1300   326.86861     -36716.761      12324.341      2.8878482      2983.7813    
      1400   302.07333     -36718.492      7818.064       2.8878482      2983.7813    
      1500   295.77161     -36730.308      17114.932      2.8878482      2983.7813    
      1600   295.38293     -36725.196      15303.376      2.8878482      2983.7813    
      1700   310.64709     -36722.485      1418.6052      2.8878482      2983.7813    
      1800   325.95023     -36706.496      17625.294      2.8878482      2983.7813    
      1900   322.96109     -36707.433      22823.018      2.8878482      2983.7813    
      2000   269.2476      -36686.467      1379.4091      2.8878482      2983.7813    
      2100   309.05274     -36727.01       17007.84       2.8878482      2983.7813    
      2200   277.71877     -36717.881      21799.909      2.8878482      2983.7813    
      2300   286.46727     -36715.847      5435.5758      2.8878482      2983.7813    
      2400   324.81156     -36711.444      12085.192      2.8878482      2983.7813    
      2500   336.10452     -36719.593      17882.271      2.8878482      2983.7813    
      2600   289.64372     -36703.223      8169.8138      2.8878482      2983.7813    
      2700   291.06208     -36719.583      9075.3683      2.8878482      2983.7813    
      2800   284.40836     -36720.206      17765.921      2.8878482      2983.7813    
      2900   308.56812     -36716.879      5228.89        2.8878482      2983.7813    
      3000   320.40773     -36698.22       10137.855      2.8878482      2983.7813    
      3100   338.75784     -36687.928      24007.836      2.8878482      2983.7813    
      3200   301.10747     -36687.288      15067.773      2.8878482      2983.7813    
      3300   305.66365     -36710.857      6443.1668      2.8878482      2983.7813    
      3400   287.29009     -36721.381      14109.492      2.8878482      2983.7813    
      3500   283.27658     -36725.209      6558.1615      2.8878482      2983.7813    
      3600   269.03701     -36701.525      14563.801      2.8878482      2983.7813    
      3700   317.97571     -36712.586      21820.584      2.8878482      2983.7813    
      3800   328.47308     -36721.732      11583.386      2.8878482      2983.7813    
      3900   316.73802     -36724.376      7638.6654      2.8878482      2983.7813    
      4000   294.68577     -36723.011      16797.446      2.8878482      2983.7813    
      4100   297.06823     -36721.302      14147.719      2.8878482      2983.7813    
      4200   302.48055     -36718.009      13576.311      2.8878482      2983.7813    
      4300   289.56764     -36708.146      7485.8817      2.8878482      2983.7813    
      4400   302.65257     -36722.547      17276.398      2.8878482      2983.7813    
      4500   314.70552     -36722.055      8748.1595      2.8878482      2983.7813    
      4600   328.29307     -36704.952      10984.164      2.8878482      2983.7813    
      4700   307.09123     -36689.898      20453.104      2.8878482      2983.7813    
      4800   302.1728      -36711.375      11416.31       2.8878482      2983.7813    
      4900   309.98131     -36730.389      5262.7578      2.8878482      2983.7813    
      5000   286.93432     -36714.921      17074.682      2.8878482      2983.7813    
Loop time of 119.174 on 8 procs for 5000 steps with 243 atoms

Performance: 1.812 ns/day, 13.242 hours/ns, 41.955 timesteps/s, 10.195 katom-step/s
98.7% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 93.286     | 95.864     | 98.964     |  22.2 | 80.44
Bond    | 0.010796   | 0.011571   | 0.012435   |   0.5 |  0.01
Neigh   | 7.8675     | 7.8864     | 7.9107     |   0.5 |  6.62
Comm    | 1.4816     | 4.5831     | 7.1625     | 101.8 |  3.85
Output  | 0.0016045  | 0.0017269  | 0.0025204  |   0.7 |  0.00
Modify  | 10.711     | 10.739     | 10.758     |   0.5 |  9.01
Other   |            | 0.08879    |            |       |  0.07

Nlocal:         30.375 ave          32 max          27 min
Histogram: 2 0 0 0 0 0 0 0 3 3
Nghost:        2712.25 ave        2725 max        2703 min
Histogram: 1 0 1 2 1 2 0 0 0 1
Neighs:        17581.4 ave       18519 max       15647 min
Histogram: 2 0 0 0 0 0 0 2 1 3

Total # of neighbors = 140651
Ave neighs/atom = 578.8107
Ave special neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked
# Save the equilibrated structure
write_data ${structure}_eq.data
write_data 333SiO2-1-UFF-c_eq.data
System init for write_data ...

# use tmp to save initial length and tilt
variable tmp equal lx
variable lx0 equal ${tmp}
variable lx0 equal 14.6913
variable tmp equal ly
variable ly0 equal ${tmp}
variable ly0 equal 12.723
variable tmp equal lz
variable lz0 equal ${tmp}
variable lz0 equal 15.9631

variable tmp equal yz
variable yz0 equal ${tmp}
variable yz0 equal 0
variable tmp equal xz
variable xz0 equal ${tmp}
variable xz0 equal 0
variable tmp equal xy
variable xy0 equal ${tmp}
variable xy0 equal -7.3456

# Write restart
write_restart equil.res
System init for write_restart ...

# dir: direction
# uxx Perturbation
variable dir equal 1
include displace.mod.lmp
# # Find which reference length to use
# if "${dir} == 1" then #    "variable len0 equal ${lx0}"
# if "${dir} == 2" then #    "variable len0 equal ${ly0}"
# if "${dir} == 3" then #    "variable len0 equal ${lz0}"
# if "${dir} == 4" then #    "variable len0 equal ${lz0}"
# if "${dir} == 5" then #    "variable len0 equal ${lz0}"
# if "${dir} == 6" then #    "variable len0 equal ${ly0}"

# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
variable len0 equal ${lx0}
variable len0 equal 14.6913
variable dlen equal lx-${len0}
variable dlen equal lx-14.6913
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:98)
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.02*${len0}
variable delta equal -0.02*14.6913
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.02*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.02*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.02*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.3456000000000001293, deltaxy = 0.146912
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0, deltaxz = -0
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0, deltayz = -0
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.293826 xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.293826 xy delta 0.146912 xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.293826 xy delta 0.146912 xz delta -0 remap v units box flip no
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 1 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
# pair_coeff * * CHONSSi.ff O Si
# pair_coeff * * CHOSiNa.ff O Si
# pair_coeff * * SiOCHN_2018.ff O Si
# pair_coeff * * PDMSDecomp.ff Si O
# pair_coeff * * CHONSi.ff C H O Si
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press density vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50
Resetting global fix info from restart file:
  fix style: nvt, fix ID: fnvt


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg1.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg1.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom ${nthermo} dump/neg_deform${dir}.lammpstrj id type q x y z
dump dump_neg1 all custom ${nthermo} dump/neg_deform${dir}.lammpstrj id type q x y z
dump dump_neg1 all custom 100 dump/neg_deform${dir}.lammpstrj id type q x y z
dump dump_neg1 all custom 100 dump/neg_deform1.lammpstrj id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
All restart file global fix info was re-assigned
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 105.8 | 106.1 | 106.4 Mbytes
   Step          Temp          PotEng         Press         Density         Volume    
         0   286.93432     -36714.921      17074.236      2.8878482      2983.7813    
       100   278.43129     -36693.916      15477.116      2.8890038      2982.5878    
       200   302.20795     -36700.457      6261.2358      2.8901603      2981.3943    
       300   307.49038     -36707.355      23926.205      2.8913177      2980.2008    
       400   295.19951     -36721.772      19078.263      2.8924761      2979.0073    
       500   280.83893     -36714.744      4841.5679      2.8936354      2977.8137    
       600   290.96229     -36718.49       18066.602      2.8947957      2976.6202    
       700   304.12183     -36707.224      15286.135      2.8959568      2975.4267    
       800   317.52204     -36695.116      11505.347      2.8971189      2974.2332    
       900   317.52068     -36707.24       7253.8432      2.898282       2973.0397    
      1000   293.92532     -36702.885      18001.151      2.8994459      2971.8462    
      1100   314.61829     -36719.421      15546.814      2.9006109      2970.6527    
      1200   293.81414     -36718.971      12450.748      2.9017767      2969.4592    
      1300   286.48276     -36728.343      19868.756      2.9029435      2968.2656    
      1400   294.80117     -36730.802      17434.49       2.9041112      2967.0721    
      1500   300.59508     -36700.071      8432.6946      2.9052798      2965.8786    
      1600   300.76272     -36700.368      16688.934      2.9064494      2964.6851    
      1700   295.60977     -36709.047      12170.821      2.90762        2963.4916    
      1800   283.05759     -36715.203      10696.191      2.9087915      2962.2981    
      1900   266.19569     -36711.704      16977.254      2.9099639      2961.1046    
      2000   320.69475     -36726.895      14292.454      2.9111373      2959.9111    
      2100   311.25442     -36702.43       20147.387      2.9123116      2958.7175    
      2200   304.46386     -36702.31       20548.938      2.9134868      2957.524     
      2300   311.40078     -36720.825      15706.242      2.9146631      2956.3305    
      2400   297.75466     -36730.219      11669.422      2.9158402      2955.137     
      2500   265.46795     -36703.189      25546.404      2.9170183      2953.9435    
      2600   311.76271     -36720.127      12797.84       2.9181974      2952.75      
      2700   312.26335     -36708.789      16990.735      2.9193774      2951.5565    
      2800   325.8556      -36718.415      18117.762      2.9205584      2950.363     
      2900   291.56646     -36702.352      17995.335      2.9217404      2949.1694    
      3000   300.65398     -36710.199      17219.48       2.9229232      2947.9759    
      3100   303.9339      -36720.332      22577.518      2.9241071      2946.7824    
      3200   292.40685     -36714.852      25439.694      2.9252919      2945.5889    
      3300   302.83314     -36711.669      16392.099      2.9264777      2944.3954    
      3400   323.37854     -36713.259      18640.778      2.9276644      2943.2019    
      3500   311.3292      -36692.274      23649.922      2.9288521      2942.0084    
      3600   305.67575     -36692.604      25879.052      2.9300407      2940.8149    
      3700   306.40535     -36721.894      18784.94       2.9312304      2939.6213    
      3800   300.55809     -36725.329      18462.208      2.932421       2938.4278    
      3900   297.9487      -36715.718      23971.824      2.9336125      2937.2343    
      4000   315.01334     -36707.245      25466.333      2.934805       2936.0408    
      4100   320.78262     -36699.369      18191.154      2.9359985      2934.8473    
      4200   290.8745      -36705.559      22930.548      2.937193       2933.6538    
      4300   298.16554     -36725.716      19211.731      2.9383884      2932.4603    
      4400   284.06403     -36710.9        23543.536      2.9395849      2931.2668    
      4500   305.11888     -36705.033      21669.944      2.9407822      2930.0732    
      4600   311.00869     -36690.622      29444.095      2.9419806      2928.8797    
      4700   328.29548     -36705.473      14272.923      2.9431799      2927.6862    
      4800   291.49043     -36693.628      24932.084      2.9443803      2926.4927    
      4900   280.34031     -36692.383      27896.04       2.9455816      2925.2992    
      5000   298.87974     -36708.248      20261.166      2.9467838      2924.1057    
Loop time of 120.351 on 8 procs for 5000 steps with 243 atoms

Performance: 1.795 ns/day, 13.372 hours/ns, 41.545 timesteps/s, 10.095 katom-step/s
98.6% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 93.918     | 96.546     | 100.27     |  23.2 | 80.22
Bond    | 0.01076    | 0.011579   | 0.013089   |   0.7 |  0.01
Neigh   | 7.8801     | 7.9329     | 7.9748     |   1.1 |  6.59
Comm    | 0.80957    | 4.5335     | 7.1611     | 106.9 |  3.77
Output  | 0.0073824  | 0.0086698  | 0.010103   |   1.0 |  0.01
Modify  | 11.185     | 11.221     | 11.276     |   0.9 |  9.32
Other   |            | 0.09739    |            |       |  0.08

Nlocal:         30.375 ave          33 max          25 min
Histogram: 1 1 0 0 0 0 1 1 1 3
Nghost:        2737.25 ave        2752 max        2718 min
Histogram: 2 0 0 1 0 0 1 1 2 1
Neighs:          17895 ave       19406 max       14814 min
Histogram: 1 1 0 0 0 0 1 1 1 3

Total # of neighbors = 143160
Ave neighs/atom = 589.1358
Ave special neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg1

# Compute elastic constant from pressure
# d1 = -[pxx1-pxx0]/[(v_delta/v_len0] defined in input script
# variable C1neg equal ${d1}
# variable C2neg equal ${d2}
# variable C3neg equal ${d3}
# variable C4neg equal ${d4}
# variable C5neg equal ${d5}
# variable C6neg equal ${d6}

# Reset box and simulation parameters
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:98)
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.02*${len0}
variable delta equal 0.02*14.6913
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.02*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.02*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.02*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.293826 xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.293826 xy delta -0.146912 xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.293826 xy delta -0.146912 xz delta 0 remap v units box
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 1 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
# pair_coeff * * CHONSSi.ff O Si
# pair_coeff * * CHOSiNa.ff O Si
# pair_coeff * * SiOCHN_2018.ff O Si
# pair_coeff * * PDMSDecomp.ff Si O
# pair_coeff * * CHONSi.ff C H O Si
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press density vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50
Resetting global fix info from restart file:
  fix style: nvt, fix ID: fnvt


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos1.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos1.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom ${nthermo} dump/pos_deform${dir}.lammpstrj id type q x y z
dump dump_pos1 all custom ${nthermo} dump/pos_deform${dir}.lammpstrj id type q x y z
dump dump_pos1 all custom 100 dump/pos_deform${dir}.lammpstrj id type q x y z
dump dump_pos1 all custom 100 dump/pos_deform1.lammpstrj id type q x y z
run ${nrun}
run 5000
All restart file global fix info was re-assigned
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 105.8 | 106.1 | 106.4 Mbytes
   Step          Temp          PotEng         Press         Density         Volume    
         0   286.93432     -36714.921      17074.236      2.8878482      2983.7813    
       100   277.70147     -36693.718      14885.821      2.8866935      2984.9748    
       200   311.87739     -36708.086      2807.592       2.8855397      2986.1683    
       300   319.69935     -36706.448      17347.461      2.8843869      2987.3618    
       400   302.67664     -36706.572      13440.018      2.883235       2988.5554    
       500   304.26995     -36722.409      2798.8051      2.882084       2989.7489    
       600   305.83913     -36733.222      11295.872      2.8809339      2990.9424    
       700   281.99937     -36717.726      10323.123      2.8797848      2992.1359    
       800   302.56841     -36707.942      7008.5492      2.8786365      2993.3294    
       900   306.9691      -36695.334      9721.1202      2.8774892      2994.5229    
      1000   319.42113     -36715.484      10044.989      2.8763428      2995.7164    
      1100   296.60515     -36715.316      6902.7687      2.8751973      2996.9099    
      1200   300.61673     -36727.639      9720.4654      2.8740527      2998.1035    
      1300   281.80498     -36717.748      13278.704      2.872909       2999.297     
      1400   280.79289     -36710.522      10875.731      2.8717663      3000.4905    
      1500   315.83042     -36719.966      4315.8018      2.8706244      3001.684     
      1600   323.6436      -36718.592      14142.271      2.8694835      3002.8775    
      1700   306.12659     -36706.277      10101.541      2.8683434      3004.071     
      1800   303.82292     -36729.91       11635.468      2.8672043      3005.2645    
      1900   265.03857     -36716.188      5779.599       2.8660661      3006.458     
      2000   299.34817     -36729.303      14245.201      2.8649287      3007.6516    
      2100   303.34567     -36714.272      10959.618      2.8637923      3008.8451    
      2200   302.80847     -36703.722      12695.095      2.8626568      3010.0386    
      2300   298.61274     -36701.028      5735.8966      2.8615222      3011.2321    
      2400   319.59328     -36729.34       13750.901      2.8603884      3012.4256    
      2500   295.14824     -36724.659      5869.8713      2.8592556      3013.6191    
      2600   284.71216     -36714.378      9843.3169      2.8581237      3014.8126    
      2700   290.75245     -36711.48       4524.8649      2.8569926      3016.0061    
      2800   313.02791     -36713.092      9627.6789      2.8558625      3017.1997    
      2900   298.73966     -36692.017      3394.1785      2.8547333      3018.3932    
      3000   293.1721      -36704.962      2389.4195      2.8536049      3019.5867    
      3100   286.98039     -36725.559      12205.79       2.8524774      3020.7802    
      3200   280.59615     -36721.424      11060.722      2.8513509      3021.9737    
      3300   274.59136     -36702.228      5923.6158      2.8502252      3023.1672    
      3400   288.95587     -36704.721      15690.976      2.8491004      3024.3607    
      3500   321.56537     -36721.055      3628.7525      2.8479765      3025.5542    
      3600   303.09636     -36709.624      2792.6116      2.8468535      3026.7478    
      3700   291.75358     -36720.614      4857.9091      2.8457313      3027.9413    
      3800   284.68535     -36732.857      6949.0612      2.8446101      3029.1348    
      3900   259.70823     -36702.139      9458.5816      2.8434897      3030.3283    
      4000   328.53358     -36723.729      5634.0172      2.8423702      3031.5218    
      4100   308.43099     -36708.91       5675.8425      2.8412516      3032.7153    
      4200   308.11066     -36720.03       103.9385       2.8401339      3033.9088    
      4300   280.61366     -36709.759      2396.0472      2.8390171      3035.1023    
      4400   308.98587     -36722.545      8080.8647      2.8379011      3036.2959    
      4500   315.94986     -36697.076      1693.318       2.836786       3037.4894    
      4600   342.28464     -36710.523     -445.57169      2.8356718      3038.6829    
      4700   312.04188     -36709.647      4769.9528      2.8345585      3039.8764    
      4800   282.24373     -36695.988      4166.3802      2.833446       3041.0699    
      4900   314.67617     -36715.757      5291.9223      2.8323344      3042.2634    
      5000   311.65529     -36712.208      1486.367       2.8312237      3043.4569    
Loop time of 116.272 on 8 procs for 5000 steps with 243 atoms

Performance: 1.858 ns/day, 12.919 hours/ns, 43.003 timesteps/s, 10.450 katom-step/s
98.7% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 92.061     | 94.001     | 96.701     |  16.3 | 80.85
Bond    | 0.010433   | 0.011402   | 0.01227    |   0.6 |  0.01
Neigh   | 7.827      | 7.8627     | 7.899      |   0.8 |  6.76
Comm    | 0.87206    | 3.5777     | 5.5159     |  83.7 |  3.08
Output  | 0.0075766  | 0.0087536  | 0.010145   |   1.0 |  0.01
Modify  | 10.674     | 10.711     | 10.746     |   0.7 |  9.21
Other   |            | 0.09967    |            |       |  0.09

Nlocal:         30.375 ave          32 max          26 min
Histogram: 1 0 0 1 0 0 0 0 3 3
Nghost:        2702.62 ave        2714 max        2694 min
Histogram: 1 0 2 1 1 1 0 1 0 1
Neighs:        17282.6 ave       18189 max       14858 min
Histogram: 1 0 0 1 0 0 0 0 3 3

Total # of neighbors = 138261
Ave neighs/atom = 568.97531
Ave special neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos1

# # Combine positive and negative
# variable C1${dir} equal 0.5*(${C1neg}+${C1pos})
# variable C2${dir} equal 0.5*(${C2neg}+${C2pos})
# variable C3${dir} equal 0.5*(${C3neg}+${C3pos})
# variable C4${dir} equal 0.5*(${C4neg}+${C4pos})
# variable C5${dir} equal 0.5*(${C5neg}+${C5pos})
# variable C6${dir} equal 0.5*(${C6neg}+${C6pos})

# Delete dir to make sure it is not reused
variable dir delete
# uyy Perturbation
variable dir equal 2
include displace.mod.lmp
# # Find which reference length to use
# if "${dir} == 1" then #    "variable len0 equal ${lx0}"
# if "${dir} == 2" then #    "variable len0 equal ${ly0}"
# if "${dir} == 3" then #    "variable len0 equal ${lz0}"
# if "${dir} == 4" then #    "variable len0 equal ${lz0}"
# if "${dir} == 5" then #    "variable len0 equal ${lz0}"
# if "${dir} == 6" then #    "variable len0 equal ${ly0}"

# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
variable len0 equal ${ly0}
variable len0 equal 12.723
variable dlen equal ly-${len0}
variable dlen equal ly-12.723
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:98)
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.02*${len0}
variable delta equal -0.02*12.723
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.02*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.02*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.02*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.3456000000000001293, deltaxy = 0.146912
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0, deltaxz = -0
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0, deltayz = -0
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 -0.25446 yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 -0.25446 yz delta -0 remap v units box flip no
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 2 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
# pair_coeff * * CHONSSi.ff O Si
# pair_coeff * * CHOSiNa.ff O Si
# pair_coeff * * SiOCHN_2018.ff O Si
# pair_coeff * * PDMSDecomp.ff Si O
# pair_coeff * * CHONSi.ff C H O Si
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press density vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50
Resetting global fix info from restart file:
  fix style: nvt, fix ID: fnvt


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg2.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg2.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom ${nthermo} dump/neg_deform${dir}.lammpstrj id type q x y z
dump dump_neg2 all custom ${nthermo} dump/neg_deform${dir}.lammpstrj id type q x y z
dump dump_neg2 all custom 100 dump/neg_deform${dir}.lammpstrj id type q x y z
dump dump_neg2 all custom 100 dump/neg_deform2.lammpstrj id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
All restart file global fix info was re-assigned
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 105.8 | 106.1 | 106.4 Mbytes
   Step          Temp          PotEng         Press         Density         Volume    
         0   286.93432     -36714.921      17074.236      2.8878482      2983.7813    
       100   277.85779     -36693.558      15001.206      2.8890038      2982.5878    
       200   311.79143     -36706.549      3564.0268      2.8901603      2981.3943    
       300   309.78        -36708.881      22840.038      2.8913177      2980.2008    
       400   281.08876     -36714.099      18897.948      2.8924761      2979.0073    
       500   297.46868     -36728.07       1881.7278      2.8936354      2977.8137    
       600   276.03839     -36707.353      15007.946      2.8947957      2976.6202    
       700   304.68653     -36706.032      17340.442      2.8959568      2975.4267    
       800   312.31865     -36695.58       13239.085      2.8971189      2974.2332    
       900   331.90339     -36709.361      14131.456      2.898282       2973.0397    
      1000   308.55266     -36726.872      13113.82       2.8994459      2971.8462    
      1100   291.53356     -36724.545      13871.983      2.9006109      2970.6527    
      1200   300.10775     -36727.242      13228.785      2.9017767      2969.4592    
      1300   293.4958      -36704.933      13559.95       2.9029435      2968.2656    
      1400   318.10503     -36703.671      9758.9518      2.9041112      2967.0721    
      1500   308.56426     -36701.466      20794.321      2.9052798      2965.8786    
      1600   289.72738     -36724.178      19261.224      2.9064494      2964.6851    
      1700   295.54246     -36728.371      14566.872      2.90762        2963.4916    
      1800   280.10487     -36703.239      16974.367      2.9087915      2962.2981    
      1900   305.00051     -36704.5        20419.332      2.9099639      2961.1046    
      2000   305.07384     -36704.555      20072.383      2.9111373      2959.9111    
      2100   286.42673     -36700.75       13603.71       2.9123116      2958.7175    
      2200   297.92205     -36736.372      15289.053      2.9134868      2957.524     
      2300   265.04083     -36727.551      16171.562      2.9146631      2956.3305    
      2400   292.64929     -36727.346      17280.464      2.9158402      2955.137     
      2500   292.1293      -36708.337      20994.29       2.9170183      2953.9435    
      2600   294.40598     -36699.682      26460.973      2.9181974      2952.75      
      2700   311.08078     -36706.685      9666.6056      2.9193774      2951.5565    
      2800   285.75778     -36708.904      22872.812      2.9205584      2950.363     
      2900   271.44288     -36721.677      23385.93       2.9217404      2949.1694    
      3000   299.81202     -36735.578      12897.985      2.9229232      2947.9759    
      3100   293.7298      -36710.895      14858.02       2.9241071      2946.7824    
      3200   302.60784     -36713.634      22228.144      2.9252919      2945.5889    
      3300   300.12934     -36709.772      16295.591      2.9264777      2944.3954    
      3400   311.83589     -36718.667      19779.482      2.9276644      2943.2019    
      3500   261.29387     -36692.506      17440.288      2.9288521      2942.0084    
      3600   289.30512     -36715.008      23736.368      2.9300407      2940.8149    
      3700   298.6725      -36712.31       16882.061      2.9312304      2939.6213    
      3800   312.79402     -36705.732      21140.323      2.932421       2938.4278    
      3900   341.30483     -36709.478      18196.66       2.9336125      2937.2343    
      4000   302.26747     -36703.697      24101.031      2.934805       2936.0408    
      4100   296.21253     -36716.528      21703.842      2.9359985      2934.8473    
      4200   295.96939     -36713.056      20445.464      2.937193       2933.6538    
      4300   309.18454     -36716.354      15326.392      2.9383884      2932.4603    
      4400   300.2321      -36700.757      29338.158      2.9395849      2931.2668    
      4500   337.6007      -36701.507      15496.592      2.9407822      2930.0732    
      4600   308.10843     -36689.64       24087.411      2.9419806      2928.8797    
      4700   302.74051     -36720.1        23616.573      2.9431799      2927.6862    
      4800   273.27056     -36700.47       22275.074      2.9443803      2926.4927    
      4900   309.86554     -36711.178      16306.344      2.9455816      2925.2992    
      5000   298.7745      -36691.834      31951.579      2.9467838      2924.1057    
Loop time of 121.045 on 8 procs for 5000 steps with 243 atoms

Performance: 1.784 ns/day, 13.449 hours/ns, 41.307 timesteps/s, 10.038 katom-step/s
98.7% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 93.313     | 96.515     | 100.71     |  25.5 | 79.74
Bond    | 0.01026    | 0.011634   | 0.012379   |   0.6 |  0.01
Neigh   | 7.9206     | 7.9779     | 8.0242     |   1.1 |  6.59
Comm    | 0.79583    | 4.9922     | 8.1966     | 112.2 |  4.12
Output  | 0.007529   | 0.008926   | 0.010438   |   1.1 |  0.01
Modify  | 11.394     | 11.442     | 11.497     |   0.9 |  9.45
Other   |            | 0.097      |            |       |  0.08

Nlocal:         30.375 ave          34 max          27 min
Histogram: 1 1 0 0 3 1 0 0 1 1
Nghost:        2747.25 ave        2766 max        2721 min
Histogram: 1 0 1 1 0 1 0 1 1 2
Neighs:        17897.4 ave       19965 max       15956 min
Histogram: 1 1 0 0 3 1 0 0 1 1

Total # of neighbors = 143179
Ave neighs/atom = 589.21399
Ave special neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg2

# Compute elastic constant from pressure
# d1 = -[pxx1-pxx0]/[(v_delta/v_len0] defined in input script
# variable C1neg equal ${d1}
# variable C2neg equal ${d2}
# variable C3neg equal ${d3}
# variable C4neg equal ${d4}
# variable C5neg equal ${d5}
# variable C6neg equal ${d6}

# Reset box and simulation parameters
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:98)
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.02*${len0}
variable delta equal 0.02*12.723
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.02*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.02*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.02*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 ${delta} yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 0.25446 yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 0.25446 yz delta 0 remap v units box
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 2 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
# pair_coeff * * CHONSSi.ff O Si
# pair_coeff * * CHOSiNa.ff O Si
# pair_coeff * * SiOCHN_2018.ff O Si
# pair_coeff * * PDMSDecomp.ff Si O
# pair_coeff * * CHONSi.ff C H O Si
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press density vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50
Resetting global fix info from restart file:
  fix style: nvt, fix ID: fnvt


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos2.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos2.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom ${nthermo} dump/pos_deform${dir}.lammpstrj id type q x y z
dump dump_pos2 all custom ${nthermo} dump/pos_deform${dir}.lammpstrj id type q x y z
dump dump_pos2 all custom 100 dump/pos_deform${dir}.lammpstrj id type q x y z
dump dump_pos2 all custom 100 dump/pos_deform2.lammpstrj id type q x y z
run ${nrun}
run 5000
All restart file global fix info was re-assigned
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 105.8 | 106.1 | 106.4 Mbytes
   Step          Temp          PotEng         Press         Density         Volume    
         0   286.93432     -36714.921      17074.236      2.8878482      2983.7813    
       100   278.02946     -36693.964      15497.577      2.8866935      2984.9748    
       200   301.63157     -36700.758      4202.3376      2.8855397      2986.1683    
       300   313.41687     -36701.799      14274.257      2.8843869      2987.3618    
       400   313.71825     -36710.421      15831.722      2.883235       2988.5554    
       500   294.20089     -36712.471      8732.872       2.882084       2989.7489    
       600   282.11591     -36719.053      19143.569      2.8809339      2990.9424    
       700   284.42072     -36717.075      15109.993      2.8797848      2992.1359    
       800   316.41191     -36709.097      6957.6872      2.8786365      2993.3294    
       900   314.4994      -36702.378      10307.848      2.8774892      2994.5229    
      1000   297.64827     -36706.597      20806.422      2.8763428      2995.7164    
      1100   295.64929     -36715.89       8645.1563      2.8751973      2996.9099    
      1200   301.3568      -36721.422      4078.5149      2.8740527      2998.1035    
      1300   285.78972     -36712.861      10878.228      2.872909       2999.297     
      1400   313.89133     -36719.657      9040.9019      2.8717663      3000.4905    
      1500   314.20601     -36699.12       6097.7862      2.8706244      3001.684     
      1600   333.74386     -36709.637      9633.9375      2.8694835      3002.8775    
      1700   281.55699     -36716.194      12004.79       2.8683434      3004.071     
      1800   282.70103     -36721.902      6107.6308      2.8672043      3005.2645    
      1900   283.07822     -36708.907      7199.0743      2.8660661      3006.458     
      2000   307.70774     -36707.457      9170.1069      2.8649287      3007.6516    
      2100   315.16473     -36706.271      9218.2649      2.8637923      3008.8451    
      2200   293.90284     -36707.907      4643.6839      2.8626568      3010.0386    
      2300   290.64587     -36727.199      7835.5031      2.8615222      3011.2321    
      2400   274.64286     -36733.304      9824.7814      2.8603884      3012.4256    
      2500   262.19062     -36737.267      1717.9841      2.8592556      3013.6191    
      2600   268.81936     -36723.135      3791.8478      2.8581237      3014.8126    
      2700   296.7362      -36721.171      10189.317      2.8569926      3016.0061    
      2800   303.59415     -36707.222      3152.3554      2.8558625      3017.1997    
      2900   291.7835      -36690.285      1936.393       2.8547333      3018.3932    
      3000   322.79227     -36719.939      11978.02       2.8536049      3019.5867    
      3100   297.10203     -36719.625      6479.3702      2.8524774      3020.7802    
      3200   265.58109     -36711.071      1767.0261      2.8513509      3021.9737    
      3300   325.85        -36750.52       6132.3703      2.8502252      3023.1672    
      3400   311.44648     -36706.499      10768.833      2.8491004      3024.3607    
      3500   323.88922     -36702.84       2016.8939      2.8479765      3025.5542    
      3600   306.45625     -36704.861      507.66879      2.8468535      3026.7478    
      3700   313.63284     -36728.071      11480.493      2.8457313      3027.9413    
      3800   282.16548     -36708.626      5915.1635      2.8446101      3029.1348    
      3900   294.47612     -36712.252      2059.5918      2.8434897      3030.3283    
      4000   294.12128     -36695.711      9338.2051      2.8423702      3031.5218    
      4100   328.78203     -36692.01       8313.9607      2.8412516      3032.7153    
      4200   326.55868     -36694.989      1079.3958      2.8401339      3033.9088    
      4300   296.0865      -36693.856      9808.6916      2.8390171      3035.1023    
      4400   286.03854     -36706.811      1424.126       2.8379011      3036.2959    
      4500   299.84849     -36721.925      2782.6498      2.836786       3037.4894    
      4600   299.48053     -36720.165      1302.3297      2.8356718      3038.6829    
      4700   285.92194     -36698.391      3633.3185      2.8345585      3039.8764    
      4800   326.22546     -36702.065      2937.3421      2.833446       3041.0699    
      4900   306.1987      -36695.86      -1871.6504      2.8323344      3042.2634    
      5000   297.90719     -36709.743      2646.882       2.8312237      3043.4569    
Loop time of 103.934 on 8 procs for 5000 steps with 243 atoms

Performance: 2.078 ns/day, 11.548 hours/ns, 48.107 timesteps/s, 11.690 katom-step/s
98.6% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 79.032     | 81.933     | 84.402     |  19.3 | 78.83
Bond    | 0.0092475  | 0.009625   | 0.009819   |   0.2 |  0.01
Neigh   | 7.6782     | 7.7307     | 7.7873     |   1.3 |  7.44
Comm    | 1.0396     | 3.5086     | 6.4072     |  93.1 |  3.38
Output  | 0.0088887  | 0.01004    | 0.011467   |   0.9 |  0.01
Modify  | 10.593     | 10.649     | 10.698     |   1.0 | 10.25
Other   |            | 0.09344    |            |       |  0.09

Nlocal:         30.375 ave          34 max          27 min
Histogram: 2 1 0 0 0 3 0 0 0 2
Nghost:        2671.12 ave        2689 max        2654 min
Histogram: 3 0 1 0 0 0 0 0 2 2
Neighs:        17276.1 ave       19291 max       15384 min
Histogram: 2 1 0 0 0 3 0 0 0 2

Total # of neighbors = 138209
Ave neighs/atom = 568.76132
Ave special neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos2

# # Combine positive and negative
# variable C1${dir} equal 0.5*(${C1neg}+${C1pos})
# variable C2${dir} equal 0.5*(${C2neg}+${C2pos})
# variable C3${dir} equal 0.5*(${C3neg}+${C3pos})
# variable C4${dir} equal 0.5*(${C4neg}+${C4pos})
# variable C5${dir} equal 0.5*(${C5neg}+${C5pos})
# variable C6${dir} equal 0.5*(${C6neg}+${C6pos})

# Delete dir to make sure it is not reused
variable dir delete
# uzz Perturbation
variable dir equal 3
include displace.mod.lmp
# # Find which reference length to use
# if "${dir} == 1" then #    "variable len0 equal ${lx0}"
# if "${dir} == 2" then #    "variable len0 equal ${ly0}"
# if "${dir} == 3" then #    "variable len0 equal ${lz0}"
# if "${dir} == 4" then #    "variable len0 equal ${lz0}"
# if "${dir} == 5" then #    "variable len0 equal ${lz0}"
# if "${dir} == 6" then #    "variable len0 equal ${ly0}"

# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
variable len0 equal ${lz0}
variable len0 equal 15.9631
variable dlen equal lz-${len0}
variable dlen equal lz-15.9631
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:98)
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.02*${len0}
variable delta equal -0.02*15.9631
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.02*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.02*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.02*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.3456000000000001293, deltaxy = 0.146912
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0, deltaxz = -0
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0, deltayz = -0
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no
fix deform_n all deform 100 z delta 0 ${delta} remap v units box flip no
fix deform_n all deform 100 z delta 0 -0.319262 remap v units box flip no
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 3 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
# pair_coeff * * CHONSSi.ff O Si
# pair_coeff * * CHOSiNa.ff O Si
# pair_coeff * * SiOCHN_2018.ff O Si
# pair_coeff * * PDMSDecomp.ff Si O
# pair_coeff * * CHONSi.ff C H O Si
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press density vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50
Resetting global fix info from restart file:
  fix style: nvt, fix ID: fnvt


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg3.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg3.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom ${nthermo} dump/neg_deform${dir}.lammpstrj id type q x y z
dump dump_neg3 all custom ${nthermo} dump/neg_deform${dir}.lammpstrj id type q x y z
dump dump_neg3 all custom 100 dump/neg_deform${dir}.lammpstrj id type q x y z
dump dump_neg3 all custom 100 dump/neg_deform3.lammpstrj id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
All restart file global fix info was re-assigned
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 105.8 | 106.1 | 106.4 Mbytes
   Step          Temp          PotEng         Press         Density         Volume    
         0   286.93432     -36714.921      17074.236      2.8878482      2983.7813    
       100   278.06041     -36693.639      15489.847      2.8890038      2982.5878    
       200   308.36815     -36705.179      3605.4724      2.8901603      2981.3943    
       300   312.27934     -36701.658      17237.585      2.8913177      2980.2008    
       400   309.55482     -36710.95       12730.684      2.8924761      2979.0073    
       500   285.2087      -36707.141      6466.5956      2.8936354      2977.8137    
       600   288.57774     -36722.105      21830.54       2.8947957      2976.6202    
       700   276.86148     -36713.441      14757.87       2.8959568      2975.4267    
       800   305.06017     -36713.805      7978.3144      2.8971189      2974.2332    
       900   316.96788     -36704.683      17142.175      2.898282       2973.0397    
      1000   314.86551     -36706.344      12474.99       2.8994459      2971.8462    
      1100   282.83901     -36704.466      11321.201      2.9006109      2970.6527    
      1200   308.33904     -36728.664      15912.08       2.9017767      2969.4592    
      1300   294.49424     -36716.646      16332.951      2.9029435      2968.2656    
      1400   310.71648     -36722.894      9651.088       2.9041112      2967.0721    
      1500   312.19292     -36702.39       14787.687      2.9052798      2965.8786    
      1600   318.10197     -36690.977      18726.701      2.9064494      2964.6851    
      1700   320.80469     -36711.773      7990.78        2.90762        2963.4916    
      1800   288.83565     -36709.828      13495.967      2.9087915      2962.2981    
      1900   270.34719     -36696.093      21261.436      2.9099639      2961.1046    
      2000   313.46334     -36719.381      17061.718      2.9111373      2959.9111    
      2100   316.84978     -36716.662      17803.588      2.9123116      2958.7175    
      2200   298.87054     -36703.124      13112.971      2.9134868      2957.524     
      2300   286.95028     -36699.123      14767.036      2.9146631      2956.3305    
      2400   310.65416     -36726.627      23421.53       2.9158402      2955.137     
      2500   263.79842     -36703.222      24075.492      2.9170183      2953.9435    
      2600   308.26474     -36727.387      15274.34       2.9181974      2952.75      
      2700   293.88629     -36691.012      19557.318      2.9193774      2951.5565    
      2800   290.38834     -36682.845      24951.325      2.9205584      2950.363     
      2900   308.52806     -36699.996      15744.63       2.9217404      2949.1694    
      3000   308.23827     -36716.049      16581.172      2.9229232      2947.9759    
      3100   282.43279     -36702.786      20492.156      2.9241071      2946.7824    
      3200   303.75469     -36707.283      11938.696      2.9252919      2945.5889    
      3300   301.85042     -36697.997      15917.901      2.9264777      2944.3954    
      3400   322.28326     -36715.198      21480.107      2.9276644      2943.2019    
      3500   275.84517     -36702.975      23555.621      2.9288521      2942.0084    
      3600   287.34534     -36716.029      15806.773      2.9300407      2940.8149    
      3700   305.66576     -36716.669      22199.605      2.9312304      2939.6213    
      3800   296.08493     -36691.799      19294.522      2.932421       2938.4278    
      3900   308.10335     -36699.567      19620.795      2.9336125      2937.2343    
      4000   315.11685     -36708.193      22903.628      2.934805       2936.0408    
      4100   293.00701     -36701.489      15427.124      2.9359985      2934.8473    
      4200   295.10922     -36716.862      19809.872      2.937193       2933.6538    
      4300   287.08433     -36718.259      23428.464      2.9383884      2932.4603    
      4400   277.84989     -36685.015      24957.01       2.9395849      2931.2668    
      4500   315.45327     -36691.988      21105.687      2.9407822      2930.0732    
      4600   307.93673     -36699.896      23689.833      2.9419806      2928.8797    
      4700   286.22474     -36699.358      18751.416      2.9431799      2927.6862    
      4800   307.31241     -36713.543      20518.486      2.9443803      2926.4927    
      4900   295.56449     -36692.893      26891.254      2.9455816      2925.2992    
      5000   321.04878     -36680.003      18102.327      2.9467838      2924.1057    
Loop time of 103.364 on 8 procs for 5000 steps with 243 atoms

Performance: 2.090 ns/day, 11.485 hours/ns, 48.373 timesteps/s, 11.755 katom-step/s
98.5% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 78.567     | 81.043     | 83.595     |  18.5 | 78.41
Bond    | 0.0089507  | 0.0091881  | 0.0095639  |   0.2 |  0.01
Neigh   | 7.7126     | 7.8341     | 7.9473     |   3.3 |  7.58
Comm    | 0.90585    | 3.4615     | 5.9332     |  89.3 |  3.35
Output  | 0.0091816  | 0.010378   | 0.011775   |   0.9 |  0.01
Modify  | 10.804     | 10.915     | 11.04      |   2.7 | 10.56
Other   |            | 0.09013    |            |       |  0.09

Nlocal:         30.375 ave          35 max          27 min
Histogram: 2 0 1 1 0 1 2 0 0 1
Nghost:        2745.25 ave        2768 max        2719 min
Histogram: 1 1 0 0 1 1 2 0 1 1
Neighs:        17850.4 ave       20487 max       15898 min
Histogram: 2 0 1 1 0 1 2 0 0 1

Total # of neighbors = 142803
Ave neighs/atom = 587.66667
Ave special neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg3

# Compute elastic constant from pressure
# d1 = -[pxx1-pxx0]/[(v_delta/v_len0] defined in input script
# variable C1neg equal ${d1}
# variable C2neg equal ${d2}
# variable C3neg equal ${d3}
# variable C4neg equal ${d4}
# variable C5neg equal ${d5}
# variable C6neg equal ${d6}

# Reset box and simulation parameters
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:98)
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.02*${len0}
variable delta equal 0.02*15.9631
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.02*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.02*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.02*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box
fix deform_p all deform 100 z delta 0 ${delta} remap v units box
fix deform_p all deform 100 z delta 0 0.319262 remap v units box
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 3 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
# pair_coeff * * CHONSSi.ff O Si
# pair_coeff * * CHOSiNa.ff O Si
# pair_coeff * * SiOCHN_2018.ff O Si
# pair_coeff * * PDMSDecomp.ff Si O
# pair_coeff * * CHONSi.ff C H O Si
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press density vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50
Resetting global fix info from restart file:
  fix style: nvt, fix ID: fnvt


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos3.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos3.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom ${nthermo} dump/pos_deform${dir}.lammpstrj id type q x y z
dump dump_pos3 all custom ${nthermo} dump/pos_deform${dir}.lammpstrj id type q x y z
dump dump_pos3 all custom 100 dump/pos_deform${dir}.lammpstrj id type q x y z
dump dump_pos3 all custom 100 dump/pos_deform3.lammpstrj id type q x y z
run ${nrun}
run 5000
All restart file global fix info was re-assigned
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 105.8 | 106.1 | 106.4 Mbytes
   Step          Temp          PotEng         Press         Density         Volume    
         0   286.93432     -36714.921      17074.236      2.8878482      2983.7813    
       100   277.95298     -36693.942      15009.6        2.8866935      2984.9748    
       200   301.87956     -36700.458      2543.9184      2.8855397      2986.1683    
       300   314.55851     -36705.063      18498.998      2.8843869      2987.3618    
       400   297.14814     -36707.06       18374.332      2.883235       2988.5554    
       500   294.10899     -36719.039      5748.8713      2.882084       2989.7489    
       600   282.13064     -36720.315      15053.234      2.8809339      2990.9424    
       700   301.80789     -36727.125      14915.425      2.8797848      2992.1359    
       800   313.29588     -36705.764      11650.161      2.8786365      2993.3294    
       900   320.36636     -36708.856      9406.6856      2.8774892      2994.5229    
      1000   319.12726     -36723.222      14167.936      2.8763428      2995.7164    
      1100   313.97418     -36723.445      8906.5709      2.8751973      2996.9099    
      1200   320.74395     -36732.689      8651.7827      2.8740527      2998.1035    
      1300   293.36332     -36717.49       15584.367      2.872909       2999.297     
      1400   282.17678     -36722.426      10268.222      2.8717663      3000.4905    
      1500   282.58473     -36723.224     -878.33957      2.8706244      3001.684     
      1600   293.26174     -36712.21       11880.486      2.8694835      3002.8775    
      1700   302.49486     -36707.231      11671.172      2.8683434      3004.071     
      1800   300.86546     -36704.939      9665.8116      2.8672043      3005.2645    
      1900   314.48155     -36732.402      5304.0995      2.8660661      3006.458     
      2000   279.67497     -36732.881      17614.399      2.8649287      3007.6516    
      2100   278.15019     -36727.616      10855.289      2.8637923      3008.8451    
      2200   296.57126     -36716.473      5150.4214      2.8626568      3010.0386    
      2300   295.89302     -36707.593      8141.5565      2.8615222      3011.2321    
      2400   304.87744     -36714.732      17585.467      2.8603884      3012.4256    
      2500   289.46373     -36704.906      6496.5308      2.8592556      3013.6191    
      2600   293.96408     -36725.728      7930.2096      2.8581237      3014.8126    
      2700   278.39793     -36736.44       10917.8        2.8569926      3016.0061    
      2800   286.21145     -36733.961      6101.4738      2.8558625      3017.1997    
      2900   296.44455     -36716.571      9646.7513      2.8547333      3018.3932    
      3000   282.68003     -36703.223      9999.4095      2.8536049      3019.5867    
      3100   331.67002     -36729.66       12178.863      2.8524774      3020.7802    
      3200   292.10472     -36705.536      3174.1907      2.8513509      3021.9737    
      3300   298.48415     -36729.963      4638.1265      2.8502252      3023.1672    
      3400   265.73964     -36717.625      6385.5933      2.8491004      3024.3607    
      3500   313.89033     -36726.613      2580.7041      2.8479765      3025.5542    
      3600   304.43324     -36697.848      9441.5468      2.8468535      3026.7478    
      3700   299.90883     -36702.696      5779.5485      2.8457313      3027.9413    
      3800   299.99937     -36716.713      2711.259       2.8446101      3029.1348    
      3900   281.18626     -36710.053      5853.45        2.8434897      3030.3283    
      4000   294.19211     -36726.298      5411.5447      2.8423702      3031.5218    
      4100   283.42036     -36720.136      1161.5971      2.8412516      3032.7153    
      4200   303.8697      -36725.117      6284.9121      2.8401339      3033.9088    
      4300   310.61924     -36708.029      4924.0435      2.8390171      3035.1023    
      4400   328.79841     -36713.978      5217.1369      2.8379011      3036.2959    
      4500   291.71606     -36705.801     -528.30872      2.836786       3037.4894    
      4600   287.3091      -36722.777      9138.8371      2.8356718      3038.6829    
      4700   287.20829     -36717.552      4003.482       2.8345585      3039.8764    
      4800   314.0188      -36721.764      3001.0796      2.833446       3041.0699    
      4900   296.67298     -36706.088      4866.6511      2.8323344      3042.2634    
      5000   286.29244     -36708.557      9575.4925      2.8312237      3043.4569    
Loop time of 100.933 on 8 procs for 5000 steps with 243 atoms

Performance: 2.140 ns/day, 11.215 hours/ns, 49.538 timesteps/s, 12.038 katom-step/s
98.5% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 77.344     | 79.025     | 81.372     |  16.3 | 78.29
Bond    | 0.0084942  | 0.0090977  | 0.0097477  |   0.4 |  0.01
Neigh   | 7.6177     | 7.731      | 7.9018     |   3.6 |  7.66
Comm    | 0.96845    | 3.3197     | 5.0002     |  79.7 |  3.29
Output  | 0.0091352  | 0.010261   | 0.011644   |   0.9 |  0.01
Modify  | 10.576     | 10.748     | 10.866     |   3.0 | 10.65
Other   |            | 0.08939    |            |       |  0.09

Nlocal:         30.375 ave          35 max          27 min
Histogram: 2 0 0 2 0 2 1 0 0 1
Nghost:        2683.12 ave        2709 max        2662 min
Histogram: 3 1 0 0 0 0 0 1 2 1
Neighs:        17244.2 ave       19801 max       15355 min
Histogram: 2 0 0 2 1 1 1 0 0 1

Total # of neighbors = 137954
Ave neighs/atom = 567.71193
Ave special neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos3

# # Combine positive and negative
# variable C1${dir} equal 0.5*(${C1neg}+${C1pos})
# variable C2${dir} equal 0.5*(${C2neg}+${C2pos})
# variable C3${dir} equal 0.5*(${C3neg}+${C3pos})
# variable C4${dir} equal 0.5*(${C4neg}+${C4pos})
# variable C5${dir} equal 0.5*(${C5neg}+${C5pos})
# variable C6${dir} equal 0.5*(${C6neg}+${C6pos})

# Delete dir to make sure it is not reused
variable dir delete
# uyz Perturbation
variable dir equal 4
include displace.mod.lmp
# # Find which reference length to use
# if "${dir} == 1" then #    "variable len0 equal ${lx0}"
# if "${dir} == 2" then #    "variable len0 equal ${ly0}"
# if "${dir} == 3" then #    "variable len0 equal ${lz0}"
# if "${dir} == 4" then #    "variable len0 equal ${lz0}"
# if "${dir} == 5" then #    "variable len0 equal ${lz0}"
# if "${dir} == 6" then #    "variable len0 equal ${ly0}"

# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
variable len0 equal ${lx0}
variable len0 equal 14.6913
variable dlen equal 2*(yz-${yz0})
variable dlen equal 2*(yz-0)
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:98)
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.02*${len0}
variable delta equal -0.02*14.6913
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.02*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.02*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.02*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.3456000000000001293, deltaxy = 0.146912
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0, deltaxz = -0
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0, deltayz = -0
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no
fix deform_n all deform 100 yz delta ${delta} remap v units box flip no
fix deform_n all deform 100 yz delta -0.293826 remap v units box flip no
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 4 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
# pair_coeff * * CHONSSi.ff O Si
# pair_coeff * * CHOSiNa.ff O Si
# pair_coeff * * SiOCHN_2018.ff O Si
# pair_coeff * * PDMSDecomp.ff Si O
# pair_coeff * * CHONSi.ff C H O Si
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press density vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50
Resetting global fix info from restart file:
  fix style: nvt, fix ID: fnvt


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg4.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg4.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom ${nthermo} dump/neg_deform${dir}.lammpstrj id type q x y z
dump dump_neg4 all custom ${nthermo} dump/neg_deform${dir}.lammpstrj id type q x y z
dump dump_neg4 all custom 100 dump/neg_deform${dir}.lammpstrj id type q x y z
dump dump_neg4 all custom 100 dump/neg_deform4.lammpstrj id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
All restart file global fix info was re-assigned
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 105.8 | 106.1 | 106.4 Mbytes
   Step          Temp          PotEng         Press         Density         Volume    
         0   286.93432     -36714.921      17074.236      2.8878482      2983.7813    
       100   277.97497     -36693.799      15293.078      2.8878482      2983.7813    
       200   302.74257     -36701.737      5961.3737      2.8878482      2983.7813    
       300   320.69127     -36711.233      16041.453      2.8878482      2983.7813    
       400   283.89367     -36699.172      16389.909      2.8878482      2983.7813    
       500   299.71449     -36720.968      10578.403      2.8878482      2983.7813    
       600   296.03332     -36724.403      16139.313      2.8878482      2983.7813    
       700   304.395       -36724.874      10774.627      2.8878482      2983.7813    
       800   296.73313     -36696.892      6664.7026      2.8878482      2983.7813    
       900   331.88665     -36709.595      15060.717      2.8878482      2983.7813    
      1000   324.96096     -36724.79       14669.805      2.8878482      2983.7813    
      1100   301.86821     -36718.65       13429.844      2.8878482      2983.7813    
      1200   284.97392     -36706.486      10581.131      2.8878482      2983.7813    
      1300   317.51618     -36731.56       12378.569      2.8878482      2983.7813    
      1400   282.09107     -36712.63       11769.114      2.8878482      2983.7813    
      1500   287.13834     -36722.307      11776.88       2.8878482      2983.7813    
      1600   304.14694     -36722.943      10842.226      2.8878482      2983.7813    
      1700   300.47533     -36707.442      8892.1597      2.8878482      2983.7813    
      1800   311.48806     -36703.036      21860.085      2.8878482      2983.7813    
      1900   311.04121     -36704.139      14878.435      2.8878482      2983.7813    
      2000   301.74765     -36727.234      6803.4171      2.8878482      2983.7813    
      2100   284.58174     -36723.623      9499.4692      2.8878482      2983.7813    
      2200   289.93558     -36717.787      13453.184      2.8878482      2983.7813    
      2300   330.74501     -36721.56       8565.1277      2.8878482      2983.7813    
      2400   318.90016     -36712.004      15328.679      2.8878482      2983.7813    
      2500   302.2213      -36703.866      8990.8634      2.8878482      2983.7813    
      2600   307.09288     -36717.86       9574.4627      2.8878482      2983.7813    
      2700   278.64075     -36711.123      10660.933      2.8878482      2983.7813    
      2800   298.92382     -36724.536      17229.638      2.8878482      2983.7813    
      2900   323.63116     -36706.922      6966.8118      2.8878482      2983.7813    
      3000   323.01302     -36696.602      10664.477      2.8878482      2983.7813    
      3100   306.58026     -36707.962      15703.263      2.8878482      2983.7813    
      3200   284.56395     -36708.34       11590.421      2.8878482      2983.7813    
      3300   289.54949     -36714.25       13125.199      2.8878482      2983.7813    
      3400   301.61712     -36716.079      19715.564      2.8878482      2983.7813    
      3500   306.86776     -36698.192      15769.187      2.8878482      2983.7813    
      3600   325.53322     -36699.448      9954.1077      2.8878482      2983.7813    
      3700   292.74601     -36701.322      13327.853      2.8878482      2983.7813    
      3800   293.01337     -36708.185      15954.344      2.8878482      2983.7813    
      3900   300.21314     -36716.699      8645.5145      2.8878482      2983.7813    
      4000   286.65022     -36711.71       12781.636      2.8878482      2983.7813    
      4100   319.3639      -36730.286      11316.4        2.8878482      2983.7813    
      4200   281.27585     -36686.36       13001.961      2.8878482      2983.7813    
      4300   351.49711     -36720.985      18467.3        2.8878482      2983.7813    
      4400   320.66961     -36713.332      11377.102      2.8878482      2983.7813    
      4500   302.04016     -36719.71       7627.1165      2.8878482      2983.7813    
      4600   300.62447     -36723.296      10817.491      2.8878482      2983.7813    
      4700   300.75818     -36710.033      13061.231      2.8878482      2983.7813    
      4800   326.19944     -36712.46       7528.9186      2.8878482      2983.7813    
      4900   322.79089     -36712.472      9038.1938      2.8878482      2983.7813    
      5000   289.86434     -36719.511      20031.374      2.8878482      2983.7813    
Loop time of 109.984 on 8 procs for 5000 steps with 243 atoms

Performance: 1.964 ns/day, 12.220 hours/ns, 45.461 timesteps/s, 11.047 katom-step/s
98.6% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 82.799     | 86.053     | 90.067     |  24.8 | 78.24
Bond    | 0.009221   | 0.0098793  | 0.010251   |   0.3 |  0.01
Neigh   | 7.8623     | 7.92       | 8.0123     |   1.6 |  7.20
Comm    | 0.81594    | 4.8351     | 8.0865     | 104.6 |  4.40
Output  | 0.0083916  | 0.0096275  | 0.011025   |   0.9 |  0.01
Modify  | 10.97      | 11.063     | 11.118     |   1.3 | 10.06
Other   |            | 0.0923     |            |       |  0.08

Nlocal:         30.375 ave          33 max          27 min
Histogram: 2 0 0 1 0 0 2 0 1 2
Nghost:        2719.62 ave        2735 max        2698 min
Histogram: 2 0 0 0 0 0 3 1 0 2
Neighs:        17572.5 ave       19080 max       15680 min
Histogram: 2 0 0 1 0 0 2 0 1 2

Total # of neighbors = 140580
Ave neighs/atom = 578.51852
Ave special neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg4

# Compute elastic constant from pressure
# d1 = -[pxx1-pxx0]/[(v_delta/v_len0] defined in input script
# variable C1neg equal ${d1}
# variable C2neg equal ${d2}
# variable C3neg equal ${d3}
# variable C4neg equal ${d4}
# variable C5neg equal ${d5}
# variable C6neg equal ${d6}

# Reset box and simulation parameters
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:98)
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.02*${len0}
variable delta equal 0.02*14.6913
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.02*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.02*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.02*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box
fix deform_p all deform 100 yz delta ${delta} remap v units box
fix deform_p all deform 100 yz delta 0.293826 remap v units box
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 4 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
# pair_coeff * * CHONSSi.ff O Si
# pair_coeff * * CHOSiNa.ff O Si
# pair_coeff * * SiOCHN_2018.ff O Si
# pair_coeff * * PDMSDecomp.ff Si O
# pair_coeff * * CHONSi.ff C H O Si
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press density vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50
Resetting global fix info from restart file:
  fix style: nvt, fix ID: fnvt


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos4.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos4.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom ${nthermo} dump/pos_deform${dir}.lammpstrj id type q x y z
dump dump_pos4 all custom ${nthermo} dump/pos_deform${dir}.lammpstrj id type q x y z
dump dump_pos4 all custom 100 dump/pos_deform${dir}.lammpstrj id type q x y z
dump dump_pos4 all custom 100 dump/pos_deform4.lammpstrj id type q x y z
run ${nrun}
run 5000
All restart file global fix info was re-assigned
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 105.8 | 106.1 | 106.4 Mbytes
   Step          Temp          PotEng         Press         Density         Volume    
         0   286.93432     -36714.921      17074.236      2.8878482      2983.7813    
       100   277.93593     -36693.701      15337.718      2.8878482      2983.7813    
       200   305.0575      -36702.659      3169.4693      2.8878482      2983.7813    
       300   311.33748     -36703.383      15703.601      2.8878482      2983.7813    
       400   291.63855     -36705.275      19538.691      2.8878482      2983.7813    
       500   293.35576     -36719.457      8153.6126      2.8878482      2983.7813    
       600   289.99512     -36723.942      13416.173      2.8878482      2983.7813    
       700   310.2256      -36728.286      10692.641      2.8878482      2983.7813    
       800   330.14068     -36713.934      6888.5574      2.8878482      2983.7813    
       900   302.99202     -36692.009      13910.517      2.8878482      2983.7813    
      1000   337.0381      -36731.471      11459.429      2.8878482      2983.7813    
      1100   298.12595     -36710.474      6810.6701      2.8878482      2983.7813    
      1200   299.98832     -36719.859      14256.269      2.8878482      2983.7813    
      1300   290.83023     -36715.144      10748.104      2.8878482      2983.7813    
      1400   312.20677     -36719.205      16351.863      2.8878482      2983.7813    
      1500   307.20215     -36689.08       11821.186      2.8878482      2983.7813    
      1600   331.38472     -36710.413      15445.359      2.8878482      2983.7813    
      1700   300.94497     -36711.985      15711.258      2.8878482      2983.7813    
      1800   296.42095     -36713.404      11967.955      2.8878482      2983.7813    
      1900   300.78604     -36720.828      9212.0358      2.8878482      2983.7813    
      2000   305.41116     -36729.569      16861.32       2.8878482      2983.7813    
      2100   296.82156     -36722.053      14900.264      2.8878482      2983.7813    
      2200   312.4218      -36713.927      8758.5478      2.8878482      2983.7813    
      2300   334.27483     -36716.04       13470.388      2.8878482      2983.7813    
      2400   321.09652     -36717.359      18736.4        2.8878482      2983.7813    
      2500   298.12868     -36726.38       3798.9193      2.8878482      2983.7813    
      2600   288.06239     -36718.259      13423.736      2.8878482      2983.7813    
      2700   309.88557     -36724          12327.309      2.8878482      2983.7813    
      2800   283.62472     -36692.562      3611.1252      2.8878482      2983.7813    
      2900   317.92559     -36692.242      9884.2614      2.8878482      2983.7813    
      3000   335.18482     -36712.48       14738.867      2.8878482      2983.7813    
      3100   273.23624     -36698.473      13060.358      2.8878482      2983.7813    
      3200   308.00717     -36725.497      15506.564      2.8878482      2983.7813    
      3300   274.05438     -36697.707      14042.517      2.8878482      2983.7813    
      3400   298.16312     -36703.9        9806.9655      2.8878482      2983.7813    
      3500   316.34773     -36707.007      13371.203      2.8878482      2983.7813    
      3600   303.24438     -36707.511      10287.946      2.8878482      2983.7813    
      3700   273.79489     -36708.984      16959.172      2.8878482      2983.7813    
      3800   306.76851     -36729.635      16091.139      2.8878482      2983.7813    
      3900   305.66362     -36712.828      7262.4259      2.8878482      2983.7813    
      4000   322.04359     -36710.743      7262.4691      2.8878482      2983.7813    
      4100   318.80748     -36703.208      19720.744      2.8878482      2983.7813    
      4200   283.52283     -36689.074      20077.524      2.8878482      2983.7813    
      4300   308.70522     -36727.057      14605.662      2.8878482      2983.7813    
      4400   295.30436     -36726.033      11179.033      2.8878482      2983.7813    
      4500   287.05011     -36713.862      10720.041      2.8878482      2983.7813    
      4600   307.14207     -36705.511      13306.269      2.8878482      2983.7813    
      4700   296.24204     -36679.57       17885.773      2.8878482      2983.7813    
      4800   328.98721     -36710.467      11424.47       2.8878482      2983.7813    
      4900   308.31273     -36710.36       18170.905      2.8878482      2983.7813    
      5000   315.89205     -36724.936      16202.545      2.8878482      2983.7813    
Loop time of 118.305 on 8 procs for 5000 steps with 243 atoms

Performance: 1.826 ns/day, 13.145 hours/ns, 42.263 timesteps/s, 10.270 katom-step/s
98.7% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 92.515     | 95.148     | 98.3       |  20.1 | 80.43
Bond    | 0.010666   | 0.011315   | 0.011894   |   0.4 |  0.01
Neigh   | 7.9016     | 7.9915     | 8.0643     |   2.0 |  6.75
Comm    | 1.0163     | 4.1637     | 6.7941     |  96.3 |  3.52
Output  | 0.0075783  | 0.0087853  | 0.010193   |   1.0 |  0.01
Modify  | 10.806     | 10.882     | 10.974     |   1.7 |  9.20
Other   |            | 0.1001     |            |       |  0.08

Nlocal:         30.375 ave          34 max          27 min
Histogram: 1 2 0 0 1 1 0 1 1 1
Nghost:        2721.75 ave        2738 max        2702 min
Histogram: 1 0 1 0 2 0 1 1 1 1
Neighs:        17569.5 ave       19606 max       15668 min
Histogram: 1 2 0 0 1 1 0 1 1 1

Total # of neighbors = 140556
Ave neighs/atom = 578.41975
Ave special neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos4

# # Combine positive and negative
# variable C1${dir} equal 0.5*(${C1neg}+${C1pos})
# variable C2${dir} equal 0.5*(${C2neg}+${C2pos})
# variable C3${dir} equal 0.5*(${C3neg}+${C3pos})
# variable C4${dir} equal 0.5*(${C4neg}+${C4pos})
# variable C5${dir} equal 0.5*(${C5neg}+${C5pos})
# variable C6${dir} equal 0.5*(${C6neg}+${C6pos})

# Delete dir to make sure it is not reused
variable dir delete
# uxz Perturbation
variable dir equal 5
include displace.mod.lmp
# # Find which reference length to use
# if "${dir} == 1" then #    "variable len0 equal ${lx0}"
# if "${dir} == 2" then #    "variable len0 equal ${ly0}"
# if "${dir} == 3" then #    "variable len0 equal ${lz0}"
# if "${dir} == 4" then #    "variable len0 equal ${lz0}"
# if "${dir} == 5" then #    "variable len0 equal ${lz0}"
# if "${dir} == 6" then #    "variable len0 equal ${ly0}"

# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
variable len0 equal ${ly0}
variable len0 equal 12.723
variable dlen equal 2*(xz-${xz0})
variable dlen equal 2*(xz-0)
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:98)
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.02*${len0}
variable delta equal -0.02*12.723
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.02*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.02*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.02*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.3456000000000001293, deltaxy = 0.146912
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0, deltaxz = -0
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0, deltayz = -0
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no
fix deform_n all deform 100 xz delta ${delta} remap v units box flip no
fix deform_n all deform 100 xz delta -0.25446 remap v units box flip no
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 5 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
# pair_coeff * * CHONSSi.ff O Si
# pair_coeff * * CHOSiNa.ff O Si
# pair_coeff * * SiOCHN_2018.ff O Si
# pair_coeff * * PDMSDecomp.ff Si O
# pair_coeff * * CHONSi.ff C H O Si
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press density vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50
Resetting global fix info from restart file:
  fix style: nvt, fix ID: fnvt


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg5.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg5.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom ${nthermo} dump/neg_deform${dir}.lammpstrj id type q x y z
dump dump_neg5 all custom ${nthermo} dump/neg_deform${dir}.lammpstrj id type q x y z
dump dump_neg5 all custom 100 dump/neg_deform${dir}.lammpstrj id type q x y z
dump dump_neg5 all custom 100 dump/neg_deform5.lammpstrj id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
All restart file global fix info was re-assigned
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 105.8 | 106.1 | 106.4 Mbytes
   Step          Temp          PotEng         Press         Density         Volume    
         0   286.93432     -36714.921      17074.236      2.8878482      2983.7813    
       100   277.92416     -36693.717      15097.007      2.8878482      2983.7813    
       200   300.72126     -36699.112      4815.1139      2.8878482      2983.7813    
       300   310.82654     -36701.679      18954.553      2.8878482      2983.7813    
       400   289.78401     -36702.894      13711.108      2.8878482      2983.7813    
       500   297.94818     -36720.628      8970.4525      2.8878482      2983.7813    
       600   291.28467     -36722.482      16616.345      2.8878482      2983.7813    
       700   290.01937     -36710.379      13518.586      2.8878482      2983.7813    
       800   327.58586     -36708.043      4359.46        2.8878482      2983.7813    
       900   307.83892     -36695.093      12912.781      2.8878482      2983.7813    
      1000   303.83091     -36713.436      17326.651      2.8878482      2983.7813    
      1100   313.7379      -36722.492      9979.6899      2.8878482      2983.7813    
      1200   306.45748     -36721.309      15139.111      2.8878482      2983.7813    
      1300   290.33542     -36715.836      14768.556      2.8878482      2983.7813    
      1400   276.26987     -36723.116      8602.2796      2.8878482      2983.7813    
      1500   265.95178     -36720.075      16281.447      2.8878482      2983.7813    
      1600   304.54791     -36721.991      13697.727      2.8878482      2983.7813    
      1700   318.79851     -36714.705      7564.2504      2.8878482      2983.7813    
      1800   301.49675     -36705.383      13618.624      2.8878482      2983.7813    
      1900   291.99411     -36712.182      15619.371      2.8878482      2983.7813    
      2000   270.97157     -36720.096      20395.021      2.8878482      2983.7813    
      2100   283.52568     -36721.508      5559.1431      2.8878482      2983.7813    
      2200   299.38646     -36703.704      13975.354      2.8878482      2983.7813    
      2300   296.9827      -36697.588      6356.1248      2.8878482      2983.7813    
      2400   301.3292      -36708.144      14629.209      2.8878482      2983.7813    
      2500   274.24749     -36700.771      11722.848      2.8878482      2983.7813    
      2600   272.04589     -36711.556      15171.101      2.8878482      2983.7813    
      2700   294.64691     -36724.148      9977.6657      2.8878482      2983.7813    
      2800   325.45069     -36729.579      16816.189      2.8878482      2983.7813    
      2900   300.79296     -36694.148      16096.294      2.8878482      2983.7813    
      3000   322.65442     -36712.792      8040.4218      2.8878482      2983.7813    
      3100   294.51776     -36719.357      13554.116      2.8878482      2983.7813    
      3200   286.30865     -36723.205      13305.186      2.8878482      2983.7813    
      3300   293.97246     -36714.74       8037.8825      2.8878482      2983.7813    
      3400   309.30381     -36716.714      8301.0378      2.8878482      2983.7813    
      3500   290.96729     -36704.227      13062.094      2.8878482      2983.7813    
      3600   318.38702     -36711.782      16883.148      2.8878482      2983.7813    
      3700   317.95592     -36698.303      7716.8577      2.8878482      2983.7813    
      3800   310.39569     -36716.51       9169.5283      2.8878482      2983.7813    
      3900   292.19533     -36720.013      17259.27       2.8878482      2983.7813    
      4000   274.31007     -36704.041      13527.091      2.8878482      2983.7813    
      4100   303.5551      -36712.27       10044.893      2.8878482      2983.7813    
      4200   309.32036     -36722.229      16649.346      2.8878482      2983.7813    
      4300   294.09052     -36734.057      13246.407      2.8878482      2983.7813    
      4400   288.3492      -36735.668      9107.4478      2.8878482      2983.7813    
      4500   284.28771     -36711.569      13522.298      2.8878482      2983.7813    
      4600   297.52563     -36707.007      17735.943      2.8878482      2983.7813    
      4700   324.14121     -36720.925      14712.328      2.8878482      2983.7813    
      4800   299.27297     -36709.715      12990.345      2.8878482      2983.7813    
      4900   286.2659      -36729.036      9547.8479      2.8878482      2983.7813    
      5000   284.59953     -36735.93       13282.844      2.8878482      2983.7813    
Loop time of 118.698 on 8 procs for 5000 steps with 243 atoms

Performance: 1.820 ns/day, 13.189 hours/ns, 42.124 timesteps/s, 10.236 katom-step/s
98.6% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 91.335     | 94.934     | 98.762     |  26.4 | 79.98
Bond    | 0.010415   | 0.011572   | 0.012108   |   0.5 |  0.01
Neigh   | 7.8821     | 7.9214     | 7.9558     |   0.9 |  6.67
Comm    | 0.84141    | 4.676      | 8.2775     | 119.2 |  3.94
Output  | 0.0073835  | 0.0085754  | 0.0099317  |   0.9 |  0.01
Modify  | 11.022     | 11.05      | 11.086     |   0.8 |  9.31
Other   |            | 0.09656    |            |       |  0.08

Nlocal:         30.375 ave          32 max          28 min
Histogram: 1 0 1 0 0 2 0 2 0 2
Nghost:        2712.12 ave        2726 max        2698 min
Histogram: 2 0 2 0 0 0 0 2 0 2
Neighs:        17572.2 ave       18477 max       16250 min
Histogram: 1 0 1 0 0 2 0 2 0 2

Total # of neighbors = 140578
Ave neighs/atom = 578.51029
Ave special neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg5

# Compute elastic constant from pressure
# d1 = -[pxx1-pxx0]/[(v_delta/v_len0] defined in input script
# variable C1neg equal ${d1}
# variable C2neg equal ${d2}
# variable C3neg equal ${d3}
# variable C4neg equal ${d4}
# variable C5neg equal ${d5}
# variable C6neg equal ${d6}

# Reset box and simulation parameters
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:98)
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.02*${len0}
variable delta equal 0.02*12.723
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.02*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.02*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.02*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box
fix deform_p all deform 100 xz delta ${delta} remap v units box
fix deform_p all deform 100 xz delta 0.25446 remap v units box
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 5 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
# pair_coeff * * CHONSSi.ff O Si
# pair_coeff * * CHOSiNa.ff O Si
# pair_coeff * * SiOCHN_2018.ff O Si
# pair_coeff * * PDMSDecomp.ff Si O
# pair_coeff * * CHONSi.ff C H O Si
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press density vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50
Resetting global fix info from restart file:
  fix style: nvt, fix ID: fnvt


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos5.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos5.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom ${nthermo} dump/pos_deform${dir}.lammpstrj id type q x y z
dump dump_pos5 all custom ${nthermo} dump/pos_deform${dir}.lammpstrj id type q x y z
dump dump_pos5 all custom 100 dump/pos_deform${dir}.lammpstrj id type q x y z
dump dump_pos5 all custom 100 dump/pos_deform5.lammpstrj id type q x y z
run ${nrun}
run 5000
All restart file global fix info was re-assigned
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 105.8 | 106.1 | 106.4 Mbytes
   Step          Temp          PotEng         Press         Density         Volume    
         0   286.93432     -36714.921      17074.236      2.8878482      2983.7813    
       100   278.02513     -36693.812      15490.943      2.8878482      2983.7813    
       200   308.41387     -36705.474      4778.7296      2.8878482      2983.7813    
       300   311.24081     -36702.218      20176.953      2.8878482      2983.7813    
       400   296.59668     -36705.91       16231.158      2.8878482      2983.7813    
       500   296.15319     -36718.607      4109.666       2.8878482      2983.7813    
       600   282.50156     -36717.164      15387.974      2.8878482      2983.7813    
       700   292.39964     -36712.48       13961.815      2.8878482      2983.7813    
       800   305.21327     -36692.764      5662.7552      2.8878482      2983.7813    
       900   314.96342     -36700.644      16205.2        2.8878482      2983.7813    
      1000   305.50477     -36707.489      11905.675      2.8878482      2983.7813    
      1100   305.93893     -36715.294      14018.919      2.8878482      2983.7813    
      1200   301.07818     -36721.704      13496.084      2.8878482      2983.7813    
      1300   306.73467     -36730.025      13226.842      2.8878482      2983.7813    
      1400   290.69492     -36713.186      11003.778      2.8878482      2983.7813    
      1500   335.29429     -36708.521      6465.2286      2.8878482      2983.7813    
      1600   329.63059     -36707.31       16035.157      2.8878482      2983.7813    
      1700   302.51038     -36715.595      14954.658      2.8878482      2983.7813    
      1800   285.4542      -36714.412      13317.094      2.8878482      2983.7813    
      1900   297.39523     -36718.598      14984.955      2.8878482      2983.7813    
      2000   316.25241     -36714.926      10971.355      2.8878482      2983.7813    
      2100   321.10036     -36700.675      6723.4599      2.8878482      2983.7813    
      2200   330.00821     -36698.715      17178.353      2.8878482      2983.7813    
      2300   289.58104     -36697.171      9994.0359      2.8878482      2983.7813    
      2400   295.04692     -36709.442      7667.1566      2.8878482      2983.7813    
      2500   316.96923     -36730.669      13507.015      2.8878482      2983.7813    
      2600   296.72928     -36720.655      15220.078      2.8878482      2983.7813    
      2700   280.70063     -36721.025      14183.963      2.8878482      2983.7813    
      2800   271.63407     -36713.093      10489.101      2.8878482      2983.7813    
      2900   308.89782     -36713.945      10753.921      2.8878482      2983.7813    
      3000   311.8024      -36708.727      13261.735      2.8878482      2983.7813    
      3100   305.81101     -36715.349      14960.721      2.8878482      2983.7813    
      3200   302.59971     -36732.316      15373.532      2.8878482      2983.7813    
      3300   248.02068     -36720.612      9744.7286      2.8878482      2983.7813    
      3400   270.93033     -36734.311      11525.636      2.8878482      2983.7813    
      3500   271.50939     -36717.802      14573.371      2.8878482      2983.7813    
      3600   294.32247     -36714.603      14006.847      2.8878482      2983.7813    
      3700   320.2654      -36717.404      10728.798      2.8878482      2983.7813    
      3800   296.4065      -36698.491      12078.313      2.8878482      2983.7813    
      3900   304.43841     -36710.945      14861.364      2.8878482      2983.7813    
      4000   283.24531     -36719.505      15944.89       2.8878482      2983.7813    
      4100   283.81845     -36727.135      18004.856      2.8878482      2983.7813    
      4200   287.73782     -36713.258      11896.241      2.8878482      2983.7813    
      4300   308.41584     -36706.172      19821.426      2.8878482      2983.7813    
      4400   300.49267     -36704.692      10042.246      2.8878482      2983.7813    
      4500   294.5792      -36715.488      15853.427      2.8878482      2983.7813    
      4600   288.52245     -36719.466      8751.58        2.8878482      2983.7813    
      4700   312.6935      -36728.319      12422.385      2.8878482      2983.7813    
      4800   321.39847     -36701.726      10664.688      2.8878482      2983.7813    
      4900   322.04151     -36702.685      12932.746      2.8878482      2983.7813    
      5000   311.17867     -36713.81       13416.613      2.8878482      2983.7813    
Loop time of 117.704 on 8 procs for 5000 steps with 243 atoms

Performance: 1.835 ns/day, 13.078 hours/ns, 42.479 timesteps/s, 10.323 katom-step/s
98.6% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 92.659     | 94.986     | 97.919     |  18.9 | 80.70
Bond    | 0.010893   | 0.011788   | 0.012486   |   0.5 |  0.01
Neigh   | 7.8564     | 7.9253     | 8.0148     |   1.9 |  6.73
Comm    | 0.90285    | 3.8368     | 6.1608     |  94.0 |  3.26
Output  | 0.0074659  | 0.0085833  | 0.0099624  |   1.0 |  0.01
Modify  | 10.749     | 10.836     | 10.905     |   1.7 |  9.21
Other   |            | 0.1002     |            |       |  0.09

Nlocal:         30.375 ave          32 max          29 min
Histogram: 3 0 0 1 0 0 2 0 0 2
Nghost:        2706.62 ave        2711 max        2702 min
Histogram: 1 2 0 1 0 0 1 0 1 2
Neighs:        17571.6 ave       18505 max       16794 min
Histogram: 3 0 0 1 0 0 2 0 0 2

Total # of neighbors = 140573
Ave neighs/atom = 578.48971
Ave special neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos5

# # Combine positive and negative
# variable C1${dir} equal 0.5*(${C1neg}+${C1pos})
# variable C2${dir} equal 0.5*(${C2neg}+${C2pos})
# variable C3${dir} equal 0.5*(${C3neg}+${C3pos})
# variable C4${dir} equal 0.5*(${C4neg}+${C4pos})
# variable C5${dir} equal 0.5*(${C5neg}+${C5pos})
# variable C6${dir} equal 0.5*(${C6neg}+${C6pos})

# Delete dir to make sure it is not reused
variable dir delete
# uxy Perturbation
variable dir equal 6
include displace.mod.lmp
# # Find which reference length to use
# if "${dir} == 1" then #    "variable len0 equal ${lx0}"
# if "${dir} == 2" then #    "variable len0 equal ${ly0}"
# if "${dir} == 3" then #    "variable len0 equal ${lz0}"
# if "${dir} == 4" then #    "variable len0 equal ${lz0}"
# if "${dir} == 5" then #    "variable len0 equal ${lz0}"
# if "${dir} == 6" then #    "variable len0 equal ${ly0}"

# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"
variable len0 equal ${lz0}
variable len0 equal 15.9631
variable dlen equal 2*(xy-${xy0})
variable dlen equal 2*(xy--7.3456)

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:98)
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.02*${len0}
variable delta equal -0.02*15.9631
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.02*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.02*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.02*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.3456000000000001293, deltaxy = 0.146912
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0, deltaxz = -0
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0, deltayz = -0
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no
fix deform_n all deform 100 xy delta ${delta} remap v units box flip no
fix deform_n all deform 100 xy delta -0.319262 remap v units box flip no

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 6 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
# pair_coeff * * CHONSSi.ff O Si
# pair_coeff * * CHOSiNa.ff O Si
# pair_coeff * * SiOCHN_2018.ff O Si
# pair_coeff * * PDMSDecomp.ff Si O
# pair_coeff * * CHONSi.ff C H O Si
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press density vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50
Resetting global fix info from restart file:
  fix style: nvt, fix ID: fnvt


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg6.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg6.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom ${nthermo} dump/neg_deform${dir}.lammpstrj id type q x y z
dump dump_neg6 all custom ${nthermo} dump/neg_deform${dir}.lammpstrj id type q x y z
dump dump_neg6 all custom 100 dump/neg_deform${dir}.lammpstrj id type q x y z
dump dump_neg6 all custom 100 dump/neg_deform6.lammpstrj id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
All restart file global fix info was re-assigned
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 105.8 | 106.1 | 106.4 Mbytes
   Step          Temp          PotEng         Press         Density         Volume    
         0   286.93432     -36714.921      17074.236      2.8878482      2983.7813    
       100   277.98204     -36693.715      15305.171      2.8878482      2983.7813    
       200   304.51998     -36702.46       3072.4411      2.8878482      2983.7813    
       300   319.16744     -36709.117      16421.609      2.8878482      2983.7813    
       400   287.50823     -36703.944      15336.501      2.8878482      2983.7813    
       500   283.53178     -36712.17       4245.7075      2.8878482      2983.7813    
       600   287.69816     -36721.984      17485.609      2.8878482      2983.7813    
       700   290.67669     -36712.989      9364.8137      2.8878482      2983.7813    
       800   328.95662     -36708.509      8036.1702      2.8878482      2983.7813    
       900   305.90759     -36698.047      15734.358      2.8878482      2983.7813    
      1000   273.26749     -36693.301      15505.963      2.8878482      2983.7813    
      1100   315.04184     -36725.037      11434.354      2.8878482      2983.7813    
      1200   293.43023     -36714.476      12787.92       2.8878482      2983.7813    
      1300   290.49315     -36714.846      9892.9822      2.8878482      2983.7813    
      1400   309.99082     -36726.01       10160.598      2.8878482      2983.7813    
      1500   305.2011      -36708.481      17416.951      2.8878482      2983.7813    
      1600   313.45773     -36700.58       9404.5221      2.8878482      2983.7813    
      1700   317.3044      -36706.917      9946.2505      2.8878482      2983.7813    
      1800   318.34146     -36733.096      12493.352      2.8878482      2983.7813    
      1900   289.9126      -36722.976      11159.577      2.8878482      2983.7813    
      2000   308.32951     -36731.97       13104.623      2.8878482      2983.7813    
      2100   300.59556     -36714.044      13486.415      2.8878482      2983.7813    
      2200   303.71188     -36695.46       12750.037      2.8878482      2983.7813    
      2300   331.53846     -36699.812      14242.971      2.8878482      2983.7813    
      2400   326.94417     -36697.588      19577.157      2.8878482      2983.7813    
      2500   312.0223      -36714.055      9652.8052      2.8878482      2983.7813    
      2600   291.81188     -36714.531      7676.5978      2.8878482      2983.7813    
      2700   300.54102     -36728.095      12734.677      2.8878482      2983.7813    
      2800   303.45909     -36724.367      9450.7115      2.8878482      2983.7813    
      2900   289.66946     -36696.683      9243.9922      2.8878482      2983.7813    
      3000   321.60685     -36698.944      17614.926      2.8878482      2983.7813    
      3100   307.03878     -36697.919      13907.119      2.8878482      2983.7813    
      3200   309.0833      -36721.749      6579.5926      2.8878482      2983.7813    
      3300   285.49082     -36715.227      11251.436      2.8878482      2983.7813    
      3400   296.72005     -36715.089      12125.611      2.8878482      2983.7813    
      3500   302.9519      -36707.594      13618.71       2.8878482      2983.7813    
      3600   323.9605      -36712.212      8591.4695      2.8878482      2983.7813    
      3700   331.76704     -36705.842      11370.362      2.8878482      2983.7813    
      3800   304.47406     -36692.889      17611.234      2.8878482      2983.7813    
      3900   293.13752     -36711.002      19851.342      2.8878482      2983.7813    
      4000   312.0903      -36732.47       14152.542      2.8878482      2983.7813    
      4100   267.29093     -36695.649      11654.113      2.8878482      2983.7813    
      4200   326.04601     -36718.995      15127.016      2.8878482      2983.7813    
      4300   325.52628     -36693.883      9109.1857      2.8878482      2983.7813    
      4400   325.43611     -36678.539      20618.435      2.8878482      2983.7813    
      4500   316.49006     -36700.136      19625.228      2.8878482      2983.7813    
      4600   302.63339     -36712.572      11855.664      2.8878482      2983.7813    
      4700   288.74394     -36715.778      12190.867      2.8878482      2983.7813    
      4800   290.33548     -36721.373      12605.337      2.8878482      2983.7813    
      4900   288.87363     -36713.871      10086.639      2.8878482      2983.7813    
      5000   307.51478     -36700.419      13035.426      2.8878482      2983.7813    
Loop time of 119.248 on 8 procs for 5000 steps with 243 atoms

Performance: 1.811 ns/day, 13.250 hours/ns, 41.929 timesteps/s, 10.189 katom-step/s
98.7% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 91.58      | 95.206     | 99.19      |  28.4 | 79.84
Bond    | 0.011035   | 0.011555   | 0.012247   |   0.4 |  0.01
Neigh   | 7.878      | 7.9413     | 7.979      |   1.3 |  6.66
Comm    | 0.89645    | 4.8803     | 8.5082     | 125.5 |  4.09
Output  | 0.0074311  | 0.0086194  | 0.010017   |   1.0 |  0.01
Modify  | 11.067     | 11.103     | 11.164     |   1.0 |  9.31
Other   |            | 0.09704    |            |       |  0.08

Nlocal:         30.375 ave          34 max          27 min
Histogram: 2 1 0 0 1 1 0 0 2 1
Nghost:        2729.62 ave        2751 max        2709 min
Histogram: 3 1 0 0 0 0 0 1 0 3
Neighs:        17574.1 ave       19614 max       15668 min
Histogram: 2 1 0 0 1 1 0 0 2 1

Total # of neighbors = 140593
Ave neighs/atom = 578.57202
Ave special neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg6

# Compute elastic constant from pressure
# d1 = -[pxx1-pxx0]/[(v_delta/v_len0] defined in input script
# variable C1neg equal ${d1}
# variable C2neg equal ${d2}
# variable C3neg equal ${d3}
# variable C4neg equal ${d4}
# variable C5neg equal ${d5}
# variable C6neg equal ${d6}

# Reset box and simulation parameters
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:98)
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.02*${len0}
variable delta equal 0.02*15.9631
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.02*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.02*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.02*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box
fix deform_p all deform 100 xy delta ${delta} remap v units box
fix deform_p all deform 100 xy delta 0.319262 remap v units box

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 6 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
# pair_coeff * * CHONSSi.ff O Si
# pair_coeff * * CHOSiNa.ff O Si
# pair_coeff * * SiOCHN_2018.ff O Si
# pair_coeff * * PDMSDecomp.ff Si O
# pair_coeff * * CHONSi.ff C H O Si
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press density vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50
Resetting global fix info from restart file:
  fix style: nvt, fix ID: fnvt


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos6.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos6.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom ${nthermo} dump/pos_deform${dir}.lammpstrj id type q x y z
dump dump_pos6 all custom ${nthermo} dump/pos_deform${dir}.lammpstrj id type q x y z
dump dump_pos6 all custom 100 dump/pos_deform${dir}.lammpstrj id type q x y z
dump dump_pos6 all custom 100 dump/pos_deform6.lammpstrj id type q x y z
run ${nrun}
run 5000
All restart file global fix info was re-assigned
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 105.8 | 106.1 | 106.4 Mbytes
   Step          Temp          PotEng         Press         Density         Volume    
         0   286.93432     -36714.921      17074.236      2.8878482      2983.7813    
       100   278.5893      -36694.229      15462.952      2.8878482      2983.7813    
       200   299.16907     -36699.154      5707.1558      2.8878482      2983.7813    
       300   298.81948     -36702.228      17534.588      2.8878482      2983.7813    
       400   295.35303     -36722.759      11825.004      2.8878482      2983.7813    
       500   281.82948     -36715.467      6110.3314      2.8878482      2983.7813    
       600   319.42234     -36732.09       12644.844      2.8878482      2983.7813    
       700   310.56944     -36704.643      15180.028      2.8878482      2983.7813    
       800   312.19312     -36692.078      10341.342      2.8878482      2983.7813    
       900   304.56547     -36705.652      6040.95        2.8878482      2983.7813    
      1000   294.98117     -36727.104      16954.227      2.8878482      2983.7813    
      1100   306.96091     -36728.81       7841.9178      2.8878482      2983.7813    
      1200   319.74615     -36725.102      7802.3477      2.8878482      2983.7813    
      1300   318.41647     -36712.411      15194.283      2.8878482      2983.7813    
      1400   326.22337     -36709.694      16317.839      2.8878482      2983.7813    
      1500   303.65066     -36697.455      9547.9194      2.8878482      2983.7813    
      1600   268.46837     -36702.287      12853.851      2.8878482      2983.7813    
      1700   298.72565     -36732.904      14587.919      2.8878482      2983.7813    
      1800   288.87443     -36715.962      7119.3849      2.8878482      2983.7813    
      1900   328.9307      -36722.632      11991.571      2.8878482      2983.7813    
      2000   324.43433     -36719.318      15091.178      2.8878482      2983.7813    
      2100   307.59311     -36714.139      10761.45       2.8878482      2983.7813    
      2200   306.28826     -36724.173      12994.864      2.8878482      2983.7813    
      2300   300.28179     -36722.417      13716.784      2.8878482      2983.7813    
      2400   278.21623     -36702.329      11617.993      2.8878482      2983.7813    
      2500   316.82398     -36709.158      13826.177      2.8878482      2983.7813    
      2600   301.85533     -36669.002      19040.343      2.8878482      2983.7813    
      2700   323.21916     -36699.567      14587.389      2.8878482      2983.7813    
      2800   310.54123     -36710.189      7676.4609      2.8878482      2983.7813    
      2900   289.10864     -36711.263      16020.451      2.8878482      2983.7813    
      3000   290.23992     -36718.342      10415.469      2.8878482      2983.7813    
      3100   288.51252     -36715.297      13336.616      2.8878482      2983.7813    
      3200   307.61198     -36700.632      17266.255      2.8878482      2983.7813    
      3300   305.4843      -36693.242      18859.316      2.8878482      2983.7813    
      3400   315.40943     -36715.781      10627.364      2.8878482      2983.7813    
      3500   287.96862     -36719.071      10152.133      2.8878482      2983.7813    
      3600   311.84675     -36733.012      10746.61       2.8878482      2983.7813    
      3700   280.05582     -36705.387      14127.632      2.8878482      2983.7813    
      3800   314.78926     -36709.182      8558.5907      2.8878482      2983.7813    
      3900   310.77253     -36697.981      7774.3106      2.8878482      2983.7813    
      4000   306.59566     -36707.086      10313.97       2.8878482      2983.7813    
      4100   277.90154     -36694.808      15825.139      2.8878482      2983.7813    
      4200   303.8304      -36711.355      11986.371      2.8878482      2983.7813    
      4300   277.08862     -36698.028      10135.635      2.8878482      2983.7813    
      4400   313.34715     -36731.531      11619.596      2.8878482      2983.7813    
      4500   265.07784     -36713.339      12950.797      2.8878482      2983.7813    
      4600   296.73252     -36731.578      8439.5338      2.8878482      2983.7813    
      4700   313.9657      -36714.914      11519.663      2.8878482      2983.7813    
      4800   304.95172     -36704.388      12362.457      2.8878482      2983.7813    
      4900   307.22626     -36713.173      7320.229       2.8878482      2983.7813    
      5000   273.39978     -36705.598      15644.311      2.8878482      2983.7813    
Loop time of 118.203 on 8 procs for 5000 steps with 243 atoms

Performance: 1.827 ns/day, 13.134 hours/ns, 42.300 timesteps/s, 10.279 katom-step/s
98.7% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 92.022     | 94.719     | 98.529     |  23.1 | 80.13
Bond    | 0.010724   | 0.011427   | 0.012076   |   0.5 |  0.01
Neigh   | 7.8222     | 7.8806     | 7.9693     |   1.8 |  6.67
Comm    | 0.89535    | 4.7097     | 7.4079     | 103.6 |  3.98
Output  | 0.0074851  | 0.0088369  | 0.010348   |   1.1 |  0.01
Modify  | 10.688     | 10.773     | 10.836     |   1.5 |  9.11
Other   |            | 0.1007     |            |       |  0.09

Nlocal:         30.375 ave          33 max          27 min
Histogram: 2 0 0 0 0 1 2 0 2 1
Nghost:        2685.62 ave        2711 max        2665 min
Histogram: 3 1 0 0 0 0 0 2 1 1
Neighs:        17582.4 ave       19060 max       15681 min
Histogram: 2 0 0 0 1 0 2 0 2 1

Total # of neighbors = 140659
Ave neighs/atom = 578.84362
Ave special neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos6

# # Combine positive and negative
# variable C1${dir} equal 0.5*(${C1neg}+${C1pos})
# variable C2${dir} equal 0.5*(${C2neg}+${C2pos})
# variable C3${dir} equal 0.5*(${C3neg}+${C3pos})
# variable C4${dir} equal 0.5*(${C4neg}+${C4pos})
# variable C5${dir} equal 0.5*(${C5neg}+${C5pos})
# variable C6${dir} equal 0.5*(${C6neg}+${C6pos})

# Delete dir to make sure it is not reused
variable dir delete

# Calc and output
# include calc.mod.lmp

Total wall time: 0:24:48
