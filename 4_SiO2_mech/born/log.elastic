
# Define MD parameters
variable nevery equal 50                 # sampling interval
variable nrepeat equal 10                 # times to use input values for calculating averages
variable nfreq equal ${nevery}*${nrepeat} # length of one average
variable nfreq equal 50*${nrepeat} 
variable nfreq equal 50*10 
variable nthermo equal ${nfreq}           # interval for thermo output: 100
variable nthermo equal 500           

variable temp equal 300.0                # temperature of initial sample
variable timestep equal 0.5               # timestep
variable adiabatic equal 2                # adiabatic (1) or isothermal (2)
variable tdamp equal 50.0                 # time constant for temperature
variable pdamp equal 10*${tdamp}          # time constant for pressure
variable pdamp equal 10*50          
variable seed index 123456                # seed for thermostat
variable thermostat equal 1               # 0 if NVE, 1 if NPT, 2 if NVT
variable delta index 1.0e-6               # Born numdiff strain magnitude

# read initial structure
units           real
dimension       3
boundary        p p p
atom_style      full

# read initial structure
variable structure string "333SiO2-1-UFF-c"
read_data ${structure}.data
read_data 333SiO2-1-UFF-c.data
Reading data file ...
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  reading atoms ...
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.001 seconds
  read_data CPU = 0.009 seconds

variable nequil equal 10*${nthermo}       # length of equilibration run 20
variable nequil equal 10*500       
variable nrun equal 20*${nthermo}          # length of equilibrated run
variable nrun equal 20*500          

# Compute initial state
# Energy minimization
print "*****Minimization starts.*****"
*****Minimization starts.*****
velocity        all create ${temp} ${seed} dist gaussian
velocity        all create 300 ${seed} dist gaussian
velocity        all create 300 123456 dist gaussian
minimize 1.0e-6 1.0e-6 100 1000
WARNING: No pairwise cutoff or binsize set. Atom sorting therefore disabled. (src/atom.cpp:2366)
WARNING: Communication cutoff is 0.0. No ghost atoms will be generated. Atoms may get lost. (src/comm_brick.cpp:210)
Per MPI rank memory allocation (min/avg/max) = 9.864 | 9.864 | 9.864 Mbytes
   Step          Temp          E_pair         E_mol          TotEng         Press     
         0   300            0              0              216.40681      3315.4065    
         1   300            0              0              216.40681      3315.4065    
Loop time of 6.18946e-05 on 64 procs for 1 steps with 243 atoms

70.7% CPU use with 8 MPI tasks x 8 OpenMP threads

Minimization stats:
  Stopping criterion = search direction is not downhill
  Energy initial, next-to-last, final = 
                     0                  0                  0
  Force two-norm initial, final = 0 0
  Force max component initial, final = 0 0
  Final line search alpha, max atom move = 0 0
  Iterations, force evaluations = 1 0

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0          | 0          | 0          |   0.0 |  0.00
Bond    | 1.43e-07   | 1.9463e-07 | 2.62e-07   |   0.0 |  0.31
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 4.42e-06   | 4.9165e-06 | 5.439e-06  |   0.0 |  7.94
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 5.678e-05  |            |       | 91.74

Nlocal:         30.375 ave          33 max          24 min
Histogram: 1 0 0 0 0 0 4 0 0 3
Nghost:           2.25 ave           5 max           0 min
Histogram: 2 0 1 0 2 0 0 0 2 1
Neighs:              0 ave           0 max           0 min
Histogram: 8 0 0 0 0 0 0 0 0 0

Total # of neighbors = 0
Ave neighs/atom = 0
Ave special neighs/atom = 0
Neighbor list builds = 0
Dangerous builds = 0
min_style cg
# Save the optimized structure
write_data ${structure}_opt.data
write_data 333SiO2-1-UFF-c_opt.data
System init for write_data ...
WARNING: Communication cutoff is 0.0. No ghost atoms will be generated. Atoms may get lost. (src/comm_brick.cpp:210)
reset_timestep 0

# equilibration
variable thermostat equal 1               # 0 if NVE, 1 if NPT, 2 if NVT
print "equil: ${thermostat}"
equil: 1

include ff.in
# NOTE: This script can be modified for different pair styles
# See in.elastic for more info.

reset_timestep 0


# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
# pair_coeff * * CHONSSi.ff O Si
# pair_coeff * * CHOSiNa.ff O Si
pair_coeff * * SiOCHN_2018.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
# pair_coeff * * PDMSDecomp.ff Si O
# pair_coeff * * CHOFe.ff O Si

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup MD
# 0 if NVE, 1 if NPT, 2 if NVT
timestep ${timestep}
timestep 0.5

if "${thermostat} == 0" then    "fix 4 all nve" elif "${thermostat} == 1"    "fix 5 all npt temp ${temp} ${temp} ${tdamp} iso 1.0 1.0 ${pdamp}" elif "${thermostat} == 2"    "unfix 5"    "fix 6 all nvt temp ${temp} ${temp} ${tdamp}"
fix 5 all npt temp ${temp} ${temp} ${tdamp} iso 1.0 1.0 ${pdamp}
fix 5 all npt temp 300 ${temp} ${tdamp} iso 1.0 1.0 ${pdamp}
fix 5 all npt temp 300 300 ${tdamp} iso 1.0 1.0 ${pdamp}
fix 5 all npt temp 300 300 50 iso 1.0 1.0 ${pdamp}
fix 5 all npt temp 300 300 50 iso 1.0 1.0 500
print "md: ${thermostat}"
md: 1
thermo ${nthermo}
thermo 500
thermo_style custom step temp pe press density vol
# save trajectory
dump dump_opt all custom ${nthermo} dump_opt.lammpstrj id type x y z
dump dump_opt all custom 500 dump_opt.lammpstrj id type x y z
run ${nequil}
run 5000

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Your simulation uses code contributions which should be cited:

- pair reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 number =  {4--5},
 pages =   {245--259}
}

- fix qeq/reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 pages =   {245--259}
}

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 114.4 | 114.5 | 114.6 Mbytes
   Step          Temp          PotEng         Press         Density         Volume    
         0   300           -36701.66       32984.73       2.8878482      2983.7813    
       500   320.50765     -36519.824      18853.687      2.8415778      3032.3672    
      1000   292.13764     -36529.476     -7570.2056      2.8234695      3051.8153    
      1500   292.65842     -36529.381     -3405.4983      2.8308678      3043.8395    
      2000   299.89035     -36515.021     -3177.7669      2.8094722      3067.02      
      2500   262.80434     -36529.022     -1886.0413      2.8022566      3074.9173    
      3000   297.36673     -36537.59      -2037.7777      2.8169479      3058.8807    
      3500   302.71368     -36518.769      3811.793       2.8309168      3043.7869    
      4000   289.23606     -36530.351      877.45851      2.8377804      3036.425     
      4500   284.3547      -36533.588      6513.967       2.8532267      3019.9869    
      5000   293.14928     -36530.598      3523.2028      2.8368644      3037.4054    
Loop time of 184.22 on 64 procs for 5000 steps with 243 atoms

Performance: 1.173 ns/day, 20.469 hours/ns, 27.141 timesteps/s, 6.595 katom-step/s
207.7% CPU use with 8 MPI tasks x 8 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 95.961     | 98.457     | 101.64     |  17.6 | 53.45
Bond    | 0.00083746 | 0.0010789  | 0.001367   |   0.4 |  0.00
Neigh   | 9.7298     | 9.9805     | 10.151     |   4.1 |  5.42
Comm    | 42.811     | 47.095     | 51.321     |  43.5 | 25.56
Output  | 0.0019671  | 0.0028465  | 0.0037937  |   1.5 |  0.00
Modify  | 25.223     | 28.603     | 33.54      |  44.9 | 15.53
Other   |            | 0.08043    |            |       |  0.04

Nlocal:         30.375 ave          33 max          26 min
Histogram: 2 0 0 0 0 1 0 1 2 2
Nghost:        2704.62 ave        2714 max        2697 min
Histogram: 2 1 0 0 1 1 1 1 0 1
Neighs:        17302.2 ave       18769 max       14850 min
Histogram: 2 0 0 0 0 1 0 1 2 2

Total # of neighbors = 138418
Ave neighs/atom = 569.6214
Ave special neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked
undump dump_opt
reset_timestep 0

variable thermostat equal 2               # 0 if NVE, 1 if NPT, 2 if NVT
print "main run: ${thermostat}"
main run: 2
include ff.in
# NOTE: This script can be modified for different pair styles
# See in.elastic for more info.

reset_timestep 0


# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
# pair_coeff * * CHONSSi.ff O Si
# pair_coeff * * CHOSiNa.ff O Si
pair_coeff * * SiOCHN_2018.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
# pair_coeff * * PDMSDecomp.ff Si O
# pair_coeff * * CHOFe.ff O Si

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup MD
# 0 if NVE, 1 if NPT, 2 if NVT
timestep ${timestep}
timestep 0.5

if "${thermostat} == 0" then    "fix 4 all nve" elif "${thermostat} == 1"    "fix 5 all npt temp ${temp} ${temp} ${tdamp} iso 1.0 1.0 ${pdamp}" elif "${thermostat} == 2"    "unfix 5"    "fix 6 all nvt temp ${temp} ${temp} ${tdamp}"
unfix 5
fix 6 all nvt temp ${temp} ${temp} ${tdamp}
fix 6 all nvt temp 300 ${temp} ${tdamp}
fix 6 all nvt temp 300 300 ${tdamp}
fix 6 all nvt temp 300 300 50
print "md: ${thermostat}"
md: 2
include output.in
# Setup output
# define factors for units conversion
variable atm2Gpa equal 1.0-4    # atm -> GPa
variable pa2Gpa equal 1.0-9    # atm -> GPa
variable kb equal 1.380649e-23    # J/K, Boltzmann constant
variable kcm2J equal 4184/6.022e23 # kcal/mol -> J
variable A2m3 equal 1.0e-30 # Angstrom -> m, in volumn
variable vkt equal vol*${A2m3}/(${kb}*$(temp)) # V/(kb*T) coefficent for F_ij, K_ij tensor
variable vkt equal vol*1e-30/(${kb}*$(temp)) 
variable vkt equal vol*1e-30/(1.380649e-23*$(temp)) 
variable vkt equal vol*1e-30/(1.380649e-23*293.14928241528031094) 

# virial stress tensor s_ij
# change the index from LMP to Voigt notation
compute stress all pressure thermo_temp
variable s1 equal c_stress[1]
variable s2 equal c_stress[2]
variable s3 equal c_stress[3]
variable s4 equal c_stress[6]
variable s5 equal c_stress[5]
variable s6 equal c_stress[4]

variable s11 equal v_s1*v_s1
variable s22 equal v_s2*v_s2
variable s33 equal v_s3*v_s3
variable s44 equal v_s4*v_s4
variable s55 equal v_s5*v_s5
variable s66 equal v_s6*v_s6
variable s12 equal v_s1*v_s2
variable s13 equal v_s1*v_s3
variable s14 equal v_s1*v_s4
variable s15 equal v_s1*v_s5
variable s16 equal v_s1*v_s6
variable s23 equal v_s2*v_s3
variable s24 equal v_s2*v_s4
variable s25 equal v_s2*v_s5
variable s26 equal v_s2*v_s6
variable s34 equal v_s3*v_s4
variable s35 equal v_s3*v_s5
variable s36 equal v_s3*v_s6
variable s45 equal v_s4*v_s5
variable s46 equal v_s4*v_s6
variable s56 equal v_s5*v_s6

variable mytemp equal temp
variable mypress equal press
variable mype equal pe/atoms
fix avt all ave/time ${nevery} ${nrepeat} ${nfreq} v_mytemp ave running
fix avt all ave/time 50 ${nrepeat} ${nfreq} v_mytemp ave running
fix avt all ave/time 50 10 ${nfreq} v_mytemp ave running
fix avt all ave/time 50 10 500 v_mytemp ave running
fix avp all ave/time ${nevery} ${nrepeat} ${nfreq} v_mypress ave running
fix avp all ave/time 50 ${nrepeat} ${nfreq} v_mypress ave running
fix avp all ave/time 50 10 ${nfreq} v_mypress ave running
fix avp all ave/time 50 10 500 v_mypress ave running
fix avpe all ave/time ${nevery} ${nrepeat} ${nfreq} v_mype ave running
fix avpe all ave/time 50 ${nrepeat} ${nfreq} v_mype ave running
fix avpe all ave/time 50 10 ${nfreq} v_mype ave running
fix avpe all ave/time 50 10 500 v_mype ave running
fix avs all ave/time ${nevery} ${nrepeat} ${nfreq} v_s1 v_s2 v_s3 v_s4 v_s5 v_s6 ave running
fix avs all ave/time 50 ${nrepeat} ${nfreq} v_s1 v_s2 v_s3 v_s4 v_s5 v_s6 ave running
fix avs all ave/time 50 10 ${nfreq} v_s1 v_s2 v_s3 v_s4 v_s5 v_s6 ave running
fix avs all ave/time 50 10 500 v_s1 v_s2 v_s3 v_s4 v_s5 v_s6 ave running
fix avssq all ave/time ${nevery} ${nrepeat} ${nfreq} v_s11 v_s22 v_s33 v_s44 v_s55 v_s66 v_s12 v_s13 v_s14 v_s15 v_s16 v_s23 v_s24 v_s25 v_s26 v_s34 v_s35 v_s36 v_s45 v_s46 v_s56 ave running
fix avssq all ave/time 50 ${nrepeat} ${nfreq} v_s11 v_s22 v_s33 v_s44 v_s55 v_s66 v_s12 v_s13 v_s14 v_s15 v_s16 v_s23 v_s24 v_s25 v_s26 v_s34 v_s35 v_s36 v_s45 v_s46 v_s56 ave running
fix avssq all ave/time 50 10 ${nfreq} v_s11 v_s22 v_s33 v_s44 v_s55 v_s66 v_s12 v_s13 v_s14 v_s15 v_s16 v_s23 v_s24 v_s25 v_s26 v_s34 v_s35 v_s36 v_s45 v_s46 v_s56 ave running
fix avssq all ave/time 50 10 500 v_s11 v_s22 v_s33 v_s44 v_s55 v_s66 v_s12 v_s13 v_s14 v_s15 v_s16 v_s23 v_s24 v_s25 v_s26 v_s34 v_s35 v_s36 v_s45 v_s46 v_s56 ave running

# units conversion for F tensor
variable Ffac equal ${atm2Gpa}*${vkt}   # conversion factor for F_ij tensor
variable Ffac equal -3*${vkt}   
variable Ffac equal -3*7.50465342768364e-07   

# calculate stress fluctuation term Fij, using the coviarance of virial stress tensor s_ij
variable F11 equal -(f_avssq[1]-f_avs[1]*f_avs[1])*${Ffac}
variable F11 equal -(f_avssq[1]-f_avs[1]*f_avs[1])*-2.25139602830509e-06
variable F22 equal -(f_avssq[2]-f_avs[2]*f_avs[2])*${Ffac}
variable F22 equal -(f_avssq[2]-f_avs[2]*f_avs[2])*-2.25139602830509e-06
variable F33 equal -(f_avssq[3]-f_avs[3]*f_avs[3])*${Ffac}
variable F33 equal -(f_avssq[3]-f_avs[3]*f_avs[3])*-2.25139602830509e-06
variable F44 equal -(f_avssq[4]-f_avs[4]*f_avs[4])*${Ffac}
variable F44 equal -(f_avssq[4]-f_avs[4]*f_avs[4])*-2.25139602830509e-06
variable F55 equal -(f_avssq[5]-f_avs[5]*f_avs[5])*${Ffac}
variable F55 equal -(f_avssq[5]-f_avs[5]*f_avs[5])*-2.25139602830509e-06
variable F66 equal -(f_avssq[6]-f_avs[6]*f_avs[6])*${Ffac}
variable F66 equal -(f_avssq[6]-f_avs[6]*f_avs[6])*-2.25139602830509e-06

variable F12 equal -(f_avssq[7]-f_avs[1]*f_avs[2])*${Ffac}
variable F12 equal -(f_avssq[7]-f_avs[1]*f_avs[2])*-2.25139602830509e-06
variable F13 equal -(f_avssq[8]-f_avs[1]*f_avs[3])*${Ffac}
variable F13 equal -(f_avssq[8]-f_avs[1]*f_avs[3])*-2.25139602830509e-06
variable F14 equal -(f_avssq[9]-f_avs[1]*f_avs[4])*${Ffac}
variable F14 equal -(f_avssq[9]-f_avs[1]*f_avs[4])*-2.25139602830509e-06
variable F15 equal -(f_avssq[10]-f_avs[1]*f_avs[5])*${Ffac}
variable F15 equal -(f_avssq[10]-f_avs[1]*f_avs[5])*-2.25139602830509e-06
variable F16 equal -(f_avssq[11]-f_avs[1]*f_avs[6])*${Ffac}
variable F16 equal -(f_avssq[11]-f_avs[1]*f_avs[6])*-2.25139602830509e-06

variable F23 equal -(f_avssq[12]-f_avs[2]*f_avs[3])*${Ffac}
variable F23 equal -(f_avssq[12]-f_avs[2]*f_avs[3])*-2.25139602830509e-06
variable F24 equal -(f_avssq[13]-f_avs[2]*f_avs[4])*${Ffac}
variable F24 equal -(f_avssq[13]-f_avs[2]*f_avs[4])*-2.25139602830509e-06
variable F25 equal -(f_avssq[14]-f_avs[2]*f_avs[5])*${Ffac}
variable F25 equal -(f_avssq[14]-f_avs[2]*f_avs[5])*-2.25139602830509e-06
variable F26 equal -(f_avssq[15]-f_avs[2]*f_avs[6])*${Ffac}
variable F26 equal -(f_avssq[15]-f_avs[2]*f_avs[6])*-2.25139602830509e-06

variable F34 equal -(f_avssq[16]-f_avs[3]*f_avs[4])*${Ffac}
variable F34 equal -(f_avssq[16]-f_avs[3]*f_avs[4])*-2.25139602830509e-06
variable F35 equal -(f_avssq[17]-f_avs[3]*f_avs[5])*${Ffac}
variable F35 equal -(f_avssq[17]-f_avs[3]*f_avs[5])*-2.25139602830509e-06
variable F36 equal -(f_avssq[18]-f_avs[3]*f_avs[6])*${Ffac}
variable F36 equal -(f_avssq[18]-f_avs[3]*f_avs[6])*-2.25139602830509e-06

variable F45 equal -(f_avssq[19]-f_avs[4]*f_avs[5])*${Ffac}
variable F45 equal -(f_avssq[19]-f_avs[4]*f_avs[5])*-2.25139602830509e-06
variable F46 equal -(f_avssq[20]-f_avs[4]*f_avs[6])*${Ffac}
variable F46 equal -(f_avssq[20]-f_avs[4]*f_avs[6])*-2.25139602830509e-06

variable F56 equal -(f_avssq[21]-f_avs[5]*f_avs[6])*${Ffac}
variable F56 equal -(f_avssq[21]-f_avs[5]*f_avs[6])*-2.25139602830509e-06

# Born term, 2nd derivative of energy
compute     virial all pressure NULL virial
compute     born all born/matrix numdiff ${delta} virial
compute     born all born/matrix numdiff 1.0e-6 virial
fix 	    avborn all ave/time ${nevery} ${nrepeat} ${nfreq} c_born[*] ave running             file born.out
fix 	    avborn all ave/time 50 ${nrepeat} ${nfreq} c_born[*] ave running             file born.out
fix 	    avborn all ave/time 50 10 ${nfreq} c_born[*] ave running             file born.out
fix 	    avborn all ave/time 50 10 500 c_born[*] ave running             file born.out
fix         vir all ave/time 1 1 1 c_virial[*]             file vir.out

# units conversion for B tensor
variable Bfac equal ${kcm2J}/($(vol)*${A2m3})*${pa2Gpa}
variable Bfac equal 6.94785785453338e-21/($(vol)*${A2m3})*${pa2Gpa}
variable Bfac equal 6.94785785453338e-21/(3037.4053880639971794*${A2m3})*${pa2Gpa}
variable Bfac equal 6.94785785453338e-21/(3037.4053880639971794*1e-30)*${pa2Gpa}
variable Bfac equal 6.94785785453338e-21/(3037.4053880639971794*1e-30)*-8
variable B vector f_avborn*${Bfac}
variable B vector f_avborn*-18299454.8751014

# K(inetic) term
variable kfac equal atoms/${vkt}*${pa2Gpa}
variable kfac equal atoms/7.50465342768364e-07*${pa2Gpa}
variable kfac equal atoms/7.50465342768364e-07*-8

variable K11 equal 4.0*${kfac}
variable K11 equal 4.0*-2590392772.60806
variable K22 equal 4.0*${kfac}
variable K22 equal 4.0*-2590392772.60806
variable K33 equal 4.0*${kfac}
variable K33 equal 4.0*-2590392772.60806
variable K44 equal 2.0*${kfac}
variable K44 equal 2.0*-2590392772.60806
variable K55 equal 2.0*${kfac}
variable K55 equal 2.0*-2590392772.60806
variable K66 equal 2.0*${kfac}
variable K66 equal 2.0*-2590392772.60806

# Add F, K, and B together
variable C11 equal v_F11+v_B[1]+v_K11
variable C22 equal v_F22+v_B[2]+v_K22
variable C33 equal v_F33+v_B[3]+v_K33
variable C44 equal v_F44+v_B[4]+v_K44
variable C55 equal v_F55+v_B[5]+v_K55
variable C66 equal v_F66+v_B[6]+v_K66

variable C12 equal v_F12+v_B[7]
variable C13 equal v_F13+v_B[8]
variable C14 equal v_F14+v_B[9]
variable C15 equal v_F15+v_B[10]
variable C16 equal v_F16+v_B[11]

variable C23 equal v_F23+v_B[12]
variable C24 equal v_F24+v_B[13]
variable C25 equal v_F25+v_B[14]
variable C26 equal v_F26+v_B[15]

variable C34 equal v_F34+v_B[16]
variable C35 equal v_F35+v_B[17]
variable C36 equal v_F36+v_B[18]

variable C45 equal v_F45+v_B[19]
variable C46 equal v_F46+v_B[20]

variable C56 equal v_F56+v_B[21]

thermo		${nthermo}
thermo		500
thermo_style custom step temp pe press f_avp v_B[11] v_F11 v_K11
# thermo_style custom step temp pe press f_avp density vol
thermo_modify norm no


# save trajectory
dump dump_main all custom ${nthermo} dump_main.lammpstrj id type x y z
dump dump_main all custom 500 dump_main.lammpstrj id type x y z
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 115.2 | 115.3 | 115.3 Mbytes
   Step          Temp          PotEng         Press          f_avp         v_B[11]         v_F11          v_K11     
         0   293.14928     -36530.597      3524.4545      0             -0              0             -1.0361571e+10
       500   303.28425     -36532.511     -858.66516     -8.3268811      7.5842274e+10  68.671381     -1.0361571e+10
      1000   303.83232     -36526.546      200.59999      58.22041       7.7390022e+10  98.131237     -1.0361571e+10
      1500   306.00225     -36539.635      3012.317       705.6215       9.9155435e+10  83.532582     -1.0361571e+10
      2000   296.49743     -36534.384      1273.5245      782.05565      9.1630696e+10  97.991241     -1.0361571e+10
      2500   293.19518     -36522.682      1244.0006      860.01452      1.4131738e+11  100.96103     -1.0361571e+10
      3000   276.45706     -36513.651      1770.5051      885.81905      9.8777409e+10  104.1998      -1.0361571e+10
      3500   320.76792     -36524.976     -1840.896       1227.8755      1.1749706e+11  134.88045     -1.0361571e+10
      4000   320.17683     -36512.822      5062.7983      1262.8796      1.0923371e+11  139.18057     -1.0361571e+10
      4500   317.08965     -36514.831     -1292.1839      1372.1014      6.2561566e+10  144.42006     -1.0361571e+10
      5000   314.76409     -36518.695      8725.4615      1428.6734      5.3402393e+10  135.21001     -1.0361571e+10
      5500   302.3406      -36517.054     -358.5667       1312.9605      5.4562246e+10  134.77201     -1.0361571e+10
      6000   284.71869     -36529.575     -143.07364      1394.5634      7.5095956e+10  132.07974     -1.0361571e+10
      6500   295.96671     -36536.651      510.32088      1427.2294      8.132752e+10   133.22049     -1.0361571e+10
      7000   299.22774     -36529.333      1463.8229      1343.6277      8.9230714e+10  134.49774     -1.0361571e+10
      7500   301.93717     -36527.813      1145.4733      1392.3855      8.3468865e+10  142.23832     -1.0361571e+10
      8000   294.03425     -36526.409     -235.4585       1376.3409      7.5473976e+10  148.87326     -1.0361571e+10
      8500   331.22496     -36518.07       3144.5371      1426.4235      7.7752717e+10  154.13364     -1.0361571e+10
      9000   285.63626     -36528.557      7152.9238      1400.1383      8.1526363e+10  152.17917     -1.0361571e+10
      9500   296.68717     -36536.424     -2850.8167      1483.2918      6.1281034e+10  150.75146     -1.0361571e+10
     10000   334.54185     -36544.61       4285.5932      1496.5529      5.7992335e+10  154.39158     -1.0361571e+10
Loop time of 313.527 on 64 procs for 10000 steps with 243 atoms

Performance: 1.378 ns/day, 17.418 hours/ns, 31.895 timesteps/s, 7.751 katom-step/s
117.8% CPU use with 8 MPI tasks x 8 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 164.79     | 169.25     | 172.75     |  24.3 | 53.98
Bond    | 0.0015236  | 0.0019073  | 0.0025805  |   0.7 |  0.00
Neigh   | 17.583     | 17.89      | 18.58      |   7.6 |  5.71
Comm    | 32.119     | 38.67      | 44.5       |  67.0 | 12.33
Output  | 0.0033191  | 0.0047482  | 0.0062487  |   1.9 |  0.00
Modify  | 84.781     | 85.708     | 87.059     |   6.6 | 27.34
Other   |            | 2.007      |            |       |  0.64

Nlocal:         30.375 ave          33 max          26 min
Histogram: 1 0 1 0 0 1 0 2 2 1
Nghost:         2696.5 ave        2704 max        2689 min
Histogram: 1 1 1 0 1 0 1 1 1 1
Neighs:        17310.5 ave       18781 max       14875 min
Histogram: 1 0 1 0 0 1 0 2 2 1

Total # of neighbors = 138484
Ave neighs/atom = 569.893
Ave special neighs/atom = 0
Neighbor list builds = 1000
Dangerous builds not checked

# output the result
# summarize sampling protocol

print "Stress sampling interval = ${nevery}"
Stress sampling interval = 50
variable tmp equal ${nrun}/${nevery}
variable tmp equal 10000/${nevery}
variable tmp equal 10000/50
print "Stress sample count = ${tmp}"
Stress sample count = 200
print "Born sampling interval = ${nevery}"
Born sampling interval = 50
variable tmp equal ${nrun}/${nevery}
variable tmp equal 10000/${nevery}
variable tmp equal 10000/50
print "Born sample count = ${tmp}"
Born sample count = 200


print ""

print "Output the tensor to C.lmp.log"
Output the tensor to C.lmp.log

print "${C11} ${C12} ${C13} ${C14} ${C15} ${C16}"     file "C.lmp.log" screen no
print "${C12} ${C22} ${C23} ${C24} ${C25} ${C26}"    append "C.lmp.log" screen no
print "${C13} ${C23} ${C33} ${C34} ${C35} ${C36}"    append "C.lmp.log" screen no
print "${C14} ${C24} ${C34} ${C44} ${C45} ${C46}"    append "C.lmp.log" screen no
print "${C15} ${C25} ${C35} ${C45} ${C55} ${C56}"    append "C.lmp.log" screen no
print "${C16} ${C26} ${C36} ${C46} ${C56} ${C66}"    append "C.lmp.log" screen no

print "done!"
done!
Total wall time: 0:08:17
