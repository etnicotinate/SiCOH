# Initialization
units           real
dimension       3
boundary        p p p
atom_style      full
timestep        0.5   # fs

# Define MD parameters
variable nevery equal 10                  # sampling interval
variable nrepeat equal 10                 # number of samples
variable nfreq equal ${nevery}*${nrepeat} # length of one average
variable nthermo equal ${nfreq}           # interval for thermo output
# 1 ps : 1e3 fs / 0.5 fs = 2e3 steps
variable nequil equal 20*${nthermo}       # steps of equilibration run 20
variable nrun equal 20*${nthermo}          # stpes of equilibrated run 20
variable temp equal 300.0                # temperature of initial sample
variable tdamp equal 50.0                 # time constant for thermostat
variable seed equal 123457                # seed for thermostat
variable ufac equal 1.01325e-4         # pressure unit conversion, from atm to Gpa
variable up equal 0.01                  # the deformation magnitude 2.0e-2

# Read the initial sctructure
# box tilt large
variable structure string 333U-50C-14-vasp-an
read_data       ${structure}.data

# Energy minimization
print "*****Minimization starts.*****"
velocity        all create ${temp} ${seed} dist gaussian
minimize 1.0e-6 1.0e-6 100 1000
min_style cg

# Equilibration
include ff.mod.lmp
thermo_style custom step temp pe press f_avgp[1] density vol
run ${nequil}
# Save the optimized structure
write_data ${structure}_opt.data

# Save initial pressure, box size
variable pxx0 equal f_avgp[1]
variable pyy0 equal f_avgp[2]
variable pzz0 equal f_avgp[3]
variable pxy0 equal f_avgp[4]
variable pxz0 equal f_avgp[5]
variable pyz0 equal f_avgp[6]

# use tmp to save initial box length
variable tmp equal lx
variable lx0 equal ${tmp}
variable tmp equal ly
variable ly0 equal ${tmp}
variable tmp equal lz
variable lz0 equal ${tmp}

# define the derivatives, w.r.t. strain tensor
# Constants uses $, variables use v_ 
variable d1 equal -(v_pxx1-${pxx0})/(v_delta/v_len0)*${ufac}
variable d2 equal -(v_pyy1-${pyy0})/(v_delta/v_len0)*${ufac}
variable d3 equal -(v_pzz1-${pzz0})/(v_delta/v_len0)*${ufac}
variable d4 equal -(v_pyz1-${pyz0})/(v_delta/v_len0)*${ufac}*0.5
variable d5 equal -(v_pxz1-${pxz0})/(v_delta/v_len0)*${ufac}*0.5
variable d6 equal -(v_pxy1-${pxy0})/(v_delta/v_len0)*${ufac}*0.5

# Write restart
write_restart equil.res

# dir: direction
# uxx Perturbation
variable dir equal 1
include displace.mod.lmp
# uyy Perturbation
variable dir equal 2
include displace.mod.lmp
# uzz Perturbation
variable dir equal 3
include displace.mod.lmp
# uyz Perturbation
variable dir equal 4
include displace.mod.lmp
# uxz Perturbation
variable dir equal 5
include displace.mod.lmp
# uxy Perturbation
variable dir equal 6
include displace.mod.lmp

# Calc and output
include calc.mod.lmp

