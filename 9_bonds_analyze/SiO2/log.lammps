LAMMPS (2 Aug 2023 - Update 2)
  using 2 OpenMP thread(s) per MPI task
# Initialization
units           real
dimension       3
boundary        p p p
atom_style      full
timestep        0.5   # fs

# Define MD parameters
variable nevery equal 10                  # sampling interval
variable nrepeat equal 10                 # number of samples
variable nfreq equal ${nevery}*${nrepeat} # length of one average
variable nfreq equal 10*${nrepeat} 
variable nfreq equal 10*10 
variable nthermo equal ${nfreq}           # interval for thermo output
variable nthermo equal 100           
# 1 ps : 1e3 fs / 0.5 fs = 2e3 steps
variable nequil equal 100*${nthermo}       # steps of equilibration run 100
variable nequil equal 100*100       
variable nrun equal 100*${nthermo}          # stpes of equilibrated run 200
variable nrun equal 100*100          

variable temp equal 300.0                # temperature of initial sample
variable tdamp equal 50.0                 # time constant for thermostat
variable seed equal 123456                # seed for thermostat
variable ufac equal 1.01325e-4         # pressure unit conversion, from atm to Gpa
variable up equal 1.0                  # the deformation magnitude 0.01

variable FF string "CHOFe.ff O Si"   # force field args for pair_coeff
# pair_coeff * * CHONSSi.ff O Si
# pair_coeff * * CHOSiNa.ff O Si
# pair_coeff * * SiOCHN_2018.ff O Si
# pair_coeff * * PDMSDecomp.ff Si O
# pair_coeff * * CHONSi.ff C H O Si
# pair_coeff * * CHOFe.ff O Si
variable structure string SiO2

# Read the initial sctructure
# box tilt large
read_data       ${structure}.data
read_data       SiO2.data
Reading data file ...
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  reading atoms ...
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.001 seconds
  read_data CPU = 0.008 seconds

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)
# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
fix bondinfo all reaxff/bonds 1 bonds_opt.reaxff

# Energy minimization
print "*****Minimization starts.*****"
*****Minimization starts.*****
dump dump_opt all custom 1 dump/dump_opt.lammpstrj id type q x y z
minimize 1.0e-6 1.0e-6 100 1000

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Your simulation uses code contributions which should be cited:

- pair reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 number =  {4--5},
 pages =   {245--259}
}

- fix qeq/reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 pages =   {245--259}
}

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 113.4 | 113.5 | 113.6 Mbytes
   Step          Temp          E_pair         E_mol          TotEng         Press     
         0   0             -36881.566      0             -36881.566      18239.171    
         6   0             -36912.748      0             -36912.748      10419.926    
Loop time of 1.30919 on 16 procs for 6 steps with 243 atoms

97.7% CPU use with 8 MPI tasks x 2 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -36881.5659852413  -36912.7480455136  -36912.7481404418
  Force two-norm initial, final = 103.62827 45.838637
  Force max component initial, final = 10.335104 4.0135546
  Final line search alpha, max atom move = 3.5667109e-09 1.4315189e-08
  Iterations, force evaluations = 6 55

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.96302    | 1.0019     | 1.0401     |   3.1 | 76.53
Bond    | 9.4773e-05 | 0.00010503 | 0.00011321 |   0.0 |  0.01
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.035925   | 0.074133   | 0.11299    |  11.3 |  5.66
Output  | 0.00051683 | 0.00073504 | 0.00093909 |   0.0 |  0.06
Modify  | 0.23013    | 0.23016    | 0.2302     |   0.0 | 17.58
Other   |            | 0.002183   |            |       |  0.17

Nlocal:         30.375 ave          33 max          24 min
Histogram: 1 0 0 0 0 0 4 0 0 3
Nghost:        2699.62 ave        2706 max        2697 min
Histogram: 3 0 0 4 0 0 0 0 0 1
Neighs:          17613 ave       19098 max       13992 min
Histogram: 1 0 0 0 0 0 4 0 0 3

Total # of neighbors = 140904
Ave neighs/atom = 579.85185
Ave special neighs/atom = 0
Neighbor list builds = 0
Dangerous builds = 0
min_style cg
# Save the optimized structure
write_data ${structure}_opt.data
write_data SiO2_opt.data
System init for write_data ...
undump dump_opt
unfix bondinfo
velocity        all create ${temp} ${seed} dist gaussian
velocity        all create 300 ${seed} dist gaussian
velocity        all create 300 123456 dist gaussian

# Equilibration
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# fix bondinfo all reaxff/bonds ${nthermo} bonds.reaxff
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol lx ly lz
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50

if "$(is_defined(fix,avgp))" then "unfix avgp"
unfix avgp
if "$(is_defined(fix,avgl))" then "unfix avgl"
thermo_style custom step temp pe press density vol
WARNING: New thermo_style command, previous thermo_modify settings will be lost (src/output.cpp:903)
dump dump_eq all custom ${nthermo} dump/dump_eq.lammpstrj id type q x y z
dump dump_eq all custom 100 dump/dump_eq.lammpstrj id type q x y z

# compute MSD and RDF
compute msd1 all msd
fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp     file msd.out     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
fix myMSD all ave/time 100 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp     file msd.out     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
fix myMSD all ave/time 100 1 100 c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp     file msd.out     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
compute rdf1 all rdf 100 1 2 2 2 1 1 cutoff 5.0
fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*]     file rdf.out mode vector     title3 "# Row r g1(r) coor1(r) ..."
fix myRDF all ave/time 100 1 ${nthermo} c_rdf1[*]     file rdf.out mode vector     title3 "# Row r g1(r) coor1(r) ..."
fix myRDF all ave/time 100 1 100 c_rdf1[*]     file rdf.out mode vector     title3 "# Row r g1(r) coor1(r) ..."

run ${nequil}
run 10000
WARNING: Compute rdf cutoff less than neighbor cutoff - forcing a needless neighbor list build (src/compute_rdf.cpp:179)
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  3 neighbor lists, perpetual/occasional/extra = 2 1 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) compute rdf, occasional
      attributes: half, newton on, cut 7
      pair build: half/bin/newton/tri
      stencil: half/bin/3d/tri
      bin: standard
  (3) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 108.3 | 108.4 | 108.4 Mbytes
   Step          Temp          PotEng         Press         Density         Volume    
         0   300           -36912.748      13735.502      2.8878482      2983.7813    
       100   148.30843     -36769.661      8169.0406      2.8878482      2983.7813    
       200   189.89754     -36755.817      1102.0418      2.8878482      2983.7813    
       300   264.89008     -36762.437      20599.414      2.8878482      2983.7813    
       400   274.12167     -36715.897      14719.786      2.8878482      2983.7813    
       500   298.2046      -36689.434      4582.9901      2.8878482      2983.7813    
       600   324.78573     -36706.793      21206.55       2.8878482      2983.7813    
       700   299.22859     -36701.636      22802.836      2.8878482      2983.7813    
       800   300.16983     -36722.162      5922.8329      2.8878482      2983.7813    
       900   294.6255      -36731.328      9486.155       2.8878482      2983.7813    
      1000   284.8672      -36723.64       24818.092      2.8878482      2983.7813    
      1100   290.88328     -36703.312     -912.54049      2.8878482      2983.7813    
      1200   326.9483      -36708.745      19180.116      2.8878482      2983.7813    
      1300   334.47228     -36718.078      23731.544      2.8878482      2983.7813    
      1400   289.81028     -36710.964      7405.8147      2.8878482      2983.7813    
      1500   288.04908     -36718.704      12399.459      2.8878482      2983.7813    
      1600   284.51011     -36717.481      16688.553      2.8878482      2983.7813    
      1700   289.21863     -36703.584      7109.979       2.8878482      2983.7813    
      1800   320.12287     -36710.226      12952.104      2.8878482      2983.7813    
      1900   314.81082     -36707.698      14403.576      2.8878482      2983.7813    
      2000   291.57406     -36718.635      14714.879      2.8878482      2983.7813    
      2100   286.97573     -36726.23       5074.3094      2.8878482      2983.7813    
      2200   287.05169     -36724.647      11288.923      2.8878482      2983.7813    
      2300   291.71923     -36706.284      14452.329      2.8878482      2983.7813    
      2400   321.00112     -36716.966      5217.5846      2.8878482      2983.7813    
      2500   294.85662     -36701.323      12430.481      2.8878482      2983.7813    
      2600   301.31612     -36721.72       19757.598      2.8878482      2983.7813    
      2700   271.58353     -36714.361      11414.295      2.8878482      2983.7813    
      2800   293.95392     -36727.796      10180.517      2.8878482      2983.7813    
      2900   307.14392     -36707.506      10851.47       2.8878482      2983.7813    
      3000   297.10493     -36692.052      21907.573      2.8878482      2983.7813    
      3100   321.8056      -36717.296      14791.649      2.8878482      2983.7813    
      3200   289.47776     -36717.311      6042.4011      2.8878482      2983.7813    
      3300   275.82083     -36710.525      9525.9713      2.8878482      2983.7813    
      3400   288.0143      -36711.509      22691.927      2.8878482      2983.7813    
      3500   315.00641     -36716.186      3822.7491      2.8878482      2983.7813    
      3600   273.48182     -36693.451      17655.068      2.8878482      2983.7813    
      3700   302.32553     -36730.829      15246.945      2.8878482      2983.7813    
      3800   270.56446     -36728.216      7158.2335      2.8878482      2983.7813    
      3900   282.24216     -36723.852      10080.046      2.8878482      2983.7813    
      4000   296.8443      -36718.613      21664.863      2.8878482      2983.7813    
      4100   308.96666     -36710.677      6459.2784      2.8878482      2983.7813    
      4200   299.46741     -36706.052      7455.4024      2.8878482      2983.7813    
      4300   306.46433     -36727.391      23214.235      2.8878482      2983.7813    
      4400   286.09587     -36729.379      11796.115      2.8878482      2983.7813    
      4500   275.69301     -36717.012      4824.3159      2.8878482      2983.7813    
      4600   308.66448     -36720.052      20970.638      2.8878482      2983.7813    
      4700   317.2665      -36716.863      7846.8136      2.8878482      2983.7813    
      4800   296.36095     -36704.303      5938.0218      2.8878482      2983.7813    
      4900   311.29837     -36728.264      21680.393      2.8878482      2983.7813    
      5000   286.81146     -36733.554      10012.866      2.8878482      2983.7813    
      5100   275.23511     -36738.695      3879.4751      2.8878482      2983.7813    
      5200   291.11307     -36724.841      13495.72       2.8878482      2983.7813    
      5300   298.22856     -36711.702      18398.444      2.8878482      2983.7813    
      5400   294.01649     -36700.935      10402.556      2.8878482      2983.7813    
      5500   311.83353     -36706.499      11595.634      2.8878482      2983.7813    
      5600   289.42406     -36704.183      17187.791      2.8878482      2983.7813    
      5700   272.47308     -36711.745      8709.9324      2.8878482      2983.7813    
      5800   283.88949     -36727.746      13937.391      2.8878482      2983.7813    
      5900   288.38585     -36714.12       14460.588      2.8878482      2983.7813    
      6000   289.86693     -36699.679      11995.583      2.8878482      2983.7813    
      6100   314.39132     -36713.722      9929.9503      2.8878482      2983.7813    
      6200   299.86551     -36716.242      12770.182      2.8878482      2983.7813    
      6300   272.34958     -36712.229      10907.976      2.8878482      2983.7813    
      6400   308.81894     -36734.712      17851.724      2.8878482      2983.7813    
      6500   309.9241      -36705.908      16782.903      2.8878482      2983.7813    
      6600   312.81493     -36696.625      11301.866      2.8878482      2983.7813    
      6700   331.44079     -36723.812      11473.957      2.8878482      2983.7813    
      6800   288.36118     -36713.988      11829.567      2.8878482      2983.7813    
      6900   289.44735     -36717.031      11264.525      2.8878482      2983.7813    
      7000   307.84738     -36723.138      7446.1135      2.8878482      2983.7813    
      7100   325.50475     -36723.069      11627.808      2.8878482      2983.7813    
      7200   312.17155     -36683.357      13932.836      2.8878482      2983.7813    
      7300   333.12039     -36707.182      9897.6531      2.8878482      2983.7813    
      7400   307.77372     -36716.895      12691.139      2.8878482      2983.7813    
      7500   296.66967     -36717.061      9657.2958      2.8878482      2983.7813    
      7600   309.33769     -36722.84       13316.82       2.8878482      2983.7813    
      7700   302.71168     -36709.158      15263.489      2.8878482      2983.7813    
      7800   316.72415     -36717.181      8740.4167      2.8878482      2983.7813    
      7900   292.82821     -36716.005      13954.313      2.8878482      2983.7813    
      8000   277.02886     -36716.236      11083.416      2.8878482      2983.7813    
      8100   285.60377     -36722.744      6699.6012      2.8878482      2983.7813    
      8200   307.18012     -36717.329      10782.837      2.8878482      2983.7813    
      8300   312.82222     -36708.522      19587.779      2.8878482      2983.7813    
      8400   325.50975     -36712.772      4579.8277      2.8878482      2983.7813    
      8500   287.88608     -36714.556      13521.105      2.8878482      2983.7813    
      8600   298.69911     -36732.638      12548.867      2.8878482      2983.7813    
      8700   277.65548     -36712.469      6864.9176      2.8878482      2983.7813    
      8800   302.03434     -36716.574      7740.0496      2.8878482      2983.7813    
      8900   320.47723     -36720.525      16782.986      2.8878482      2983.7813    
      9000   305.31711     -36701.33       9169.6792      2.8878482      2983.7813    
      9100   308.18496     -36712.883      7664.6488      2.8878482      2983.7813    
      9200   292.65339     -36734.541      14164.23       2.8878482      2983.7813    
      9300   288.90936     -36727.853      11665.162      2.8878482      2983.7813    
      9400   310.34825     -36722.207      7208.2168      2.8878482      2983.7813    
      9500   307.47324     -36705.269      16303.061      2.8878482      2983.7813    
      9600   322.31241     -36717.034      15666.306      2.8878482      2983.7813    
      9700   294.57652     -36710.698      11160.65       2.8878482      2983.7813    
      9800   289.68        -36724.666      13992.008      2.8878482      2983.7813    
      9900   286.79007     -36712.46       13042.202      2.8878482      2983.7813    
     10000   301.31339     -36705.134      9101.1143      2.8878482      2983.7813    
Loop time of 205.087 on 16 procs for 10000 steps with 243 atoms

Performance: 2.106 ns/day, 11.394 hours/ns, 48.760 timesteps/s, 11.849 katom-step/s
100.3% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 158.67     | 162.5      | 166.1      |  21.5 | 79.23
Bond    | 0.016808   | 0.017827   | 0.019309   |   0.6 |  0.01
Neigh   | 14.65      | 14.728     | 14.92      |   2.1 |  7.18
Comm    | 2.5627     | 6.1755     | 10.003     | 110.3 |  3.01
Output  | 0.020047   | 0.040023   | 0.045138   |   3.8 |  0.02
Modify  | 21.175     | 21.38      | 21.454     |   1.8 | 10.42
Other   |            | 0.2484     |            |       |  0.12

Nlocal:         30.375 ave          34 max          27 min
Histogram: 1 1 0 0 3 0 0 2 0 1
Nghost:        2709.62 ave        2712 max        2706 min
Histogram: 1 0 0 2 0 0 2 0 1 2
Neighs:        17566.4 ave       19586 max       15625 min
Histogram: 1 1 0 0 3 0 0 2 0 1

Total # of neighbors = 140531
Ave neighs/atom = 578.31687
Ave special neighs/atom = 0
Neighbor list builds = 1000
Dangerous builds not checked
# Save the equilibrated structure
write_data ${structure}_eq.data
write_data SiO2_eq.data
System init for write_data ...
WARNING: Compute rdf cutoff less than neighbor cutoff - forcing a needless neighbor list build (src/compute_rdf.cpp:179)
undump dump_eq
unfix myMSD

# use tmp to save initial length and tilt
variable tmp equal lx
variable lx0 equal ${tmp}
variable lx0 equal 14.6913
variable tmp equal ly
variable ly0 equal ${tmp}
variable ly0 equal 12.723
variable tmp equal lz
variable lz0 equal ${tmp}
variable lz0 equal 15.9631

variable tmp equal yz
variable yz0 equal ${tmp}
variable yz0 equal 0
variable tmp equal xz
variable xz0 equal ${tmp}
variable xz0 equal 0
variable tmp equal xy
variable xy0 equal ${tmp}
variable xy0 equal -7.3456

# Write restart
write_restart equil.res
System init for write_restart ...
WARNING: Compute rdf cutoff less than neighbor cutoff - forcing a needless neighbor list build (src/compute_rdf.cpp:179)

# dir: direction
# # uxx Perturbation
# variable dir equal 1
# include displace.mod.lmp
# # uyy Perturbation
# variable dir equal 2
# include displace.mod.lmp

# uzz Perturbation
variable dir equal 3
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
variable len0 equal ${lz0}
variable len0 equal 15.9631
variable dlen equal lz-${len0}
variable dlen equal lz-15.9631
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 1*${len0}
variable delta equal 1*15.9631
variable deltaxy equal ${up}*xy
variable deltaxy equal 1*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 1*xz
variable deltayz equal ${up}*yz
variable deltayz equal 1*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box
fix deform_p all deform 100 z delta 0 ${delta} remap v units box
fix deform_p all deform 100 z delta 0 15.9631 remap v units box
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 3 starts.*****
# Save bond information
fix bondinfo all reaxff/bonds ${nthermo} bonds/bonds.pos${dir}.reaxff
fix bondinfo all reaxff/bonds 100 bonds/bonds.pos${dir}.reaxff
fix bondinfo all reaxff/bonds 100 bonds/bonds.pos3.reaxff
# Reset neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# fix bondinfo all reaxff/bonds ${nthermo} bonds.reaxff
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol lx ly lz
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50
Resetting global fix info from restart file:
  fix style: nvt, fix ID: fnvt


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos3.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos3.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom ${nthermo} dump/pos${dir}_deform.lammpstrj id type q x y z element
dump dump_pos3 all custom ${nthermo} dump/pos${dir}_deform.lammpstrj id type q x y z element
dump dump_pos3 all custom 100 dump/pos${dir}_deform.lammpstrj id type q x y z element
dump dump_pos3 all custom 100 dump/pos3_deform.lammpstrj id type q x y z element
# dump_modify dump_pos${dir} element O Si
run ${nrun}
run 10000
All restart file global fix info was re-assigned
Unused restart file peratom fix info:
  fix style: STORE/ATOM, fix ID: msd1_COMPUTE_STORE
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 112.1 | 112.2 | 112.4 Mbytes
   Step          Temp          PotEng         Press          Volume           Lx             Ly             Lz      
         0   301.31339     -36705.135      9100.4314      2983.7813      14.6913        12.723         15.9631      
       100   319.13906     -36711.878      14150.693      3013.6191      14.6913        12.723         16.122731    
       200   364.44535     -36694.047      13711.777      3043.4569      14.6913        12.723         16.282362    
       300   344.28765     -36675.61       7413.577       3073.2947      14.6913        12.723         16.441993    
       400   353.29198     -36677.001     -1078.7695      3103.1326      14.6913        12.723         16.601624    
       500   315.6645      -36648.03       610.35533      3132.9704      14.6913        12.723         16.761255    
       600   338.03627     -36671.001      215.46459      3162.8082      14.6913        12.723         16.920886    
       700   324.37864     -36671.149     -5617.323       3192.646       14.6913        12.723         17.080517    
       800   320.01961     -36661.13      -9261.1704      3222.4838      14.6913        12.723         17.240148    
       900   288.96885     -36634.423     -9479.5323      3252.3216      14.6913        12.723         17.399779    
      1000   283.03968     -36622.481     -9229.7055      3282.1594      14.6913        12.723         17.55941     
      1100   287.80169     -36605.94      -13286.644      3311.9972      14.6913        12.723         17.719041    
      1200   301.957       -36585.404     -12596.248      3341.8351      14.6913        12.723         17.878672    
      1300   316.46873     -36556.166     -13302.034      3371.6729      14.6913        12.723         18.038303    
      1400   305.34487     -36516.397     -12238.157      3401.5107      14.6913        12.723         18.197934    
      1500   292.70197     -36463.982     -14910.579      3431.3485      14.6913        12.723         18.357565    
      1600   333.34438     -36453.334     -23411          3461.1863      14.6913        12.723         18.517196    
      1700   293.11867     -36390.005     -42056.747      3491.0241      14.6913        12.723         18.676827    
      1800   290.00224     -36341.175     -62527.451      3520.8619      14.6913        12.723         18.836458    
      1900   293.32701     -36282.156     -79634.927      3550.6998      14.6913        12.723         18.996089    
      2000   316.64225     -36208.397     -92475.216      3580.5376      14.6913        12.723         19.15572     
      2100   340.31207     -36126.272     -99652.498      3610.3754      14.6913        12.723         19.315351    
      2200   327.64759     -36021.196     -105683.35      3640.2132      14.6913        12.723         19.474982    
      2300   353.20638     -35935.641     -119970.52      3670.051       14.6913        12.723         19.634613    
      2400   341.23339     -35815.635     -139443.83      3699.8888      14.6913        12.723         19.794244    
      2500   265.80685     -35650.726     -152895.38      3729.7266      14.6913        12.723         19.953875    
      2600   272.38583     -35513.572     -176008.67      3759.5644      14.6913        12.723         20.113506    
      2700   307.19338     -35361.066     -189898.96      3789.4023      14.6913        12.723         20.273137    
      2800   309.42495     -35164.315     -202239.69      3819.2401      14.6913        12.723         20.432768    
      2900   311.18137     -34990.397     -213368.24      3849.0779      14.6913        12.723         20.592399    
      3000   320.84067     -34821.931     -221456.79      3878.9157      14.6913        12.723         20.75203     
      3100   305.88982     -34627.039     -231518.55      3908.7535      14.6913        12.723         20.911661    
      3200   274.99883     -34419.877     -236591.89      3938.5913      14.6913        12.723         21.071292    
      3300   289.16871     -34223.962     -240999.14      3968.4291      14.6913        12.723         21.230923    
      3400   297.17602     -33991.437     -243537.01      3998.267       14.6913        12.723         21.390554    
      3500   290.13082     -33778.689     -247613.73      4028.1048      14.6913        12.723         21.550185    
      3600   301.50523     -33587.22      -253492.65      4057.9426      14.6913        12.723         21.709816    
      3700   288.25593     -33356.141     -250300.3       4087.7804      14.6913        12.723         21.869447    
      3800   297.75151     -33162.306     -257808.05      4117.6182      14.6913        12.723         22.029078    
      3900   297.68747     -32936.124     -255537.77      4147.456       14.6913        12.723         22.188709    
      4000   297.61701     -32715.568     -258453.47      4177.2938      14.6913        12.723         22.34834     
      4100   301.01983     -32495.908     -258765.2       4207.1316      14.6913        12.723         22.507971    
      4200   285.78916     -32265.488     -261359.55      4236.9695      14.6913        12.723         22.667602    
      4300   275.61611     -32053.071     -261109.09      4266.8073      14.6913        12.723         22.827233    
      4400   272.63951     -31810.598     -259967.59      4296.6451      14.6913        12.723         22.986864    
      4500   299.53482     -31577.497     -260514.38      4326.4829      14.6913        12.723         23.146495    
      4600   278.05937     -31324.71      -256827.48      4356.3207      14.6913        12.723         23.306126    
      4700   291.67761     -31104.833     -260018.71      4386.1585      14.6913        12.723         23.465757    
      4800   290.46074     -30876.816     -258449.43      4415.9963      14.6913        12.723         23.625388    
      4900   289.81423     -30656.837     -260137.61      4445.8341      14.6913        12.723         23.785019    
      5000   268.62077     -30403.441     -258134.29      4475.672       14.6913        12.723         23.94465     
      5100   277.67542     -30162.439     -259475.57      4505.5098      14.6913        12.723         24.104281    
      5200   292.99825     -29916.625     -259591         4535.3476      14.6913        12.723         24.263912    
      5300   301.69756     -29692.237     -262398.51      4565.1854      14.6913        12.723         24.423543    
      5400   297.52876     -29462.742     -261780.49      4595.0232      14.6913        12.723         24.583174    
      5500   306.89581     -29231.039     -261806.77      4624.861       14.6913        12.723         24.742805    
      5600   301.19896     -28975.577     -262945.98      4654.6988      14.6913        12.723         24.902436    
      5700   318.25436     -28743.332     -265906.6       4684.5367      14.6913        12.723         25.062067    
      5800   287.67677     -28491.872     -266090.23      4714.3745      14.6913        12.723         25.221698    
      5900   306.24619     -28240.003     -267724.29      4744.2123      14.6913        12.723         25.381329    
      6000   301.30957     -27977.201     -270014.35      4774.0501      14.6913        12.723         25.54096     
      6100   327.59607     -27727.688     -267691.73      4803.8879      14.6913        12.723         25.700591    
      6200   313.0481      -27472.457     -270385.14      4833.7257      14.6913        12.723         25.860222    
      6300   327.29818     -27244.196     -268788.5       4863.5635      14.6913        12.723         26.019853    
      6400   277.13828     -26958.231     -272582.4       4893.4013      14.6913        12.723         26.179484    
      6500   302.83115     -26730.68      -271208.73      4923.2392      14.6913        12.723         26.339115    
      6600   290.55796     -26473.63      -273797.08      4953.077       14.6913        12.723         26.498746    
      6700   303.43524     -26228.094     -273905.6       4982.9148      14.6913        12.723         26.658377    
      6800   263.95088     -25945.687     -272310.48      5012.7526      14.6913        12.723         26.818008    
      6900   269.84229     -25681.444     -274125.3       5042.5904      14.6913        12.723         26.977639    
      7000   315.71168     -25422.443     -272567.91      5072.4282      14.6913        12.723         27.13727     
      7100   316.18489     -25153.808     -277606.18      5102.266       14.6913        12.723         27.296901    
      7200   308.15771     -24910.117     -276955.37      5132.1038      14.6913        12.723         27.456532    
      7300   326.73459     -24666.188     -274783.83      5161.9417      14.6913        12.723         27.616163    
      7400   308.72296     -24398.276     -275950.97      5191.7795      14.6913        12.723         27.775794    
      7500   310.30797     -24143.166     -276416.04      5221.6173      14.6913        12.723         27.935425    
      7600   293.1777      -23873.477     -279660.41      5251.4551      14.6913        12.723         28.095056    
      7700   294.07584     -23617.155     -279377.83      5281.2929      14.6913        12.723         28.254687    
      7800   301.2314      -23353.281     -280505.14      5311.1307      14.6913        12.723         28.414318    
      7900   306.37493     -23076.117     -281951.73      5340.9685      14.6913        12.723         28.573949    
      8000   300.32309     -22795.766     -282526.88      5370.8064      14.6913        12.723         28.73358     
      8100   265.10283     -22523.696     -286826.1       5400.6442      14.6913        12.723         28.893211    
      8200   318.30098     -22286.211     -285888.31      5430.482       14.6913        12.723         29.052842    
      8300   304.83627     -21993.106     -287923.13      5460.3198      14.6913        12.723         29.212473    
      8400   329.9203      -21718.404     -290463.83      5490.1576      14.6913        12.723         29.372104    
      8500   293.249       -21434.238     -292013.01      5519.9954      14.6913        12.723         29.531735    
      8600   289.00787     -21152.973     -293872.77      5549.8332      14.6913        12.723         29.691366    
      8700   290.91484     -20870.922     -296541.07      5579.671       14.6913        12.723         29.850997    
      8800   320.15349     -20597.028     -297912.39      5609.5089      14.6913        12.723         30.010628    
      8900   325.33038     -20303.83      -300229.29      5639.3467      14.6913        12.723         30.170259    
      9000   332.16027     -20002.86      -301722.43      5669.1845      14.6913        12.723         30.32989     
      9100   966.37848     -20265.794     -271598.7       5699.0223      14.6913        12.723         30.489521    
      9200   2640.5175     -22966.808     -204125.91      5728.8601      14.6913        12.723         30.649152    
      9300   2760.1558     -27133.275     -125361.75      5758.6979      14.6913        12.723         30.808783    
      9400   1807.2716     -30225.119     -80934.737      5788.5357      14.6913        12.723         30.968414    
      9500   1159.3288     -31892.104     -44432.435      5818.3735      14.6913        12.723         31.128045    
      9600   708.97176     -32659.697     -27958.649      5848.2114      14.6913        12.723         31.287676    
      9700   513.49535     -33102.996     -22851.931      5878.0492      14.6913        12.723         31.447307    
      9800   394.05345     -33384.726     -9102.3953      5907.887       14.6913        12.723         31.606938    
      9900   360.50794     -33633.454     -6084.5922      5937.7248      14.6913        12.723         31.766569    
     10000   292.72133     -33761.349     -291.80854      5967.5626      14.6913        12.723         31.9262      
Loop time of 126.018 on 16 procs for 10000 steps with 243 atoms

Performance: 3.428 ns/day, 7.001 hours/ns, 79.354 timesteps/s, 19.283 katom-step/s
101.2% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 95.148     | 97.563     | 100.35     |  17.8 | 77.42
Bond    | 0.016042   | 0.01665    | 0.017137   |   0.3 |  0.01
Neigh   | 9.1038     | 9.1835     | 9.2671     |   1.6 |  7.29
Comm    | 1.6739     | 4.4634     | 6.8812     |  83.1 |  3.54
Output  | 0.015999   | 0.018074   | 0.019598   |   0.9 |  0.01
Modify  | 14.473     | 14.56      | 14.647     |   1.4 | 11.55
Other   |            | 0.2138     |            |       |  0.17

Nlocal:         30.375 ave          35 max          25 min
Histogram: 1 1 0 0 1 1 1 1 0 2
Nghost:           1790 ave        1849 max        1739 min
Histogram: 3 1 0 0 0 0 0 2 0 2
Neighs:          10803 ave       13210 max        8877 min
Histogram: 2 1 1 0 0 0 2 1 0 1

Total # of neighbors = 86424
Ave neighs/atom = 355.65432
Ave special neighs/atom = 0
Neighbor list builds = 1000
Dangerous builds not checked
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos3

# Delete dir to make sure it is not reused
variable dir delete

# # uyz Perturbation
# variable dir equal 4
# include displace.mod.lmp
# # uxz Perturbation
# variable dir equal 5
# include displace.mod.lmp
# # uxy Perturbation
# variable dir equal 6
# include displace.mod.lmp


Total wall time: 0:05:32
