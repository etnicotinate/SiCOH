LAMMPS (2 Aug 2023 - Update 2)
  using 2 OpenMP thread(s) per MPI task
# Initialization
units           real
dimension       3
boundary        p p p
atom_style      full
timestep        0.5   # fs

# Define MD parameters
variable nevery equal 10                  # sampling interval
variable nrepeat equal 10                 # number of samples
variable nfreq equal ${nevery}*${nrepeat} # length of one average
variable nfreq equal 10*${nrepeat} 
variable nfreq equal 10*10 
variable nthermo equal ${nfreq}           # interval for thermo output
variable nthermo equal 100           
# 1 ps : 1e3 fs / 0.5 fs = 2e3 steps
variable nequil equal 50*${nthermo}       # steps of equilibration run 100
variable nequil equal 50*100       
variable nrun equal 50*${nthermo}          # stpes of equilibrated run 50
variable nrun equal 50*100          
variable temp equal 300.0                # temperature of initial sample
variable tdamp equal 50.0                 # time constant for thermostat
variable seed equal 123456                # seed for thermostat
variable ufac equal 1.01325e-4         # pressure unit conversion, from atm to Gpa
variable up equal 1.0                  # the deformation magnitude 0.01

variable FF string "CHOFe.ff O Si"   # force field args for pair_coeff
# pair_coeff * * CHONSSi.ff O Si
# pair_coeff * * CHOSiNa.ff O Si
# pair_coeff * * SiOCHN_2018.ff O Si
# pair_coeff * * PDMSDecomp.ff Si O
# pair_coeff * * CHONSi.ff C H O Si
# pair_coeff * * CHOFe.ff O Si
variable structure string SiO2

# Read the initial sctructure
# box tilt large
read_data       ${structure}.data
read_data       SiO2.data
Reading data file ...
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  reading atoms ...
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.001 seconds
  read_data CPU = 0.008 seconds

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)
# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
fix bondinfo all reaxff/bonds 1 bonds_opt.reaxff

# Energy minimization
print "*****Minimization starts.*****"
*****Minimization starts.*****
dump dump_opt all custom 1 dump/dump_opt.lammpstrj id type q x y z
minimize 1.0e-6 1.0e-6 100 1000

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Your simulation uses code contributions which should be cited:

- pair reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 number =  {4--5},
 pages =   {245--259}
}

- fix qeq/reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 pages =   {245--259}
}

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 113.4 | 113.5 | 113.6 Mbytes
   Step          Temp          E_pair         E_mol          TotEng         Press     
         0   0             -36881.566      0             -36881.566      18239.171    
         6   0             -36912.748      0             -36912.748      10419.926    
Loop time of 1.33472 on 16 procs for 6 steps with 243 atoms

97.7% CPU use with 8 MPI tasks x 2 OpenMP threads

Minimization stats:
  Stopping criterion = energy tolerance
  Energy initial, next-to-last, final = 
     -36881.5659852413  -36912.7480455136  -36912.7481404418
  Force two-norm initial, final = 103.62827 45.838637
  Force max component initial, final = 10.335104 4.0135546
  Final line search alpha, max atom move = 3.5667109e-09 1.4315189e-08
  Iterations, force evaluations = 6 55

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.96214    | 1.0165     | 1.0796     |   3.6 | 76.16
Bond    | 8.975e-06  | 1.1052e-05 | 1.8616e-05 |   0.0 |  0.00
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017086   | 0.080029   | 0.13429    |  12.8 |  6.00
Output  | 0.00048071 | 0.00071235 | 0.0009197  |   0.0 |  0.05
Modify  | 0.23533    | 0.23537    | 0.23541    |   0.0 | 17.63
Other   |            | 0.00208    |            |       |  0.16

Nlocal:         30.375 ave          33 max          24 min
Histogram: 1 0 0 0 0 0 4 0 0 3
Nghost:        2699.62 ave        2706 max        2697 min
Histogram: 3 0 0 4 0 0 0 0 0 1
Neighs:          17613 ave       19098 max       13992 min
Histogram: 1 0 0 0 0 0 4 0 0 3

Total # of neighbors = 140904
Ave neighs/atom = 579.85185
Ave special neighs/atom = 0
Neighbor list builds = 0
Dangerous builds = 0
min_style cg
# Save the optimized structure
write_data ${structure}_opt.data
write_data SiO2_opt.data
System init for write_data ...
undump dump_opt
unfix bondinfo
velocity        all create ${temp} ${seed} dist gaussian
velocity        all create 300 ${seed} dist gaussian
velocity        all create 300 123456 dist gaussian

# Equilibration
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# fix bondinfo all reaxff/bonds ${nthermo} bonds.reaxff
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol lx ly lz
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50

if "$(is_defined(fix,avgp))" then "unfix avgp"
unfix avgp
if "$(is_defined(fix,avgl))" then "unfix avgl"
thermo_style custom step temp pe press density vol
WARNING: New thermo_style command, previous thermo_modify settings will be lost (src/output.cpp:903)
dump dump_eq all custom ${nthermo} dump/dump_eq.lammpstrj id type q x y z
dump dump_eq all custom 100 dump/dump_eq.lammpstrj id type q x y z

# compute MSD and RDF
compute msd1 all msd
fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp     file msd.out     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
fix myMSD all ave/time 100 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp     file msd.out     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
fix myMSD all ave/time 100 1 100 c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp     file msd.out     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
compute rdf1 all rdf 100 1 2 2 2 1 1 cutoff 5.0
fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*]     file rdf.out mode vector     title3 "# Row r g1(r) coor1(r) ..."
fix myRDF all ave/time 100 1 ${nthermo} c_rdf1[*]     file rdf.out mode vector     title3 "# Row r g1(r) coor1(r) ..."
fix myRDF all ave/time 100 1 100 c_rdf1[*]     file rdf.out mode vector     title3 "# Row r g1(r) coor1(r) ..."

run ${nequil}
run 5000
WARNING: Compute rdf cutoff less than neighbor cutoff - forcing a needless neighbor list build (src/compute_rdf.cpp:179)
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  3 neighbor lists, perpetual/occasional/extra = 2 1 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) compute rdf, occasional
      attributes: half, newton on, cut 7
      pair build: half/bin/newton/tri
      stencil: half/bin/3d/tri
      bin: standard
  (3) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 108.3 | 108.4 | 108.4 Mbytes
   Step          Temp          PotEng         Press         Density         Volume    
         0   300           -36912.748      13735.502      2.8878482      2983.7813    
       100   148.30843     -36769.661      8169.0406      2.8878482      2983.7813    
       200   189.89754     -36755.817      1102.0418      2.8878482      2983.7813    
       300   264.89008     -36762.437      20599.414      2.8878482      2983.7813    
       400   274.12167     -36715.897      14719.786      2.8878482      2983.7813    
       500   298.2046      -36689.434      4582.9901      2.8878482      2983.7813    
       600   324.78573     -36706.793      21206.55       2.8878482      2983.7813    
       700   299.22859     -36701.636      22802.836      2.8878482      2983.7813    
       800   300.16983     -36722.162      5922.8329      2.8878482      2983.7813    
       900   294.6255      -36731.328      9486.155       2.8878482      2983.7813    
      1000   284.8672      -36723.64       24818.092      2.8878482      2983.7813    
      1100   290.88328     -36703.312     -912.54049      2.8878482      2983.7813    
      1200   326.9483      -36708.745      19180.116      2.8878482      2983.7813    
      1300   334.47228     -36718.078      23731.544      2.8878482      2983.7813    
      1400   289.81028     -36710.964      7405.8147      2.8878482      2983.7813    
      1500   288.04908     -36718.704      12399.459      2.8878482      2983.7813    
      1600   284.51011     -36717.481      16688.553      2.8878482      2983.7813    
      1700   289.21863     -36703.584      7109.979       2.8878482      2983.7813    
      1800   320.12287     -36710.226      12952.104      2.8878482      2983.7813    
      1900   314.81082     -36707.698      14403.576      2.8878482      2983.7813    
      2000   291.57406     -36718.635      14714.879      2.8878482      2983.7813    
      2100   286.97573     -36726.23       5074.3094      2.8878482      2983.7813    
      2200   287.05169     -36724.647      11288.923      2.8878482      2983.7813    
      2300   291.71923     -36706.284      14452.329      2.8878482      2983.7813    
      2400   321.00112     -36716.966      5217.5846      2.8878482      2983.7813    
      2500   294.85662     -36701.323      12430.481      2.8878482      2983.7813    
      2600   301.31612     -36721.72       19757.598      2.8878482      2983.7813    
      2700   271.58353     -36714.361      11414.295      2.8878482      2983.7813    
      2800   293.95392     -36727.796      10180.517      2.8878482      2983.7813    
      2900   307.14392     -36707.506      10851.47       2.8878482      2983.7813    
      3000   297.10493     -36692.052      21907.573      2.8878482      2983.7813    
      3100   321.8056      -36717.296      14791.649      2.8878482      2983.7813    
      3200   289.47776     -36717.311      6042.4011      2.8878482      2983.7813    
      3300   275.82083     -36710.525      9525.9713      2.8878482      2983.7813    
      3400   288.0143      -36711.509      22691.927      2.8878482      2983.7813    
      3500   315.00641     -36716.186      3822.7491      2.8878482      2983.7813    
      3600   273.48182     -36693.451      17655.068      2.8878482      2983.7813    
      3700   302.32553     -36730.829      15246.945      2.8878482      2983.7813    
      3800   270.56446     -36728.216      7158.2335      2.8878482      2983.7813    
      3900   282.24216     -36723.852      10080.046      2.8878482      2983.7813    
      4000   296.8443      -36718.613      21664.863      2.8878482      2983.7813    
      4100   308.96666     -36710.677      6459.2784      2.8878482      2983.7813    
      4200   299.46741     -36706.052      7455.4024      2.8878482      2983.7813    
      4300   306.46433     -36727.391      23214.235      2.8878482      2983.7813    
      4400   286.09587     -36729.379      11796.115      2.8878482      2983.7813    
      4500   275.69301     -36717.012      4824.3159      2.8878482      2983.7813    
      4600   308.66448     -36720.052      20970.638      2.8878482      2983.7813    
      4700   317.2665      -36716.863      7846.8136      2.8878482      2983.7813    
      4800   296.36095     -36704.303      5938.0218      2.8878482      2983.7813    
      4900   311.29837     -36728.264      21680.393      2.8878482      2983.7813    
      5000   286.81146     -36733.554      10012.866      2.8878482      2983.7813    
Loop time of 102.49 on 16 procs for 5000 steps with 243 atoms

Performance: 2.108 ns/day, 11.388 hours/ns, 48.785 timesteps/s, 11.855 katom-step/s
100.3% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 78.175     | 80.615     | 83.232     |  20.0 | 78.66
Bond    | 0.00073322 | 0.00091179 | 0.0013126  |   0.0 |  0.00
Neigh   | 7.3075     | 7.3674     | 7.5329     |   2.5 |  7.19
Comm    | 1.2257     | 3.8422     | 6.2755     |  91.8 |  3.75
Output  | 0.0093492  | 0.020005   | 0.022636   |   2.9 |  0.02
Modify  | 10.375     | 10.545     | 10.607     |   2.1 | 10.29
Other   |            | 0.09899    |            |       |  0.10

Nlocal:         30.375 ave          34 max          27 min
Histogram: 1 1 0 0 3 1 0 0 1 1
Nghost:        2711.62 ave        2723 max        2704 min
Histogram: 1 2 1 1 0 1 0 0 1 1
Neighs:        17569.8 ave       19604 max       15646 min
Histogram: 1 1 0 0 3 1 0 0 1 1

Total # of neighbors = 140558
Ave neighs/atom = 578.42798
Ave special neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked
# Save the equilibrated structure
write_data ${structure}_eq.data
write_data SiO2_eq.data
System init for write_data ...
WARNING: Compute rdf cutoff less than neighbor cutoff - forcing a needless neighbor list build (src/compute_rdf.cpp:179)
undump dump_eq
unfix myMSD

# use tmp to save initial length and tilt
variable tmp equal lx
variable lx0 equal ${tmp}
variable lx0 equal 14.6913
variable tmp equal ly
variable ly0 equal ${tmp}
variable ly0 equal 12.723
variable tmp equal lz
variable lz0 equal ${tmp}
variable lz0 equal 15.9631

variable tmp equal yz
variable yz0 equal ${tmp}
variable yz0 equal 0
variable tmp equal xz
variable xz0 equal ${tmp}
variable xz0 equal 0
variable tmp equal xy
variable xy0 equal ${tmp}
variable xy0 equal -7.3456

# Write restart
write_restart equil.res
System init for write_restart ...
WARNING: Compute rdf cutoff less than neighbor cutoff - forcing a needless neighbor list build (src/compute_rdf.cpp:179)

# dir: direction
# uxx Perturbation
variable dir equal 1
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
variable len0 equal ${lx0}
variable len0 equal 14.6913
variable dlen equal lx-${len0}
variable dlen equal lx-14.6913
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 1*${len0}
variable delta equal 1*14.6913
variable deltaxy equal ${up}*xy
variable deltaxy equal 1*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 1*xz
variable deltayz equal ${up}*yz
variable deltayz equal 1*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_p all deform 100 x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_p all deform 100 x delta 0 14.6913 xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_p all deform 100 x delta 0 14.6913 xy delta -7.3456 xz delta ${deltaxz} remap v units box flip no
fix deform_p all deform 100 x delta 0 14.6913 xy delta -7.3456 xz delta 0 remap v units box flip no
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 1 starts.*****
# Save bond information
fix bondinfo all reaxff/bonds ${nthermo} bonds/bonds.pos${dir}.reaxff
fix bondinfo all reaxff/bonds 100 bonds/bonds.pos${dir}.reaxff
fix bondinfo all reaxff/bonds 100 bonds/bonds.pos1.reaxff
# Reset neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# fix bondinfo all reaxff/bonds ${nthermo} bonds.reaxff
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol lx ly lz
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50
Resetting global fix info from restart file:
  fix style: nvt, fix ID: fnvt


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos1.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos1.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom ${nthermo} dump/pos${dir}_deform.lammpstrj id type q x y z element
dump dump_pos1 all custom ${nthermo} dump/pos${dir}_deform.lammpstrj id type q x y z element
dump dump_pos1 all custom 100 dump/pos${dir}_deform.lammpstrj id type q x y z element
dump dump_pos1 all custom 100 dump/pos1_deform.lammpstrj id type q x y z element
# dump_modify dump_pos${dir} element O Si
run ${nrun}
run 5000
All restart file global fix info was re-assigned
Unused restart file peratom fix info:
  fix style: STORE/ATOM, fix ID: msd1_COMPUTE_STORE
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 112.1 | 112.3 | 112.6 Mbytes
   Step          Temp          PotEng         Press          Volume           Lx             Ly             Lz      
         0   286.81146     -36733.554      10012.987      2983.7813      14.6913        12.723         15.9631      
       100   276.05587     -36737.341      3004.5488      3043.4569      14.985126      12.723         15.9631      
       200   369.97577     -36598.453      6935.803       3103.1326      15.278952      12.723         15.9631      
       300   460.75311     -36628.918     -1591.3527      3162.8082      15.572778      12.723         15.9631      
       400   447.76012     -36553.452     -7283.9148      3222.4838      15.866604      12.723         15.9631      
       500   452.10667     -36491.919     -13951.511      3282.1594      16.16043       12.723         15.9631      
       600   411.64617     -36441.099     -15515.477      3341.8351      16.454256      12.723         15.9631      
       700   384.04968     -36350.65      -14590.072      3401.5107      16.748082      12.723         15.9631      
       800   409.89312     -36293.601     -17591.168      3461.1863      17.041908      12.723         15.9631      
       900   407.18844     -36197.43      -41847.843      3520.8619      17.335734      12.723         15.9631      
      1000   349.61798     -36068.567     -61222.486      3580.5376      17.62956       12.723         15.9631      
      1100   289.99595     -35888.938     -76611.726      3640.2132      17.923386      12.723         15.9631      
      1200   307.68471     -35703.535     -91341.199      3699.8888      18.217212      12.723         15.9631      
      1300   351.61305     -35491.972     -108972         3759.5644      18.511038      12.723         15.9631      
      1400   389.67276     -35244.245     -136778.43      3819.2401      18.804864      12.723         15.9631      
      1500   346.28642     -34977.949     -156854.81      3878.9157      19.09869       12.723         15.9631      
      1600   325.24842     -34712.018     -170534.43      3938.5913      19.392516      12.723         15.9631      
      1700   306.51157     -34403.237     -184968.81      3998.267       19.686342      12.723         15.9631      
      1800   248.64732     -34032.119     -204106.12      4057.9426      19.980168      12.723         15.9631      
      1900   216.67867     -33637.889     -219690.21      4117.6182      20.273994      12.723         15.9631      
      2000   259.74784     -33262.478     -230529.17      4177.2938      20.56782       12.723         15.9631      
      2100   333.03559     -32871.818     -240534.53      4236.9695      20.861646      12.723         15.9631      
      2200   263.05255     -32392.438     -245249.53      4296.6451      21.155472      12.723         15.9631      
      2300   307.35272     -31989.608     -254283.65      4356.3207      21.449298      12.723         15.9631      
      2400   453.62593     -31696.2       -237019.41      4415.9963      21.743124      12.723         15.9631      
      2500   497.30344     -31584.508     -236445.7       4475.672       22.03695       12.723         15.9631      
      2600   349.1452      -31212.691     -234005.76      4535.3476      22.330776      12.723         15.9631      
      2700   896.15235     -31473.565     -202918.1       4595.0232      22.624602      12.723         15.9631      
      2800   1113.9399     -32114.054     -163519.82      4654.6988      22.918428      12.723         15.9631      
      2900   830.18448     -32509.625     -137550.29      4714.3745      23.212254      12.723         15.9631      
      3000   923.21125     -33082.975     -84006.111      4774.0501      23.50608       12.723         15.9631      
      3100   751.96005     -33591.386     -67476.313      4833.7257      23.799906      12.723         15.9631      
      3200   605.07197     -33941.272     -47872.572      4893.4013      24.093732      12.723         15.9631      
      3300   454.81378     -34129.988     -38796.041      4953.077       24.387558      12.723         15.9631      
      3400   338.11014     -34191.348     -38607.439      5012.7526      24.681384      12.723         15.9631      
      3500   276.13697     -34182.708     -49698.177      5072.4282      24.97521       12.723         15.9631      
      3600   266.91813     -34184.435     -51012.843      5132.1038      25.269036      12.723         15.9631      
      3700   263.68646     -34124.571     -58036.93       5191.7795      25.562862      12.723         15.9631      
      3800   287.51448     -34051.905     -57106.857      5251.4551      25.856688      12.723         15.9631      
      3900   272.79555     -33943.516     -60618.053      5311.1307      26.150514      12.723         15.9631      
      4000   263.00068     -33838.448     -55842.598      5370.8064      26.44434       12.723         15.9631      
      4100   285.2494      -33768.917     -55926.888      5430.482       26.738166      12.723         15.9631      
      4200   285.68874     -33685.841     -58732.922      5490.1576      27.031992      12.723         15.9631      
      4300   308.80548     -33652.117     -65397.428      5549.8332      27.325818      12.723         15.9631      
      4400   279.84563     -33588.883     -68217.827      5609.5089      27.619644      12.723         15.9631      
      4500   264.12037     -33503.263     -69933.069      5669.1845      27.91347       12.723         15.9631      
      4600   268.99098     -33442.447     -74621.164      5728.8601      28.207296      12.723         15.9631      
      4700   304.97627     -33363.679     -71040.749      5788.5357      28.501122      12.723         15.9631      
      4800   344.5605      -33284.801     -75582.664      5848.2114      28.794948      12.723         15.9631      
      4900   310.52608     -33188.38      -69655.135      5907.887       29.088774      12.723         15.9631      
      5000   276.01619     -33111.689     -72693.145      5967.5626      29.3826        12.723         15.9631      
Loop time of 66.4509 on 16 procs for 5000 steps with 243 atoms

Performance: 3.251 ns/day, 7.383 hours/ns, 75.244 timesteps/s, 18.284 katom-step/s
101.4% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 49.936     | 50.857     | 51.768     |   8.5 | 76.53
Bond    | 0.00056856 | 0.00077455 | 0.00093715 |   0.0 |  0.00
Neigh   | 4.5417     | 4.66       | 4.7619     |   4.6 |  7.01
Comm    | 1.5141     | 2.4286     | 3.3484     |  39.2 |  3.65
Output  | 0.0079448  | 0.0089232  | 0.0097128  |   0.6 |  0.01
Modify  | 8.301      | 8.4033     | 8.5166     |   3.4 | 12.65
Other   |            | 0.09253    |            |       |  0.14

Nlocal:         30.375 ave          44 max          18 min
Histogram: 3 0 0 1 0 1 0 0 0 3
Nghost:        1972.62 ave        2151 max        1791 min
Histogram: 4 0 0 0 0 0 0 0 0 4
Neighs:        8977.62 ave       12872 max        5418 min
Histogram: 3 0 1 0 0 1 0 0 0 3

Total # of neighbors = 71821
Ave neighs/atom = 295.55967
Ave special neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos1

# Delete dir to make sure it is not reused
variable dir delete
# uyy Perturbation
variable dir equal 2
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
variable len0 equal ${ly0}
variable len0 equal 12.723
variable dlen equal ly-${len0}
variable dlen equal ly-12.723
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 1*${len0}
variable delta equal 1*12.723
variable deltaxy equal ${up}*xy
variable deltaxy equal 1*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 1*xz
variable deltayz equal ${up}*yz
variable deltayz equal 1*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no
fix deform_p all deform 100 y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no
fix deform_p all deform 100 y delta 0 12.723 yz delta ${deltayz} remap v units box flip no
fix deform_p all deform 100 y delta 0 12.723 yz delta 0 remap v units box flip no
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 2 starts.*****
# Save bond information
fix bondinfo all reaxff/bonds ${nthermo} bonds/bonds.pos${dir}.reaxff
fix bondinfo all reaxff/bonds 100 bonds/bonds.pos${dir}.reaxff
fix bondinfo all reaxff/bonds 100 bonds/bonds.pos2.reaxff
# Reset neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# fix bondinfo all reaxff/bonds ${nthermo} bonds.reaxff
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol lx ly lz
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50
Resetting global fix info from restart file:
  fix style: nvt, fix ID: fnvt


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos2.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos2.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom ${nthermo} dump/pos${dir}_deform.lammpstrj id type q x y z element
dump dump_pos2 all custom ${nthermo} dump/pos${dir}_deform.lammpstrj id type q x y z element
dump dump_pos2 all custom 100 dump/pos${dir}_deform.lammpstrj id type q x y z element
dump dump_pos2 all custom 100 dump/pos2_deform.lammpstrj id type q x y z element
# dump_modify dump_pos${dir} element O Si
run ${nrun}
run 5000
All restart file global fix info was re-assigned
Unused restart file peratom fix info:
  fix style: STORE/ATOM, fix ID: msd1_COMPUTE_STORE
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 112.1 | 112.3 | 112.6 Mbytes
   Step          Temp          PotEng         Press          Volume           Lx             Ly             Lz      
         0   286.81146     -36733.554      10012.987      2983.7813      14.6913        12.723         15.9631      
       100   274.6002      -36742.208      3442.0328      3043.4569      14.6913        12.97746       15.9631      
       200   375.57397     -36673.472      7311.6991      3103.1326      14.6913        13.23192       15.9631      
       300   395.80463     -36633.033      1806.6448      3162.8082      14.6913        13.48638       15.9631      
       400   431.81858     -36592.808     -10188.022      3222.4838      14.6913        13.74084       15.9631      
       500   418.49078     -36529.559     -14339.948      3282.1594      14.6913        13.9953        15.9631      
       600   401.90565     -36473.019     -20540.226      3341.8351      14.6913        14.24976       15.9631      
       700   380.25522     -36424.264     -21132.625      3401.5107      14.6913        14.50422       15.9631      
       800   352.36966     -36326.342     -26432.312      3461.1863      14.6913        14.75868       15.9631      
       900   349.76037     -36261.226     -48114.042      3520.8619      14.6913        15.01314       15.9631      
      1000   330.17636     -36124.712     -69023.8        3580.5376      14.6913        15.2676        15.9631      
      1100   278.80307     -35920.499     -75170.613      3640.2132      14.6913        15.52206       15.9631      
      1200   266.61261     -35735.118     -98226.922      3699.8888      14.6913        15.77652       15.9631      
      1300   283.54311     -35507.272     -129659.8       3759.5644      14.6913        16.03098       15.9631      
      1400   299.51893     -35216.889     -153709.8       3819.2401      14.6913        16.28544       15.9631      
      1500   346.34373     -34913.251     -165000.96      3878.9157      14.6913        16.5399        15.9631      
      1600   319.5632      -34587.316     -183411.95      3938.5913      14.6913        16.79436       15.9631      
      1700   292.93821     -34255.563     -193683.64      3998.267       14.6913        17.04882       15.9631      
      1800   312.92245     -33910.886     -205120.73      4057.9426      14.6913        17.30328       15.9631      
      1900   309.29734     -33532.391     -208176.94      4117.6182      14.6913        17.55774       15.9631      
      2000   326.90819     -33194.029     -220016.57      4177.2938      14.6913        17.8122        15.9631      
      2100   352.06928     -32812.299     -229677.39      4236.9695      14.6913        18.06666       15.9631      
      2200   396.01        -32385.955     -230389.98      4296.6451      14.6913        18.32112       15.9631      
      2300   369.56964     -31988.581     -236968.39      4356.3207      14.6913        18.57558       15.9631      
      2400   421.17966     -31618.485     -224187.2       4415.9963      14.6913        18.83004       15.9631      
      2500   452.47086     -31397.2       -228446.14      4475.672       14.6913        19.0845        15.9631      
      2600   369.13126     -31036.593     -227659.18      4535.3476      14.6913        19.33896       15.9631      
      2700   493.33115     -30814.263     -217134.8       4595.0232      14.6913        19.59342       15.9631      
      2800   923.5351      -31074.751     -178285.73      4654.6988      14.6913        19.84788       15.9631      
      2900   1166.2539     -31728.121     -128123.23      4714.3745      14.6913        20.10234       15.9631      
      3000   1372.7689     -32798.397     -74481.089      4774.0501      14.6913        20.3568        15.9631      
      3100   1202.6571     -34079.706     -1445.8452      4833.7257      14.6913        20.61126       15.9631      
      3200   680.06948     -34615.688      18159.517      4893.4013      14.6913        20.86572       15.9631      
      3300   349.06722     -34733.778      36744.293      4953.077       14.6913        21.12018       15.9631      
      3400   279.98745     -34781.44       28760.362      5012.7526      14.6913        21.37464       15.9631      
      3500   262.92225     -34820.655      10497.6        5072.4282      14.6913        21.6291        15.9631      
      3600   376.34907     -34887.247      71.816426      5132.1038      14.6913        21.88356       15.9631      
      3700   347.50431     -34882.847      8976.6881      5191.7795      14.6913        22.13802       15.9631      
      3800   291.60658     -34917.326      5221.2341      5251.4551      14.6913        22.39248       15.9631      
      3900   249.49057     -34920.982      12382.229      5311.1307      14.6913        22.64694       15.9631      
      4000   261.2315      -34924.507      6952.7595      5370.8064      14.6913        22.9014        15.9631      
      4100   282.0422      -34895.113      13366.583      5430.482       14.6913        23.15586       15.9631      
      4200   301.12477     -34907.302      18955.856      5490.1576      14.6913        23.41032       15.9631      
      4300   304.50157     -34929.373      13582.688      5549.8332      14.6913        23.66478       15.9631      
      4400   294.17548     -34941.452      10541.945      5609.5089      14.6913        23.91924       15.9631      
      4500   291.82305     -34964.309      12136.948      5669.1845      14.6913        24.1737        15.9631      
      4600   295.75387     -34993.392      6624.9729      5728.8601      14.6913        24.42816       15.9631      
      4700   276.09891     -35006.661      10912.149      5788.5357      14.6913        24.68262       15.9631      
      4800   268.5797      -34994.553      11259.235      5848.2114      14.6913        24.93708       15.9631      
      4900   334.78605     -35006.607      11649.438      5907.887       14.6913        25.19154       15.9631      
      5000   337.62827     -34977.845      6297.8938      5967.5626      14.6913        25.446         15.9631      
Loop time of 65.1744 on 16 procs for 5000 steps with 243 atoms

Performance: 3.314 ns/day, 7.242 hours/ns, 76.717 timesteps/s, 18.642 katom-step/s
101.8% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 43.645     | 46.786     | 50.04      |  32.3 | 71.79
Bond    | 0.00060426 | 0.00072256 | 0.00091277 |   0.0 |  0.00
Neigh   | 4.052      | 4.4504     | 4.8478     |  16.3 |  6.83
Comm    | 1.3338     | 4.582      | 7.7245     | 103.2 |  7.03
Output  | 0.00868    | 0.0097259  | 0.010409   |   0.6 |  0.01
Modify  | 8.8615     | 9.2611     | 9.6644     |  11.4 | 14.21
Other   |            | 0.08448    |            |       |  0.13

Nlocal:         30.375 ave          61 max           1 min
Histogram: 4 0 0 0 0 0 0 0 0 4
Nghost:        1533.12 ave        2051 max        1021 min
Histogram: 4 0 0 0 0 0 0 0 0 4
Neighs:        10641.2 ave       21622 max         292 min
Histogram: 4 0 0 0 0 0 0 0 0 4

Total # of neighbors = 85130
Ave neighs/atom = 350.32922
Ave special neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos2

# Delete dir to make sure it is not reused
variable dir delete
# uzz Perturbation
variable dir equal 3
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
variable len0 equal ${lz0}
variable len0 equal 15.9631
variable dlen equal lz-${len0}
variable dlen equal lz-15.9631
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 1*${len0}
variable delta equal 1*15.9631
variable deltaxy equal ${up}*xy
variable deltaxy equal 1*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 1*xz
variable deltayz equal ${up}*yz
variable deltayz equal 1*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box
fix deform_p all deform 100 z delta 0 ${delta} remap v units box
fix deform_p all deform 100 z delta 0 15.9631 remap v units box
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 3 starts.*****
# Save bond information
fix bondinfo all reaxff/bonds ${nthermo} bonds/bonds.pos${dir}.reaxff
fix bondinfo all reaxff/bonds 100 bonds/bonds.pos${dir}.reaxff
fix bondinfo all reaxff/bonds 100 bonds/bonds.pos3.reaxff
# Reset neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# fix bondinfo all reaxff/bonds ${nthermo} bonds.reaxff
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol lx ly lz
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50
Resetting global fix info from restart file:
  fix style: nvt, fix ID: fnvt


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos3.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos3.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom ${nthermo} dump/pos${dir}_deform.lammpstrj id type q x y z element
dump dump_pos3 all custom ${nthermo} dump/pos${dir}_deform.lammpstrj id type q x y z element
dump dump_pos3 all custom 100 dump/pos${dir}_deform.lammpstrj id type q x y z element
dump dump_pos3 all custom 100 dump/pos3_deform.lammpstrj id type q x y z element
# dump_modify dump_pos${dir} element O Si
run ${nrun}
run 5000
All restart file global fix info was re-assigned
Unused restart file peratom fix info:
  fix style: STORE/ATOM, fix ID: msd1_COMPUTE_STORE
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 112.1 | 112.3 | 112.6 Mbytes
   Step          Temp          PotEng         Press          Volume           Lx             Ly             Lz      
         0   286.81146     -36733.554      10012.987      2983.7813      14.6913        12.723         15.9631      
       100   275.25727     -36738.08       4597.4448      3043.4569      14.6913        12.723         16.282362    
       200   374.41055     -36650.308      7686.1587      3103.1326      14.6913        12.723         16.601624    
       300   370.74054     -36607.484      16969.644      3162.8082      14.6913        12.723         16.920886    
       400   397.42544     -36590.749      2906.1765      3222.4838      14.6913        12.723         17.240148    
       500   424.93669     -36592.549     -13972.967      3282.1594      14.6913        12.723         17.55941     
       600   375.10999     -36523.977     -12936.125      3341.8351      14.6913        12.723         17.878672    
       700   403.71054     -36464.09      -9750.7982      3401.5107      14.6913        12.723         18.197934    
       800   368.11663     -36405.988     -17349.46       3461.1863      14.6913        12.723         18.517196    
       900   396.23461     -36343.255     -34093.775      3520.8619      14.6913        12.723         18.836458    
      1000   331.59589     -36192.745     -72184.176      3580.5376      14.6913        12.723         19.15572     
      1100   311.29568     -36023.578     -94287.155      3640.2132      14.6913        12.723         19.474982    
      1200   423.49163     -35906.92      -119394.05      3699.8888      14.6913        12.723         19.794244    
      1300   390.65673     -35672.382     -154966.67      3759.5644      14.6913        12.723         20.113506    
      1400   270.55587     -35354.226     -185983.23      3819.2401      14.6913        12.723         20.432768    
      1500   261.40366     -35021.139     -212792.03      3878.9157      14.6913        12.723         20.75203     
      1600   283.19386     -34636.387     -231453.11      3938.5913      14.6913        12.723         21.071292    
      1700   289.61723     -34257.433     -242004.94      3998.267       14.6913        12.723         21.390554    
      1800   273.10602     -33821.585     -247286.01      4057.9426      14.6913        12.723         21.709816    
      1900   312.15362     -33368.914     -250310.91      4117.6182      14.6913        12.723         22.029078    
      2000   268.35353     -32887.38      -253145.36      4177.2938      14.6913        12.723         22.34834     
      2100   283.78328     -32492.189     -253829.02      4236.9695      14.6913        12.723         22.667602    
      2200   249.59647     -32036.954     -256238.76      4296.6451      14.6913        12.723         22.986864    
      2300   222.06742     -31581.009     -254619.41      4356.3207      14.6913        12.723         23.306126    
      2400   235.4042      -31111.111     -257737.83      4415.9963      14.6913        12.723         23.625388    
      2500   293.78594     -30667.17      -255568.03      4475.672       14.6913        12.723         23.94465     
      2600   296.49614     -30187.862     -254378.5       4535.3476      14.6913        12.723         24.263912    
      2700   277.00384     -29714.925     -258715.41      4595.0232      14.6913        12.723         24.583174    
      2800   264.63603     -29225.001     -259698.54      4654.6988      14.6913        12.723         24.902436    
      2900   281.09667     -28735.894     -262899.02      4714.3745      14.6913        12.723         25.221698    
      3000   323.00736     -28257.692     -265429.4       4774.0501      14.6913        12.723         25.54096     
      3100   294.77927     -27733.39      -267977.68      4833.7257      14.6913        12.723         25.860222    
      3200   310.39656     -27245.833     -271217.21      4893.4013      14.6913        12.723         26.179484    
      3300   313.08962     -26728.792     -273192.99      4953.077       14.6913        12.723         26.498746    
      3400   285.51281     -26203.403     -271955.95      5012.7526      14.6913        12.723         26.818008    
      3500   362.32935     -25789.761     -269191.65      5072.4282      14.6913        12.723         27.13727     
      3600   461.8807      -25484.596     -263149.53      5132.1038      14.6913        12.723         27.456532    
      3700   927.13899     -25675.013     -236945.41      5191.7795      14.6913        12.723         27.775794    
      3800   1337.4361     -26364.316     -204662.31      5251.4551      14.6913        12.723         28.095056    
      3900   2000.0201     -28461.738     -157687.69      5311.1307      14.6913        12.723         28.414318    
      4000   1895.8249     -30904.891     -120165.45      5370.8064      14.6913        12.723         28.73358     
      4100   1425.5324     -32929.013     -58778.221      5430.482       14.6913        12.723         29.052842    
      4200   718.1696      -33679.204     -11469.133      5490.1576      14.6913        12.723         29.372104    
      4300   429.23795     -33910.511     -441.6109       5549.8332      14.6913        12.723         29.691366    
      4400   442.18774     -34188.727     -677.59155      5609.5089      14.6913        12.723         30.010628    
      4500   286.174       -34292.62       11425.978      5669.1845      14.6913        12.723         30.32989     
      4600   382.97345     -34473.979      7727.3256      5728.8601      14.6913        12.723         30.649152    
      4700   282.91362     -34498.535      6589.2402      5788.5357      14.6913        12.723         30.968414    
      4800   259.40723     -34518.714      9944.8812      5848.2114      14.6913        12.723         31.287676    
      4900   392.91331     -34631.771      5344.3364      5907.887       14.6913        12.723         31.606938    
      5000   335.38871     -34697.622      3069.4147      5967.5626      14.6913        12.723         31.9262      
Loop time of 65.3395 on 16 procs for 5000 steps with 243 atoms

Performance: 3.306 ns/day, 7.260 hours/ns, 76.523 timesteps/s, 18.595 katom-step/s
101.3% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 48.631     | 50.08      | 51.243     |  15.1 | 76.65
Bond    | 0.00058504 | 0.0007155  | 0.0008816  |   0.0 |  0.00
Neigh   | 4.546      | 4.5957     | 4.6855     |   1.8 |  7.03
Comm    | 1.4103     | 2.5713     | 4.0409     |  66.9 |  3.94
Output  | 0.0077817  | 0.0087444  | 0.0095504  |   0.6 |  0.01
Modify  | 7.8995     | 7.9989     | 8.0421     |   1.5 | 12.24
Other   |            | 0.08381    |            |       |  0.13

Nlocal:         30.375 ave          42 max          19 min
Histogram: 1 2 1 0 0 0 1 0 0 3
Nghost:        1706.88 ave        1910 max        1494 min
Histogram: 3 1 0 0 0 0 0 0 0 4
Neighs:        11752.8 ave       16266 max        6756 min
Histogram: 1 2 1 0 0 0 0 1 0 3

Total # of neighbors = 94022
Ave neighs/atom = 386.92181
Ave special neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos3

# Delete dir to make sure it is not reused
variable dir delete
# uyz Perturbation
variable dir equal 4
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
variable len0 equal ${lx0}
variable len0 equal 14.6913
variable dlen equal 2*(yz-${yz0})
variable dlen equal 2*(yz-0)
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 1*${len0}
variable delta equal 1*14.6913
variable deltaxy equal ${up}*xy
variable deltaxy equal 1*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 1*xz
variable deltayz equal ${up}*yz
variable deltayz equal 1*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box flip no"
fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box flip no
fix deform_p all deform 100 yz delta ${delta} remap v units box flip no
fix deform_p all deform 100 yz delta 14.6913 remap v units box flip no
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 4 starts.*****
# Save bond information
fix bondinfo all reaxff/bonds ${nthermo} bonds/bonds.pos${dir}.reaxff
fix bondinfo all reaxff/bonds 100 bonds/bonds.pos${dir}.reaxff
fix bondinfo all reaxff/bonds 100 bonds/bonds.pos4.reaxff
# Reset neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# fix bondinfo all reaxff/bonds ${nthermo} bonds.reaxff
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol lx ly lz
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50
Resetting global fix info from restart file:
  fix style: nvt, fix ID: fnvt


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos4.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos4.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom ${nthermo} dump/pos${dir}_deform.lammpstrj id type q x y z element
dump dump_pos4 all custom ${nthermo} dump/pos${dir}_deform.lammpstrj id type q x y z element
dump dump_pos4 all custom 100 dump/pos${dir}_deform.lammpstrj id type q x y z element
dump dump_pos4 all custom 100 dump/pos4_deform.lammpstrj id type q x y z element
# dump_modify dump_pos${dir} element O Si
run ${nrun}
run 5000
All restart file global fix info was re-assigned
Unused restart file peratom fix info:
  fix style: STORE/ATOM, fix ID: msd1_COMPUTE_STORE
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 112.1 | 112.3 | 112.6 Mbytes
   Step          Temp          PotEng         Press          Volume           Lx             Ly             Lz      
         0   286.81146     -36733.554      10012.987      2983.7813      14.6913        12.723         15.9631      
       100   279.0615      -36738.061      7696.192       2983.7813      14.6913        12.723         15.9631      
       200   473.36199     -36600.416      16182.868      2983.7813      14.6913        12.723         15.9631      
       300   560.42452     -36456.659      29500.618      2983.7813      14.6913        12.723         15.9631      
       400   638.59272     -36399.496      30979.193      2983.7813      14.6913        12.723         15.9631      
       500   721.5116      -36113.987      49058.633      2983.7813      14.6913        12.723         15.9631      
       600   749.31978     -36010.809      59337.002      2983.7813      14.6913        12.723         15.9631      
       700   667.34731     -36098.935      38819.262      2983.7813      14.6913        12.723         15.9631      
       800   639.53583     -36159.388      47227.396      2983.7813      14.6913        12.723         15.9631      
       900   643.84297     -36245.289      55540.485      2983.7813      14.6913        12.723         15.9631      
      1000   551.49958     -35916.792      58782.408      2983.7813      14.6913        12.723         15.9631      
      1100   634.11739     -36058.353      39376.514      2983.7813      14.6913        12.723         15.9631      
      1200   591.18796     -35946.722      60586.34       2983.7813      14.6913        12.723         15.9631      
      1300   599.96286     -35942.888      55686.714      2983.7813      14.6913        12.723         15.9631      
      1400   621.63986     -35899.313      53353.407      2983.7813      14.6913        12.723         15.9631      
      1500   545.98016     -35790.435      53098.889      2983.7813      14.6913        12.723         15.9631      
      1600   485.3893      -35743.022      44940.615      2983.7813      14.6913        12.723         15.9631      
      1700   486.50694     -35654.611      43230.241      2983.7813      14.6913        12.723         15.9631      
      1800   522.496       -35565.355      34845.584      2983.7813      14.6913        12.723         15.9631      
      1900   461.23605     -35454.014      25503.979      2983.7813      14.6913        12.723         15.9631      
      2000   380.00039     -35290.314      31658.451      2983.7813      14.6913        12.723         15.9631      
      2100   324.04337     -35134.963      40509.573      2983.7813      14.6913        12.723         15.9631      
      2200   403.54899     -35053.18       21869.779      2983.7813      14.6913        12.723         15.9631      
      2300   377.06973     -35006.917      29285.517      2983.7813      14.6913        12.723         15.9631      
      2400   394.73318     -34982.228      28981.549      2983.7813      14.6913        12.723         15.9631      
      2500   482.84786     -35071.715      25287.398      2983.7813      14.6913        12.723         15.9631      
      2600   480.61043     -35158.244      24250.684      2983.7813      14.6913        12.723         15.9631      
      2700   467.14468     -35052.745      24802.109      2983.7813      14.6913        12.723         15.9631      
      2800   390.78424     -34926.598      31490.609      2983.7813      14.6913        12.723         15.9631      
      2900   422.80891     -34873.814      31193.693      2983.7813      14.6913        12.723         15.9631      
      3000   413.20371     -34808.354      24302.411      2983.7813      14.6913        12.723         15.9631      
      3100   375.92046     -34784.818      16280.742      2983.7813      14.6913        12.723         15.9631      
      3200   358.17745     -34686.377      19888.114      2983.7813      14.6913        12.723         15.9631      
      3300   318.26211     -34548.657      12519.842      2983.7813      14.6913        12.723         15.9631      
      3400   338.48817     -34460.047      32704.437      2983.7813      14.6913        12.723         15.9631      
      3500   372.53693     -34412.602      23982.878      2983.7813      14.6913        12.723         15.9631      
      3600   350.16714     -34414.532      29719.854      2983.7813      14.6913        12.723         15.9631      
      3700   327.53556     -34309.635      396.25164      2983.7813      14.6913        12.723         15.9631      
      3800   386.98417     -34287.783      18433.883      2983.7813      14.6913        12.723         15.9631      
      3900   371.67532     -34231.658      12959.479      2983.7813      14.6913        12.723         15.9631      
      4000   310.01921     -34149.418      20501.092      2983.7813      14.6913        12.723         15.9631      
      4100   317.6034      -34107.382      8144.5948      2983.7813      14.6913        12.723         15.9631      
      4200   369.27157     -34071.165      1426.5409      2983.7813      14.6913        12.723         15.9631      
      4300   371.78691     -34008.161      18510.341      2983.7813      14.6913        12.723         15.9631      
      4400   398.76241     -34030.142      34691.104      2983.7813      14.6913        12.723         15.9631      
      4500   400.34304     -34073.831      8504.4371      2983.7813      14.6913        12.723         15.9631      
      4600   459.92348     -34160.265      5682.357       2983.7813      14.6913        12.723         15.9631      
      4700   445.88653     -34277.843      22703.236      2983.7813      14.6913        12.723         15.9631      
      4800   492.17213     -34335.968      38559.624      2983.7813      14.6913        12.723         15.9631      
      4900   459.19076     -34401.315      35290.496      2983.7813      14.6913        12.723         15.9631      
      5000   386.36077     -34398.63       25527.309      2983.7813      14.6913        12.723         15.9631      
Loop time of 129.86 on 16 procs for 5000 steps with 243 atoms

Performance: 1.663 ns/day, 14.429 hours/ns, 38.503 timesteps/s, 9.356 katom-step/s
100.2% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 97.74      | 101.32     | 105.51     |  23.9 | 78.02
Bond    | 0.00077214 | 0.0010462  | 0.0013645  |   0.6 |  0.00
Neigh   | 9.0778     | 9.2023     | 9.3296     |   3.0 |  7.09
Comm    | 2.4475     | 6.6515     | 10.238     |  93.5 |  5.12
Output  | 0.0079866  | 0.0089435  | 0.0097974  |   0.6 |  0.01
Modify  | 12.453     | 12.571     | 12.681     |   2.3 |  9.68
Other   |            | 0.1101     |            |       |  0.08

Nlocal:         30.375 ave          36 max          23 min
Histogram: 1 0 0 2 0 0 3 0 0 2
Nghost:        3757.38 ave        3802 max        3708 min
Histogram: 2 0 0 2 0 0 1 0 1 2
Neighs:          17396 ave       20455 max       13278 min
Histogram: 1 0 0 2 0 0 2 1 0 2

Total # of neighbors = 139168
Ave neighs/atom = 572.70782
Ave special neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos4

# Delete dir to make sure it is not reused
variable dir delete
# uxz Perturbation
variable dir equal 5
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
variable len0 equal ${ly0}
variable len0 equal 12.723
variable dlen equal 2*(xz-${xz0})
variable dlen equal 2*(xz-0)
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 1*${len0}
variable delta equal 1*12.723
variable deltaxy equal ${up}*xy
variable deltaxy equal 1*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 1*xz
variable deltayz equal ${up}*yz
variable deltayz equal 1*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box flip no"
fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box flip no
fix deform_p all deform 100 xz delta ${delta} remap v units box flip no
fix deform_p all deform 100 xz delta 12.723 remap v units box flip no
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 5 starts.*****
# Save bond information
fix bondinfo all reaxff/bonds ${nthermo} bonds/bonds.pos${dir}.reaxff
fix bondinfo all reaxff/bonds 100 bonds/bonds.pos${dir}.reaxff
fix bondinfo all reaxff/bonds 100 bonds/bonds.pos5.reaxff
# Reset neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# fix bondinfo all reaxff/bonds ${nthermo} bonds.reaxff
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol lx ly lz
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50
Resetting global fix info from restart file:
  fix style: nvt, fix ID: fnvt


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos5.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos5.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom ${nthermo} dump/pos${dir}_deform.lammpstrj id type q x y z element
dump dump_pos5 all custom ${nthermo} dump/pos${dir}_deform.lammpstrj id type q x y z element
dump dump_pos5 all custom 100 dump/pos${dir}_deform.lammpstrj id type q x y z element
dump dump_pos5 all custom 100 dump/pos5_deform.lammpstrj id type q x y z element
# dump_modify dump_pos${dir} element O Si
run ${nrun}
run 5000
All restart file global fix info was re-assigned
Unused restart file peratom fix info:
  fix style: STORE/ATOM, fix ID: msd1_COMPUTE_STORE
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 112.1 | 112.3 | 112.6 Mbytes
   Step          Temp          PotEng         Press          Volume           Lx             Ly             Lz      
         0   286.81146     -36733.554      10012.987      2983.7813      14.6913        12.723         15.9631      
       100   280.1098      -36739.869      6491.973       2983.7813      14.6913        12.723         15.9631      
       200   572.31473     -36404.899      49671.634      2983.7813      14.6913        12.723         15.9631      
       300   634.71409     -36413.163      17104.705      2983.7813      14.6913        12.723         15.9631      
       400   600.04801     -36454.19       38796.196      2983.7813      14.6913        12.723         15.9631      
       500   553.80437     -36428.062      28841.231      2983.7813      14.6913        12.723         15.9631      
       600   562.36244     -36084.741      38209.036      2983.7813      14.6913        12.723         15.9631      
       700   584.8681      -36108.108      42660.505      2983.7813      14.6913        12.723         15.9631      
       800   559.51639     -36166.992      43522.722      2983.7813      14.6913        12.723         15.9631      
       900   723.2887      -35920.381      26732.042      2983.7813      14.6913        12.723         15.9631      
      1000   771.44305     -36157.034      34584.512      2983.7813      14.6913        12.723         15.9631      
      1100   491.65594     -36268.231      31032.088      2983.7813      14.6913        12.723         15.9631      
      1200   546.35375     -36132.944      46317.091      2983.7813      14.6913        12.723         15.9631      
      1300   684.8565      -36011.188      56533.059      2983.7813      14.6913        12.723         15.9631      
      1400   792.06173     -35925.873      52354.863      2983.7813      14.6913        12.723         15.9631      
      1500   708.09165     -35721.919      68147.663      2983.7813      14.6913        12.723         15.9631      
      1600   771.47581     -35797.662      48630.903      2983.7813      14.6913        12.723         15.9631      
      1700   690.6686      -35876.683      38503.695      2983.7813      14.6913        12.723         15.9631      
      1800   568.26317     -35725.874      52908.641      2983.7813      14.6913        12.723         15.9631      
      1900   515.72753     -35561.504      72869.913      2983.7813      14.6913        12.723         15.9631      
      2000   572.67497     -35382.339      81670.205      2983.7813      14.6913        12.723         15.9631      
      2100   610.85921     -35198.804      93713.225      2983.7813      14.6913        12.723         15.9631      
      2200   728.95792     -35021.096      74563.077      2983.7813      14.6913        12.723         15.9631      
      2300   828.94405     -34875.267      70080.363      2983.7813      14.6913        12.723         15.9631      
      2400   703.76232     -34773.327      71541.08       2983.7813      14.6913        12.723         15.9631      
      2500   776.32451     -34813.444      45143.651      2983.7813      14.6913        12.723         15.9631      
      2600   605.39369     -34979.517      30185.45       2983.7813      14.6913        12.723         15.9631      
      2700   662.83996     -35319.83       38120.985      2983.7813      14.6913        12.723         15.9631      
      2800   481.61555     -35445.716      33323.182      2983.7813      14.6913        12.723         15.9631      
      2900   429.76362     -35467.019      28065.456      2983.7813      14.6913        12.723         15.9631      
      3000   505.50492     -35334.193      45238.139      2983.7813      14.6913        12.723         15.9631      
      3100   490.40096     -35529.239      19273.651      2983.7813      14.6913        12.723         15.9631      
      3200   485.64936     -35563.992      20875.379      2983.7813      14.6913        12.723         15.9631      
      3300   443.22964     -35601.236      28084.811      2983.7813      14.6913        12.723         15.9631      
      3400   457.35679     -35611.665      10291.027      2983.7813      14.6913        12.723         15.9631      
      3500   421.82405     -35645.921      14896.812      2983.7813      14.6913        12.723         15.9631      
      3600   537.22414     -35748.771      10735.481      2983.7813      14.6913        12.723         15.9631      
      3700   442.4845      -35768.975      24447.51       2983.7813      14.6913        12.723         15.9631      
      3800   422.8005      -35790.49       35120.094      2983.7813      14.6913        12.723         15.9631      
      3900   493.62082     -35787.614      26719.05       2983.7813      14.6913        12.723         15.9631      
      4000   339.54303     -35792.135      30935.745      2983.7813      14.6913        12.723         15.9631      
      4100   350.06015     -35681.347      37791.295      2983.7813      14.6913        12.723         15.9631      
      4200   450.48794     -35677.952      19602.047      2983.7813      14.6913        12.723         15.9631      
      4300   348.55652     -35543.347      33367.835      2983.7813      14.6913        12.723         15.9631      
      4400   407.67164     -35528.395      42526.891      2983.7813      14.6913        12.723         15.9631      
      4500   475.28243     -35556.968      24910.609      2983.7813      14.6913        12.723         15.9631      
      4600   420.30682     -35726.332      27009.479      2983.7813      14.6913        12.723         15.9631      
      4700   364.59368     -35698.044      31195.318      2983.7813      14.6913        12.723         15.9631      
      4800   324.88771     -35654.32       40892.993      2983.7813      14.6913        12.723         15.9631      
      4900   407.30661     -35512.187      28518.031      2983.7813      14.6913        12.723         15.9631      
      5000   359.47258     -35515.384      30402.248      2983.7813      14.6913        12.723         15.9631      
Loop time of 113.598 on 16 procs for 5000 steps with 243 atoms

Performance: 1.901 ns/day, 12.622 hours/ns, 44.015 timesteps/s, 10.696 katom-step/s
100.1% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 87.778     | 88.983     | 89.887     |   7.9 | 78.33
Bond    | 0.0007957  | 0.0010097  | 0.0012918  |   0.6 |  0.00
Neigh   | 7.4548     | 7.5685     | 7.7274     |   3.1 |  6.66
Comm    | 3.4382     | 4.3216     | 5.5168     |  35.7 |  3.80
Output  | 0.0078432  | 0.0087936  | 0.0096234  |   0.6 |  0.01
Modify  | 12.442     | 12.61      | 12.72      |   2.4 | 11.10
Other   |            | 0.1051     |            |       |  0.09

Nlocal:         30.375 ave          37 max          26 min
Histogram: 3 0 1 0 1 1 0 1 0 1
Nghost:        3186.75 ave        3205 max        3165 min
Histogram: 2 0 0 0 1 1 0 2 0 2
Neighs:          17403 ave       21077 max       14907 min
Histogram: 2 1 1 0 1 1 0 1 0 1

Total # of neighbors = 139224
Ave neighs/atom = 572.93827
Ave special neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos5

# Delete dir to make sure it is not reused
variable dir delete
# uxy Perturbation
variable dir equal 6
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"
variable len0 equal ${lz0}
variable len0 equal 15.9631
variable dlen equal 2*(xy-${xy0})
variable dlen equal 2*(xy--7.3456)

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 1*${len0}
variable delta equal 1*15.9631
variable deltaxy equal ${up}*xy
variable deltaxy equal 1*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 1*xz
variable deltayz equal ${up}*yz
variable deltayz equal 1*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box flip no"
fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box flip no
fix deform_p all deform 100 xy delta ${delta} remap v units box flip no
fix deform_p all deform 100 xy delta 15.9631 remap v units box flip no

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 6 starts.*****
# Save bond information
fix bondinfo all reaxff/bonds ${nthermo} bonds/bonds.pos${dir}.reaxff
fix bondinfo all reaxff/bonds 100 bonds/bonds.pos${dir}.reaxff
fix bondinfo all reaxff/bonds 100 bonds/bonds.pos6.reaxff
# Reset neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)

# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# fix bondinfo all reaxff/bonds ${nthermo} bonds.reaxff
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check no

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol lx ly lz
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50
Resetting global fix info from restart file:
  fix style: nvt, fix ID: fnvt


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos6.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos6.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom ${nthermo} dump/pos${dir}_deform.lammpstrj id type q x y z element
dump dump_pos6 all custom ${nthermo} dump/pos${dir}_deform.lammpstrj id type q x y z element
dump dump_pos6 all custom 100 dump/pos${dir}_deform.lammpstrj id type q x y z element
dump dump_pos6 all custom 100 dump/pos6_deform.lammpstrj id type q x y z element
# dump_modify dump_pos${dir} element O Si
run ${nrun}
run 5000
All restart file global fix info was re-assigned
Unused restart file peratom fix info:
  fix style: STORE/ATOM, fix ID: msd1_COMPUTE_STORE
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 112.1 | 112.3 | 112.6 Mbytes
   Step          Temp          PotEng         Press          Volume           Lx             Ly             Lz      
         0   286.81146     -36733.554      10012.987      2983.7813      14.6913        12.723         15.9631      
       100   275.27911     -36735.834      5010.2775      2983.7813      14.6913        12.723         15.9631      
       200   384.64158     -36595.571      22238.384      2983.7813      14.6913        12.723         15.9631      
       300   503.55632     -36566.274      17837.242      2983.7813      14.6913        12.723         15.9631      
       400   499.32024     -36535.511      20404.577      2983.7813      14.6913        12.723         15.9631      
       500   521.84301     -36502.969      17213.295      2983.7813      14.6913        12.723         15.9631      
       600   519.1997      -36460.585      15514.557      2983.7813      14.6913        12.723         15.9631      
       700   450.78638     -36445.456      13872.717      2983.7813      14.6913        12.723         15.9631      
       800   404.90067     -36418.798      15634.753      2983.7813      14.6913        12.723         15.9631      
       900   436.03963     -36293.053      11115.346      2983.7813      14.6913        12.723         15.9631      
      1000   380.94746     -36186.32       13663.631      2983.7813      14.6913        12.723         15.9631      
      1100   406.72615     -36120.632      12790.92       2983.7813      14.6913        12.723         15.9631      
      1200   371.98203     -36006.122      6941.0716      2983.7813      14.6913        12.723         15.9631      
      1300   366.23137     -35882.719      1773.1584      2983.7813      14.6913        12.723         15.9631      
      1400   349.8682      -35719.833      10880.142      2983.7813      14.6913        12.723         15.9631      
      1500   330.27199     -35575.19       969.01173      2983.7813      14.6913        12.723         15.9631      
      1600   293.15341     -35371.625     -7001.2413      2983.7813      14.6913        12.723         15.9631      
      1700   275.34731     -35180.079      3090.3274      2983.7813      14.6913        12.723         15.9631      
      1800   271.14298     -34991.569     -2891.0482      2983.7813      14.6913        12.723         15.9631      
      1900   298.93239     -34756.916     -5370.5202      2983.7813      14.6913        12.723         15.9631      
      2000   284.86805     -34516.607     -8707.2257      2983.7813      14.6913        12.723         15.9631      
      2100   298.97126     -34261.582     -1414.2744      2983.7813      14.6913        12.723         15.9631      
      2200   306.01513     -33993.047     -14536.485      2983.7813      14.6913        12.723         15.9631      
      2300   300.4659      -33737.489     -19806.347      2983.7813      14.6913        12.723         15.9631      
      2400   335.28105     -33513.382     -10153.702      2983.7813      14.6913        12.723         15.9631      
      2500   403.06188     -33306.239     -13964.932      2983.7813      14.6913        12.723         15.9631      
      2600   364.50918     -33140.422     -18090.101      2983.7813      14.6913        12.723         15.9631      
      2700   386.29727     -32963.487     -24472.875      2983.7813      14.6913        12.723         15.9631      
      2800   376.76304     -32774.911     -39577.01       2983.7813      14.6913        12.723         15.9631      
      2900   473.84468     -32727.75      -14831.224      2983.7813      14.6913        12.723         15.9631      
      3000   437.71877     -32587.015     -19171.561      2983.7813      14.6913        12.723         15.9631      
      3100   536.04659     -32588.278      9154.3864      2983.7813      14.6913        12.723         15.9631      
      3200   632.51308     -32717.128      2997.1921      2983.7813      14.6913        12.723         15.9631      
      3300   584.16999     -32803.381     -4417.4339      2983.7813      14.6913        12.723         15.9631      
      3400   772.31054     -33162.808      25219.888      2983.7813      14.6913        12.723         15.9631      
      3500   626.13326     -33344.379      6850.573       2983.7813      14.6913        12.723         15.9631      
      3600   602.33374     -33565.243      10762.983      2983.7813      14.6913        12.723         15.9631      
      3700   592.99486     -33732.421      11894.349      2983.7813      14.6913        12.723         15.9631      
      3800   660.14694     -33932.817      18347.39       2983.7813      14.6913        12.723         15.9631      
      3900   570.10527     -34081.415      50312.649      2983.7813      14.6913        12.723         15.9631      
      4000   565.05568     -34207.734      24804.687      2983.7813      14.6913        12.723         15.9631      
      4100   572.73033     -34353.939      13725.342      2983.7813      14.6913        12.723         15.9631      
      4200   504.58795     -34496.598      32552.107      2983.7813      14.6913        12.723         15.9631      
      4300   434.70509     -34447.47       17674.42       2983.7813      14.6913        12.723         15.9631      
      4400   375.29957     -34409.964      21471.098      2983.7813      14.6913        12.723         15.9631      
      4500   372.05314     -34378.197      16390.149      2983.7813      14.6913        12.723         15.9631      
      4600   327.97235     -34282.15       20315.197      2983.7813      14.6913        12.723         15.9631      
      4700   351.79119     -34219.953      17605.677      2983.7813      14.6913        12.723         15.9631      
      4800   352.78955     -34098.637      17895.285      2983.7813      14.6913        12.723         15.9631      
      4900   327.12106     -34033.256     -530.93229      2983.7813      14.6913        12.723         15.9631      
      5000   443.03239     -33870.238      5281.5288      2983.7813      14.6913        12.723         15.9631      
Loop time of 99.643 on 16 procs for 5000 steps with 243 atoms

Performance: 2.168 ns/day, 11.071 hours/ns, 50.179 timesteps/s, 12.194 katom-step/s
100.4% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 77.035     | 78.259     | 79.44      |   9.1 | 78.54
Bond    | 0.00075036 | 0.00098042 | 0.001232   |   0.0 |  0.00
Neigh   | 6.906      | 6.9606     | 7.0923     |   2.2 |  6.99
Comm    | 1.8955     | 3.0796     | 4.301      |  46.0 |  3.09
Output  | 0.0076616  | 0.0086313  | 0.0094625  |   0.7 |  0.01
Modify  | 11.098     | 11.235     | 11.292     |   1.8 | 11.28
Other   |            | 0.09949    |            |       |  0.10

Nlocal:         30.375 ave          36 max          26 min
Histogram: 1 1 1 0 1 2 0 0 1 1
Nghost:        2828.12 ave        2852 max        2809 min
Histogram: 2 0 1 1 1 0 1 1 0 1
Neighs:        17448.4 ave       20631 max       14956 min
Histogram: 1 2 0 0 1 2 0 0 1 1

Total # of neighbors = 139587
Ave neighs/atom = 574.4321
Ave special neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos6

# Delete dir to make sure it is not reused
variable dir delete

# Calc and output
# include calc.mod.lmp

Total wall time: 0:10:44
