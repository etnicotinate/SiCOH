# # Find which reference length to use
# if "${dir} == 1" then &
#    "variable len0 equal ${lx0}" 
# if "${dir} == 2" then &
#    "variable len0 equal ${ly0}" 
# if "${dir} == 3" then &
#    "variable len0 equal ${lz0}" 
# if "${dir} == 4" then &
#    "variable len0 equal ${lz0}" 
# if "${dir} == 5" then &
#    "variable len0 equal ${lz0}" 
# if "${dir} == 6" then &
#    "variable len0 equal ${ly0}" 

# Find which length (epsilon) to calculate
if "${dir} == 1" then &
   "variable len0 equal ${lx0}" &
   "variable dlen equal lx-${len0}"
if "${dir} == 2" then &
   "variable len0 equal ${ly0}" &
   "variable dlen equal ly-${len0}"
if "${dir} == 3" then &
   "variable len0 equal ${lz0}" &
   "variable dlen equal lz-${len0}"
if "${dir} == 4" then &
   "variable len0 equal ${lx0}" &
   "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then &
   "variable len0 equal ${ly0}" &
   "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then &
   "variable len0 equal ${lz0}" &
   "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon) 
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig2 equal -f_avgp[2]*${ufac}
variable sig3 equal -f_avgp[3]*${ufac}
variable sig4 equal -f_avgp[6]*${ufac}
variable sig5 equal -f_avgp[5]*${ufac}
variable sig6 equal -f_avgp[4]*${ufac}

# Reset box and simulation parameters
clear
# box tilt large
read_restart equil.res

# Negative deformation
variable delta equal -${up}*${len0}
variable deltaxy equal -${up}*xy
variable deltaxz equal -${up}*xz
variable deltayz equal -${up}*yz
print "*****debug*****"
print "xy = $(xy), deltaxy = ${deltaxy}"
print "xz = $(xz), deltaxz = ${deltaxz}"
print "yz = $(yz), deltayz = ${deltayz}"
print "*****"

if "${dir} == 1" then &
   "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then &
   "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then &
   "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then &
   "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then &
   "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then &
   "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
include ff.mod.lmp

# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}" &
      file stress_strain/stress_strain.neg${dir}.out screen no  
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}" &
      append stress_strain/stress_strain.neg${dir}.out screen no &
      title "# eps sig1 sig2 sig3 sig4 sig5 sig6"  

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom ${nthermo} dump/neg_deform${dir}.lammpstrj id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
unfix deform_n
unfix data
undump dump_neg${dir}

# Compute elastic constant from pressure
# d1 = -[pxx1-pxx0]/[(v_delta/v_len0] defined in input script
# variable C1neg equal ${d1}
# variable C2neg equal ${d2}
# variable C3neg equal ${d3}
# variable C4neg equal ${d4}
# variable C5neg equal ${d5}
# variable C6neg equal ${d6}

# Reset box and simulation parameters
clear
# box tilt large
read_restart equil.res

# Positive deformation
variable delta equal ${up}*${len0}
variable deltaxy equal ${up}*xy
variable deltaxz equal ${up}*xz
variable deltayz equal ${up}*yz
if "${dir} == 1" then &
   "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then &
   "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then &
   "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then &
   "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then &
   "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then &
   "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
include ff.mod.lmp

# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}" &
      file stress_strain/stress_strain.pos${dir}.out screen no  
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}" &
      append stress_strain/stress_strain.pos${dir}.out screen no &
      title "# eps sig1 sig2 sig3 sig4 sig5 sig6"  

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp &
#     file stress_strain/msd_${dir}.out &
#     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
compute rdf1 all rdf 10 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] &
    file stress_strain/rdf_${dir}.out mode vector &
    title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom ${nthermo} dump/pos_deform${dir}.lammpstrj id type q x y z
run ${nrun}
unfix deform_p
unfix data
undump dump_pos${dir}

# # Combine positive and negative 
# variable C1${dir} equal 0.5*(${C1neg}+${C1pos})
# variable C2${dir} equal 0.5*(${C2neg}+${C2pos})
# variable C3${dir} equal 0.5*(${C3neg}+${C3pos})
# variable C4${dir} equal 0.5*(${C4neg}+${C4pos})
# variable C5${dir} equal 0.5*(${C5neg}+${C5pos})
# variable C6${dir} equal 0.5*(${C6neg}+${C6pos})

# Delete dir to make sure it is not reused
variable dir delete
