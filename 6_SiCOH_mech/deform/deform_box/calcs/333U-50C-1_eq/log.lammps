LAMMPS (2 Aug 2023 - Update 2)
  using 2 OpenMP thread(s) per MPI task
# Initialization
units           real
dimension       3
boundary        p p p
# boundary        s s s
atom_style      full
timestep        0.5   # fs

# Define MD parameters
variable nevery equal 10                  # sampling interval
variable nrepeat equal 10                 # number of samples
variable nfreq equal ${nevery}*${nrepeat} # length of one average
variable nfreq equal 10*${nrepeat} 
variable nfreq equal 10*10 
variable nthermo equal ${nfreq}           # interval for thermo output
variable nthermo equal 100           
# 1 ps : 1e3 fs / 0.5 fs = 2e3 steps
variable nequil equal 50*${nthermo}       # steps of equilibration run 10
variable nequil equal 50*100       
variable nrun equal 50*${nthermo}          # stpes of equilibrated run 10
variable nrun equal 50*100          
variable temp equal 300.0                # temperature of initial sample
variable tdamp equal 50.0                 # time constant for thermostat
variable seed equal 123456                # seed for thermostat
variable ufac equal 1.01325e-4         # pressure unit conversion, from atm to Gpa
variable up equal 0.01                  # the deformation magnitude 0.1
variable FF string "SiOCHN_2018.ff C H O Si"          # force field args for pair_coeff
# pair_coeff * * CHONSSi.ff C H O Si
# pair_coeff * * CHOSiNa.ff C H O Si
# pair_coeff * * SiOCHN_2018.ff C H O Si
# pair_coeff * * PDMSDecomp.ff C H O Si
# pair_coeff * * CHONSi.ff C H O Si
# pair_coeff * * CHOFe.ff O Si

# Read the initial sctructure
# box tilt large
variable structure string 333U-50C-1_eq

read_data       ${structure}.data
read_data       333U-50C-1_eq.data
Reading data file ...
  triclinic box = (0 0 0) to (17.1722 13.1279 17.5867) with tilt (-8.382 0.0305 0.3027)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  reading atoms ...
  362 atoms
  reading velocities ...
  362 velocities
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.001 seconds
  read_data CPU = 0.013 seconds

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400

# # Energy minimization
# print "*****Minimization starts.*****"
# minimize 1.0e-6 1.0e-6 100 1000
# min_style cg
# # Save the optimized structure
# write_data ${structure}_opt.data
# velocity        all create ${temp} ${seed} dist gaussian

# # Equilibration
# include ff.mod.lmp
# if "$(is_defined(fix,avgp))" then "unfix avgp"
# if "$(is_defined(fix,avgl))" then "unfix avgl"
# thermo_style custom step temp pe press density vol
# run ${nequil}
# # Save the equilibrated structure
# write_data ${structure}_eq.data

# use tmp to save initial length and tilt
variable tmp equal lx
variable lx0 equal ${tmp}
variable lx0 equal 17.1722
variable tmp equal ly
variable ly0 equal ${tmp}
variable ly0 equal 13.1279
variable tmp equal lz
variable lz0 equal ${tmp}
variable lz0 equal 17.5867

variable tmp equal yz
variable yz0 equal ${tmp}
variable yz0 equal 0.3027
variable tmp equal xz
variable xz0 equal ${tmp}
variable xz0 equal 0.0305
variable tmp equal xy
variable xy0 equal ${tmp}
variable xy0 equal -8.382

# Write restart
write_restart equil.res
System init for write_restart ...
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none

# dir: direction
# uxx Perturbation
variable dir equal 1
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
variable len0 equal ${lx0}
variable len0 equal 17.1722
variable dlen equal lx-${len0}
variable dlen equal lx-17.1722
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (17.1722 13.1279 17.5867) with tilt (-8.382 0.0305 0.3027)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  362 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*17.1722
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -8.3819999999999996732, deltaxy = 0.08382
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.030499999999999999334, deltaxz = -0.000305
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0.3027000000000000246, deltayz = -0.003027
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.171722 xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.171722 xy delta 0.08382 xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.171722 xy delta 0.08382 xz delta -0.000305 remap v units box flip no
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 1 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg1.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg1.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg1 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg1 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg1 all custom/gz 100 dump/neg_deform1.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Your simulation uses code contributions which should be cited:

- pair reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 number =  {4--5},
 pages =   {245--259}
}

- fix qeq/reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 pages =   {245--259}
}

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 130.5 | 131.4 | 132.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   290.39093     -37311.354     -1019.8392      3964.6564    
       100   293.39071     -37312.146      12889.428      3963.8635    
       200   329.01946     -37339.27      -10618.803      3963.0705    
       300   321.06805     -37312.649     -1830.5124      3962.2776    
       400   286.68207     -37273.069      746.03751      3961.4847    
       500   303.34227     -37319.316     -120.50818      3960.6917    
       600   309.27994     -37348.223      8605.9254      3959.8988    
       700   302.1117      -37343.216      4247.0096      3959.1059    
       800   296.59845     -37311.905      8139.4963      3958.3129    
       900   314.43098     -37315.463     -1396.3139      3957.52      
      1000   299.93887     -37310.029     -4517.1349      3956.7271    
      1100   282.04989     -37308.548     -12916.469      3955.9341    
      1200   296.82537     -37330.972     -5350.8001      3955.1412    
      1300   308.71969     -37315.294      996.2452       3954.3483    
      1400   316.27673     -37300.336      3146.3755      3953.5553    
      1500   290.95744     -37290.25      -764.75865      3952.7624    
      1600   307.0783      -37327.548     -552.36578      3951.9695    
      1700   297.91027     -37323.772      9650.3005      3951.1766    
      1800   285.89641     -37307.196      1101.5635      3950.3836    
      1900   308.71579     -37324.848     -4916.1808      3949.5907    
      2000   295.64036     -37322.609     -4177.2697      3948.7978    
      2100   305.59245     -37346.034     -3219.4275      3948.0048    
      2200   296.64925     -37336.431      747.64154      3947.2119    
      2300   298.41055     -37299.431     -1984.1564      3946.419     
      2400   300.15874     -37292.125      2288.6133      3945.626     
      2500   304.24633     -37314.421     -1540.1074      3944.8331    
      2600   285.08202     -37317.264      525.4465       3944.0402    
      2700   292.35038     -37321.312      10944.185      3943.2472    
      2800   289.5516      -37302.156      9824.1381      3942.4543    
      2900   297.28548     -37305.38      -1019.39        3941.6614    
      3000   304.83321     -37313.756     -3397.3153      3940.8684    
      3100   293.5905      -37302.497      3627.2235      3940.0755    
      3200   312.1278      -37323.805      1095.2127      3939.2826    
      3300   313.19124     -37344.523     -1002.2265      3938.4897    
      3400   279.40676     -37331.933      6302.0289      3937.6967    
      3500   277.64306     -37319.265     -6891.1741      3936.9038    
      3600   291.11287     -37319.362      3497.4938      3936.1109    
      3700   301.70948     -37312.819      4664.3433      3935.3179    
      3800   295.43065     -37295.997      1251.3177      3934.525     
      3900   293.40481     -37313.766     -7998.3019      3933.7321    
      4000   270.96139     -37317.433     -6191.664       3932.9391    
      4100   270.34321     -37312.104     -6807.2612      3932.1462    
      4200   288.81128     -37317.991      7494.0037      3931.3533    
      4300   301.21268     -37320.472     -1393.9577      3930.5603    
      4400   313.98233     -37321.939      484.08423      3929.7674    
      4500   308.08688     -37304.444      5110.2165      3928.9745    
      4600   315.3311      -37301.959     -770.06142      3928.1815    
      4700   311.2046      -37306.699     -3181.4225      3927.3886    
      4800   287.43429     -37307.388      6788.6628      3926.5957    
      4900   294.10376     -37330.301      7525.1121      3925.8028    
      5000   288.07293     -37325.322     -1558.0068      3925.0098    
Loop time of 201.939 on 16 procs for 5000 steps with 362 atoms

Performance: 1.070 ns/day, 22.438 hours/ns, 24.760 timesteps/s, 8.963 katom-step/s
98.9% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 125.47     | 147.56     | 179.42     | 189.8 | 73.07
Bond    | 0.011462   | 0.012838   | 0.014794   |   1.0 |  0.01
Neigh   | 1.4289     | 1.6869     | 2.0407     |  20.7 |  0.84
Comm    | 1.8287     | 33.689     | 55.736     | 397.0 | 16.68
Output  | 0.014628   | 0.036084   | 0.079563   |  12.2 |  0.02
Modify  | 18.46      | 18.834     | 19.121     |   6.4 |  9.33
Other   |            | 0.1175     |            |       |  0.06

Nlocal:          45.25 ave          52 max          36 min
Histogram: 1 1 0 1 0 1 0 0 3 1
Nghost:        3346.38 ave        3400 max        3301 min
Histogram: 2 0 1 0 1 1 1 0 1 1
Neighs:        29122.5 ave       32994 max       23556 min
Histogram: 1 1 0 1 0 1 0 0 2 2

Total # of neighbors = 232980
Ave neighs/atom = 643.59116
Ave special neighs/atom = 0
Neighbor list builds = 67
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg1

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (17.1722 13.1279 17.5867) with tilt (-8.382 0.0305 0.3027)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  362 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*17.1722
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.171722 xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.171722 xy delta -0.08382 xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.171722 xy delta -0.08382 xz delta 0.000305 remap v units box
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 1 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos1.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos1.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos1 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos1 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos1 all custom/gz 100 dump/pos_deform1.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 130.6 | 131.5 | 132.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   290.39093     -37311.354     -1019.8392      3964.6564    
       100   293.39085     -37312.182      12889.871      3965.4493    
       200   329.29106     -37339.449     -11084.667      3966.2422    
       300   322.3795      -37311.795     -2372.9328      3967.0352    
       400   285.94664     -37272.3        23.607964      3967.8281    
       500   302.11158     -37320.25      -226.37951      3968.621     
       600   307.8123      -37347.426      8253.5321      3969.414     
       700   300.99725     -37341.163      4750.822       3970.2069    
       800   296.60355     -37311.646      8093.8673      3970.9998    
       900   315.46367     -37315.835     -1905.2072      3971.7928    
      1000   299.27149     -37310.228     -7721.8917      3972.5857    
      1100   287.5347      -37313.953     -12074.816      3973.3786    
      1200   294.98758     -37334.979     -3724.0883      3974.1716    
      1300   285.38207     -37327.305     -6450.097       3974.9645    
      1400   307.16311     -37333.185     -4625.487       3975.7574    
      1500   306.63518     -37307.751     -83.425698      3976.5504    
      1600   324.63121     -37310.741      4560.7754      3977.3433    
      1700   313.47549     -37313.558      8274.113       3978.1362    
      1800   294.27263     -37318.908      3537.4054      3978.9291    
      1900   294.695       -37323.47       6800.2211      3979.7221    
      2000   301.08851     -37324.986     -150.70735      3980.515     
      2100   287.03486     -37301.532      7874.555       3981.3079    
      2200   303.07107     -37304.474      3875.1737      3982.1009    
      2300   327.86337     -37299.234      4925.457       3982.8938    
      2400   316.67128     -37295.187     -479.16714      3983.6867    
      2500   302.56099     -37312.549     -379.06613      3984.4797    
      2600   287.3077      -37307.177      302.7343       3985.2726    
      2700   315.84869     -37337.678      4149.0608      3986.0655    
      2800   292.41988     -37318.974      6638.4486      3986.8585    
      2900   276.28547     -37324.041      2851.4327      3987.6514    
      3000   277.71465     -37327.218     -5641.0716      3988.4443    
      3100   313.45765     -37331.852     -2022.0165      3989.2373    
      3200   306.90159     -37316.766     -1720.6917      3990.0302    
      3300   317.10555     -37328.201     -1699.2158      3990.8231    
      3400   273.6794      -37299.34       2118.4589      3991.616     
      3500   273.38399     -37330.464     -4652.691       3992.409     
      3600   290.42816     -37342.287     -11404.474      3993.2019    
      3700   277.70836     -37309.258     -3739.6845      3993.9948    
      3800   319.12959     -37341.459      7516.7737      3994.7878    
      3900   302.48373     -37315.562      7156.9934      3995.5807    
      4000   300.52364     -37310.006      1148.755       3996.3736    
      4100   324.15833     -37318.764     -7913.3816      3997.1666    
      4200   298.40054     -37289.891     -5179.014       3997.9595    
      4300   301.632       -37321.172     -6211.7954      3998.7524    
      4400   299.82782     -37341.263      1086.7734      3999.5454    
      4500   279.77337     -37321.978     -9734.0142      4000.3383    
      4600   292.2212      -37316.992     -10952.883      4001.1312    
      4700   307.8545      -37322.73      -8000.177       4001.9242    
      4800   305.82965     -37317.242      4254.0337      4002.7171    
      4900   314.05136     -37321.479      8276.969       4003.51      
      5000   292.4001      -37314.081     -1994.0763      4004.3029    
Loop time of 200.179 on 16 procs for 5000 steps with 362 atoms

Performance: 1.079 ns/day, 22.242 hours/ns, 24.978 timesteps/s, 9.042 katom-step/s
98.9% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 123.51     | 148.36     | 178.07     | 180.2 | 74.12
Bond    | 0.011975   | 0.012992   | 0.014267   |   0.7 |  0.01
Neigh   | 1.4713     | 1.7872     | 2.1269     |  20.8 |  0.89
Comm    | 1.3874     | 31.124     | 56.005     | 393.3 | 15.55
Output  | 0.01418    | 0.035177   | 0.078154   |  12.1 |  0.02
Modify  | 18.378     | 18.735     | 19.058     |   6.6 |  9.36
Other   |            | 0.1203     |            |       |  0.06

Nlocal:          45.25 ave          52 max          41 min
Histogram: 1 2 1 1 1 0 1 0 0 1
Nghost:         3328.5 ave        3371 max        3289 min
Histogram: 2 0 1 0 1 0 2 0 1 1
Neighs:          28556 ave       32254 max       26157 min
Histogram: 1 2 1 1 1 0 1 0 0 1

Total # of neighbors = 228448
Ave neighs/atom = 631.07182
Ave special neighs/atom = 0
Neighbor list builds = 70
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos1

# Delete dir to make sure it is not reused
variable dir delete
# uyy Perturbation
variable dir equal 2
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
variable len0 equal ${ly0}
variable len0 equal 13.1279
variable dlen equal ly-${len0}
variable dlen equal ly-13.1279
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (17.1722 13.1279 17.5867) with tilt (-8.382 0.0305 0.3027)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  362 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*13.1279
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -8.3819999999999996732, deltaxy = 0.08382
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.030499999999999999334, deltaxz = -0.000305
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0.3027000000000000246, deltayz = -0.003027
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 -0.131279 yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 -0.131279 yz delta -0.003027 remap v units box flip no
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 2 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg2.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg2.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg2 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg2 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg2 all custom/gz 100 dump/neg_deform2.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 130.5 | 131.4 | 132.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   290.39093     -37311.354     -1019.8392      3964.6564    
       100   293.38107     -37312.168      12892.246      3963.8635    
       200   329.06206     -37339.311     -10487.344      3963.0705    
       300   321.55992     -37312.827     -1582.1535      3962.2776    
       400   286.37997     -37273.536      1462.6086      3961.4847    
       500   302.19692     -37319.358     -51.680217      3960.6917    
       600   307.80655     -37347.443      9473.8101      3959.8988    
       700   302.05233     -37342.907      5111.4676      3959.1059    
       800   297.26465     -37312.85       8734.2549      3958.3129    
       900   314.04819     -37315.089     -1020.7566      3957.52      
      1000   305.617       -37317.29      -4142.0047      3956.7271    
      1100   285.42856     -37312.529     -11597.066      3955.9341    
      1200   293.68305     -37329.732     -2446.8425      3955.1412    
      1300   291.78117     -37310.094     -7711.3558      3954.3483    
      1400   318.05079     -37310.245     -308.89036      3953.5553    
      1500   303.14864     -37301.579      3015.262       3952.7624    
      1600   304.61877     -37325.47       9723.8689      3951.9695    
      1700   298.05357     -37334.829      4074.2045      3951.1766    
      1800   289.7638      -37338.716      279.36009      3950.3836    
      1900   292.85491     -37359.184     -1180.523       3949.5907    
      2000   278.78469     -37332.104      2274.8331      3948.7978    
      2100   311.97848     -37333.524     -7607.0229      3948.0048    
      2200   312.3881      -37322.321      5968.5173      3947.2119    
      2300   290.84858     -37295.729      5766.9666      3946.419     
      2400   310.50646     -37319.621      5462.1239      3945.626     
      2500   295.73847     -37334.899     -654.19961      3944.8331    
      2600   277.13644     -37324.418     -8234.0455      3944.0402    
      2700   274.5011      -37304.765     -2898.4146      3943.2472    
      2800   314.44874     -37317.1        11224.769      3942.4543    
      2900   308.35622     -37308.168      6247.9854      3941.6614    
      3000   299.90667     -37292.163      370.77869      3940.8684    
      3100   315.75819     -37315.679      9165.862       3940.0755    
      3200   291.56067     -37320.625     -113.56933      3939.2826    
      3300   300.93251     -37352.2       -2287.9017      3938.4897    
      3400   285.26077     -37334.557      1771.0876      3937.6967    
      3500   290.01329     -37316.805     -3624.4592      3936.9038    
      3600   318.87426     -37336.771     -3208.0357      3936.1109    
      3700   299.902       -37316.215      8313.6032      3935.3179    
      3800   287.14009     -37306.038      3676.4423      3934.525     
      3900   283.48793     -37318.97       12606.116      3933.7321    
      4000   300.28287     -37353.082     -772.17787      3932.9391    
      4100   289.33382     -37326.417      5302.0158      3932.1462    
      4200   303.96402     -37313.785      6070.3644      3931.3533    
      4300   301.48468     -37311.265     -627.66318      3930.5603    
      4400   297.05574     -37319.699      9016.0125      3929.7674    
      4500   288.06342     -37336.036     -5425.7214      3928.9745    
      4600   273.67097     -37331.026     -4440.7886      3928.1815    
      4700   314.3649      -37340.158      10523.087      3927.3886    
      4800   306.09313     -37306.539      4468.0625      3926.5957    
      4900   294.4541      -37296.868      10006.956      3925.8028    
      5000   294.2667      -37326.713      11526.968      3925.0098    
Loop time of 202.907 on 16 procs for 5000 steps with 362 atoms

Performance: 1.065 ns/day, 22.545 hours/ns, 24.642 timesteps/s, 8.920 katom-step/s
98.8% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 125.57     | 147.96     | 180.88     | 185.1 | 72.92
Bond    | 0.0115     | 0.012892   | 0.014346   |   0.9 |  0.01
Neigh   | 1.3609     | 1.6121     | 1.9762     |  21.5 |  0.79
Comm    | 1.378      | 34.316     | 56.736     | 384.5 | 16.91
Output  | 0.014602   | 0.035489   | 0.078235   |  12.0 |  0.02
Modify  | 18.487     | 18.851     | 19.111     |   6.3 |  9.29
Other   |            | 0.1158     |            |       |  0.06

Nlocal:          45.25 ave          52 max          36 min
Histogram: 1 0 0 0 1 1 4 0 0 1
Nghost:        3355.62 ave        3411 max        3293 min
Histogram: 1 0 1 1 1 0 1 1 1 1
Neighs:        29120.2 ave       32935 max       23522 min
Histogram: 1 0 0 0 1 1 2 2 0 1

Total # of neighbors = 232962
Ave neighs/atom = 643.54144
Ave special neighs/atom = 0
Neighbor list builds = 64
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg2

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (17.1722 13.1279 17.5867) with tilt (-8.382 0.0305 0.3027)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  362 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*13.1279
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 ${delta} yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 0.131279 yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 0.131279 yz delta 0.003027 remap v units box
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 2 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos2.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos2.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos2 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos2 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos2 all custom/gz 100 dump/pos_deform2.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 130.6 | 131.5 | 132.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   290.39093     -37311.354     -1019.8392      3964.6564    
       100   293.39777     -37312.161      12887.689      3965.4493    
       200   329.23952     -37339.51      -11324.751      3966.2422    
       300   322.00047     -37311.634     -2620.0392      3967.0352    
       400   286.3941      -37271.904     -923.78521      3967.8281    
       500   302.05836     -37318.696      130.76588      3968.621     
       600   310.26948     -37349.182      10406.915      3969.414     
       700   301.4876      -37341.506      5191.4673      3970.2069    
       800   295.39905     -37310.038      7875.7352      3970.9998    
       900   313.28563     -37313.257     -3949.1024      3971.7928    
      1000   302.17066     -37310.451     -10296.718      3972.5857    
      1100   277.43726     -37299.005     -14866.919      3973.3786    
      1200   293.29508     -37333.089     -4825.9103      3974.1716    
      1300   284.3587      -37349.847      2880.388       3974.9645    
      1400   279.10189     -37352.57      -8811.1606      3975.7574    
      1500   291.72307     -37332.242     -2414.5586      3976.5504    
      1600   297.78493     -37318.464      3924.1191      3977.3433    
      1700   312.59437     -37324.293     -1730.745       3978.1362    
      1800   283.26147     -37288.433      3777.7599      3978.9291    
      1900   308.90561     -37305.705     -4114.422       3979.7221    
      2000   297.91097     -37308.629     -9055.9854      3980.515     
      2100   298.22876     -37337.966     -4503.4143      3981.3079    
      2200   286.47876     -37326.648     -2145.3424      3982.1009    
      2300   302.74983     -37323.909      6932.349       3982.8938    
      2400   299.02468     -37312.233      7574.161       3983.6867    
      2500   304.45702     -37318.991     -2315.3361      3984.4797    
      2600   293.28464     -37308.689      6552.4154      3985.2726    
      2700   315.24807     -37329.463     -11137.204      3986.0655    
      2800   281.17237     -37314.174     -1104.7826      3986.8585    
      2900   279.28735     -37330.779     -10739.211      3987.6514    
      3000   284.22831     -37315.498     -4083.5829      3988.4443    
      3100   305.32806     -37310.982      5021.7162      3989.2373    
      3200   299.08189     -37306.343     -4391.6262      3990.0302    
      3300   322.79469     -37345.257     -3527.7839      3990.8231    
      3400   288.17316     -37330.695     -10993.686      3991.616     
      3500   287.48798     -37338.823     -13035.013      3992.409     
      3600   283.86837     -37311.53      -6113.5137      3993.2019    
      3700   296.13787     -37295.681      435.48567      3993.9948    
      3800   310.70953     -37307.598     -13287.65       3994.7878    
      3900   304.96312     -37306.983     -11024.44       3995.5807    
      4000   296.69478     -37321.498     -6405.3478      3996.3736    
      4100   290.23438     -37329.309     -5262.8161      3997.1666    
      4200   289.35417     -37303.688     -6885.1915      3997.9595    
      4300   309.6518      -37299.621      48.406304      3998.7524    
      4400   306.84566     -37307.827     -12661.61       3999.5454    
      4500   291.55119     -37315.863     -6467.4316      4000.3383    
      4600   296.39015     -37331.838     -15586.093      4001.1312    
      4700   289.40878     -37320.429     -8313.9691      4001.9242    
      4800   313.45491     -37308.441      168.95559      4002.7171    
      4900   292.52411     -37272.169      1995.8689      4003.51      
      5000   294.84654     -37285.881      773.89298      4004.3029    
Loop time of 201.714 on 16 procs for 5000 steps with 362 atoms

Performance: 1.071 ns/day, 22.413 hours/ns, 24.788 timesteps/s, 8.973 katom-step/s
98.9% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 123.48     | 149.75     | 179.18     | 204.4 | 74.24
Bond    | 0.011653   | 0.012851   | 0.014726   |   0.9 |  0.01
Neigh   | 1.4483     | 1.7659     | 2.095      |  23.0 |  0.88
Comm    | 1.4509     | 30.911     | 57.193     | 449.8 | 15.32
Output  | 0.014448   | 0.035654   | 0.079345   |  12.2 |  0.02
Modify  | 18.8       | 19.124     | 19.46      |   7.1 |  9.48
Other   |            | 0.1173     |            |       |  0.06

Nlocal:          45.25 ave          50 max          37 min
Histogram: 1 0 1 0 0 0 2 1 1 2
Nghost:         3275.5 ave        3304 max        3238 min
Histogram: 1 0 1 1 0 1 1 1 0 2
Neighs:        28541.9 ave       31178 max       23595 min
Histogram: 1 0 1 0 0 0 1 1 2 2

Total # of neighbors = 228335
Ave neighs/atom = 630.75967
Ave special neighs/atom = 0
Neighbor list builds = 69
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos2

# Delete dir to make sure it is not reused
variable dir delete
# uzz Perturbation
variable dir equal 3
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
variable len0 equal ${lz0}
variable len0 equal 17.5867
variable dlen equal lz-${len0}
variable dlen equal lz-17.5867
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (17.1722 13.1279 17.5867) with tilt (-8.382 0.0305 0.3027)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  362 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*17.5867
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -8.3819999999999996732, deltaxy = 0.08382
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.030499999999999999334, deltaxz = -0.000305
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0.3027000000000000246, deltayz = -0.003027
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no
fix deform_n all deform 100 z delta 0 ${delta} remap v units box flip no
fix deform_n all deform 100 z delta 0 -0.175867 remap v units box flip no
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 3 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg3.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg3.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg3 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg3 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg3 all custom/gz 100 dump/neg_deform3.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 130.5 | 131.4 | 132.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   290.39093     -37311.354     -1019.8392      3964.6564    
       100   293.3941      -37312.162      12892.136      3963.8635    
       200   329.39327     -37339.172     -10421.047      3963.0705    
       300   320.85072     -37312.518     -1868.6806      3962.2776    
       400   286.309       -37274.899      445.96257      3961.4847    
       500   302.78197     -37321.013     -1229.2609      3960.6917    
       600   306.85681     -37347.197      9050.2721      3959.8988    
       700   301.05537     -37342.194      3907.698       3959.1059    
       800   299.76032     -37315.388      6277.2708      3958.3129    
       900   310.40812     -37312.075     -366.54418      3957.52      
      1000   300.65744     -37311.294     -4593.3234      3956.7271    
      1100   281.35771     -37307.671     -12932.603      3955.9341    
      1200   300.33452     -37334.486     -6338.5003      3955.1412    
      1300   313.3963      -37320.803     -706.65728      3954.3483    
      1400   321.62994     -37306.794      2208.3458      3953.5553    
      1500   315.01802     -37319.012      6768.8343      3952.7624    
      1600   297.34595     -37319.21       41.292939      3951.9695    
      1700   305.99128     -37333.257      7322.9244      3951.1766    
      1800   300.33051     -37323.864      5424.0569      3950.3836    
      1900   298.82584     -37319.227     -2864.8783      3949.5907    
      2000   300.42117     -37321.105     -3537.3284      3948.7978    
      2100   290.87685     -37305.289     -678.12528      3948.0048    
      2200   299.76687     -37311.925      3063.418       3947.2119    
      2300   286.00432     -37297.186      8246.1961      3946.419     
      2400   312.92331     -37336.231      2317.4722      3945.626     
      2500   290.4366      -37335.442     -11393.785      3944.8331    
      2600   291.01906     -37344.025     -9245.7605      3944.0402    
      2700   298.26458     -37333.375     -7508.7109      3943.2472    
      2800   309.93593     -37314.607      10076.945      3942.4543    
      2900   313.39651     -37314.095     -5368.2019      3941.6614    
      3000   294.0487      -37305.205     -7137.4722      3940.8684    
      3100   289.13139     -37314.085     -7088.7639      3940.0755    
      3200   276.71833     -37326.83       7080.5054      3939.2826    
      3300   272.06264     -37336.3       -3654.7453      3938.4897    
      3400   298.49166     -37339.356      6528.8815      3937.6967    
      3500   299.94085     -37315.287      12738.326      3936.9038    
      3600   291.85011     -37305.341      5004.1283      3936.1109    
      3700   298.30088     -37321.099     -1414.5103      3935.3179    
      3800   291.87771     -37328.338     -839.1833       3934.525     
      3900   294.84291     -37336.25       13969.121      3933.7321    
      4000   294.88509     -37311.29       13740.554      3932.9391    
      4100   310.03754     -37302.858     -2257.4236      3932.1462    
      4200   312.04841     -37303.142     -7441.5576      3931.3533    
      4300   295.25804     -37316.334      6857.4675      3930.5603    
      4400   288.81753     -37312.357     -6735.3523      3929.7674    
      4500   298.12614     -37322.635      7577.494       3928.9745    
      4600   299.87674     -37325.718     -1183.9818      3928.1815    
      4700   310.37005     -37339.783      1871.6981      3927.3886    
      4800   288.50009     -37319.793      318.4163       3926.5957    
      4900   303.50413     -37326.878      2188.1029      3925.8028    
      5000   307.4256      -37318.893      6850.9679      3925.0098    
Loop time of 204.564 on 16 procs for 5000 steps with 362 atoms

Performance: 1.056 ns/day, 22.729 hours/ns, 24.442 timesteps/s, 8.848 katom-step/s
98.8% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 125.26     | 156.7      | 182.22     | 186.1 | 76.60
Bond    | 0.012023   | 0.013232   | 0.014706   |   0.7 |  0.01
Neigh   | 1.3426     | 1.7068     | 1.9781     |  20.6 |  0.83
Comm    | 1.3275     | 26.874     | 58.323     | 449.2 | 13.14
Output  | 0.01471    | 0.035876   | 0.079431   |  12.1 |  0.02
Modify  | 18.85      | 19.117     | 19.495     |   6.4 |  9.35
Other   |            | 0.1183     |            |       |  0.06

Nlocal:          45.25 ave          51 max          41 min
Histogram: 2 1 0 0 1 1 1 0 1 1
Nghost:        3345.75 ave        3412 max        3270 min
Histogram: 1 1 0 0 1 2 1 0 0 2
Neighs:          29131 ave       32419 max       26519 min
Histogram: 2 1 0 0 1 1 1 1 0 1

Total # of neighbors = 233048
Ave neighs/atom = 643.77901
Ave special neighs/atom = 0
Neighbor list builds = 64
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg3

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (17.1722 13.1279 17.5867) with tilt (-8.382 0.0305 0.3027)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  362 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*17.5867
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box
fix deform_p all deform 100 z delta 0 ${delta} remap v units box
fix deform_p all deform 100 z delta 0 0.175867 remap v units box
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 3 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos3.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos3.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos3 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos3 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos3 all custom/gz 100 dump/pos_deform3.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 130.5 | 131.4 | 132.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   290.39093     -37311.354     -1019.8392      3964.6564    
       100   293.38426     -37312.17       12888.333      3965.4493    
       200   329.09302     -37339.226     -11118.844      3966.2422    
       300   322.01699     -37311.534     -1953.8598      3967.0352    
       400   286.31124     -37271.639      90.258639      3967.8281    
       500   303.69827     -37320.688     -93.487114      3968.621     
       600   308.55469     -37347.005      10406.142      3969.414     
       700   303.98383     -37343.992      4311.3439      3970.2069    
       800   296.06529     -37310.032      8005.1154      3970.9998    
       900   313.33948     -37311.951     -2227.6858      3971.7928    
      1000   301.38818     -37309.314     -8993.7222      3972.5857    
      1100   283.79401     -37306.197     -20262.332      3973.3786    
      1200   298.0487      -37338.2       -5149.7396      3974.1716    
      1300   291.91439     -37328         -1264.1711      3974.9645    
      1400   315.81006     -37324.433     -1486.9964      3975.7574    
      1500   301.4946      -37301.375      2683.7238      3976.5504    
      1600   289.83044     -37304.189      6575.913       3977.3433    
      1700   309.5134      -37345.186      654.80608      3978.1362    
      1800   281.51662     -37328.52       10572.095      3978.9291    
      1900   293.24135     -37337.3       -3283.1321      3979.7221    
      2000   310.04563     -37324.306      994.374        3980.515     
      2100   301.51096     -37302.015      737.89663      3981.3079    
      2200   307.32286     -37308.82      -7120.2847      3982.1009    
      2300   286.66323     -37306.886      5406.5236      3982.8938    
      2400   291.03837     -37339.984      4680.3082      3983.6867    
      2500   287.86        -37336.741     -4082.9171      3984.4797    
      2600   308.26689     -37335.757      6702.6998      3985.2726    
      2700   295.9449      -37311.475     -11297.322      3986.0655    
      2800   288.61471     -37304.716     -9820.7072      3986.8585    
      2900   301.03591     -37311.792     -7805.1918      3987.6514    
      3000   318.00979     -37321.419     -4716.2721      3988.4443    
      3100   329.53668     -37317.936     -2846.9527      3989.2373    
      3200   309.98235     -37303.006      5008.5113      3990.0302    
      3300   303.70782     -37331.8        234.21562      3990.8231    
      3400   302.56055     -37337.184     -3550.3359      3991.616     
      3500   303.65204     -37328.614     -7199.7843      3992.409     
      3600   315.78473     -37318.016     -6073.0211      3993.2019    
      3700   327.44749     -37305.546     -7489.3965      3993.9948    
      3800   309.34034     -37287.529     -9799.392       3994.7878    
      3900   303.35019     -37326.863     -4259.6881      3995.5807    
      4000   286.94205     -37317.773      3415.5075      3996.3736    
      4100   296.17104     -37315.611      3179.2475      3997.1666    
      4200   318.6348      -37319.422      3606.2409      3997.9595    
      4300   325.75552     -37322.044      1539.5718      3998.7524    
      4400   293.1915      -37317.407      6352.6214      3999.5454    
      4500   291.396       -37336.138     -5503.7005      4000.3383    
      4600   304.22578     -37338.894     -3439.6331      4001.1312    
      4700   288.01689     -37307.118      2403.6564      4001.9242    
      4800   306.1583      -37309.942     -3956.7972      4002.7171    
      4900   317.56276     -37318.313     -4043.78        4003.51      
      5000   309.00103     -37317.533     -9402.1549      4004.3029    
Loop time of 202.254 on 16 procs for 5000 steps with 362 atoms

Performance: 1.068 ns/day, 22.473 hours/ns, 24.721 timesteps/s, 8.949 katom-step/s
98.8% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 123.38     | 156.27     | 179.72     | 188.6 | 77.27
Bond    | 0.011813   | 0.013046   | 0.014105   |   0.7 |  0.01
Neigh   | 1.5174     | 1.922      | 2.1928     |  21.8 |  0.95
Comm    | 1.4143     | 24.88      | 57.786     | 472.5 | 12.30
Output  | 0.014684   | 0.0365     | 0.080966   |  12.3 |  0.02
Modify  | 18.735     | 19.008     | 19.436     |   7.2 |  9.40
Other   |            | 0.12       |            |       |  0.06

Nlocal:          45.25 ave          51 max          41 min
Histogram: 1 0 3 1 0 0 1 0 0 2
Nghost:        3298.88 ave        3356 max        3249 min
Histogram: 2 0 0 1 1 1 1 1 0 1
Neighs:        28567.1 ave       31751 max       26143 min
Histogram: 1 1 2 1 0 0 1 0 0 2

Total # of neighbors = 228537
Ave neighs/atom = 631.31768
Ave special neighs/atom = 0
Neighbor list builds = 72
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos3

# Delete dir to make sure it is not reused
variable dir delete
# uyz Perturbation
variable dir equal 4
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
variable len0 equal ${lx0}
variable len0 equal 17.1722
variable dlen equal 2*(yz-${yz0})
variable dlen equal 2*(yz-0.3027)
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (17.1722 13.1279 17.5867) with tilt (-8.382 0.0305 0.3027)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  362 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*17.1722
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -8.3819999999999996732, deltaxy = 0.08382
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.030499999999999999334, deltaxz = -0.000305
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0.3027000000000000246, deltayz = -0.003027
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no
fix deform_n all deform 100 yz delta ${delta} remap v units box flip no
fix deform_n all deform 100 yz delta -0.171722 remap v units box flip no
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 4 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg4.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg4.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg4 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg4 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg4 all custom/gz 100 dump/neg_deform4.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 130.5 | 131.4 | 132.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   290.39093     -37311.354     -1019.8392      3964.6564    
       100   293.3923      -37312.168      12890.196      3964.6564    
       200   329.25423     -37339.232     -10644.472      3964.6564    
       300   321.30552     -37312.104     -1914.8635      3964.6564    
       400   286.41141     -37273.664      534.20963      3964.6564    
       500   302.93018     -37320.613     -938.29108      3964.6564    
       600   306.45236     -37346.165      8371.3388      3964.6564    
       700   302.1927      -37342.894      3584.796       3964.6564    
       800   299.44115     -37314.551      7393.7471      3964.6564    
       900   311.81818     -37312.514     -1087.7905      3964.6564    
      1000   300.93248     -37311.625     -1565.6979      3964.6564    
      1100   282.13477     -37307.589     -9892.9216      3964.6564    
      1200   297.38884     -37334.927     -3083.896       3964.6564    
      1300   285.62586     -37333.281     -3922.0996      3964.6564    
      1400   288.07663     -37341.476     -1725.3151      3964.6564    
      1500   289.63002     -37319.91      -2392.6434      3964.6564    
      1600   302.75355     -37307.752      1800.1584      3964.6564    
      1700   304.4534      -37305.442     -834.47095      3964.6564    
      1800   292.12085     -37305.385     -1255.3861      3964.6564    
      1900   295.14449     -37339.333      234.18961      3964.6564    
      2000   271.574       -37334.63       3427.9509      3964.6564    
      2100   290.23925     -37335.082     -10767.326      3964.6564    
      2200   268.63936     -37294.169     -4352.5268      3964.6564    
      2300   309.0465      -37318.46      -1430.7527      3964.6564    
      2400   298.22514     -37309.333      151.14782      3964.6564    
      2500   289.87735     -37306.953     -957.24786      3964.6564    
      2600   288.43934     -37330.584     -2572.9154      3964.6564    
      2700   294.80958     -37354.622      841.86097      3964.6564    
      2800   281.99863     -37319.241     -6433.9208      3964.6564    
      2900   305.0222      -37319.32       8201.3924      3964.6564    
      3000   304.31113     -37307.353     -1099.119       3964.6564    
      3100   295.17289     -37298.873     -2581.8528      3964.6564    
      3200   304.50171     -37325.43       2931.7677      3964.6564    
      3300   287.86835     -37341.115     -1110.0704      3964.6564    
      3400   296.0282      -37347.652     -6476.9179      3964.6564    
      3500   292.86073     -37324.246      1129.5937      3964.6564    
      3600   309.5082      -37330.569      3077.5652      3964.6564    
      3700   300.97698     -37319.683     -6276.2202      3964.6564    
      3800   302.0014      -37323.351     -4995.4595      3964.6564    
      3900   295.47011     -37335.439     -816.03488      3964.6564    
      4000   299.45498     -37354.23       2620.3208      3964.6564    
      4100   306.19661     -37389.615     -10051.667      3964.6564    
      4200   275.79403     -37367.884      7725.1317      3964.6564    
      4300   296.85357     -37376.79       1997.8299      3964.6564    
      4400   326.43854     -37381.705     -11232.797      3964.6564    
      4500   296.57007     -37349.128     -2090.2855      3964.6564    
      4600   302.81266     -37369.305      16618.257      3964.6564    
      4700   294.92431     -37371.732      3951.8861      3964.6564    
      4800   283.36639     -37357.752      3435.8969      3964.6564    
      4900   306.98384     -37361.858      4588.8744      3964.6564    
      5000   313.03114     -37350.801      2489.1795      3964.6564    
Loop time of 205.269 on 16 procs for 5000 steps with 362 atoms

Performance: 1.052 ns/day, 22.808 hours/ns, 24.358 timesteps/s, 8.818 katom-step/s
98.8% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 123.2      | 160.08     | 181.68     | 180.6 | 77.98
Bond    | 0.012009   | 0.013367   | 0.014922   |   0.8 |  0.01
Neigh   | 1.5007     | 1.9052     | 2.1431     |  19.1 |  0.93
Comm    | 2.0521     | 23.696     | 60.601     | 469.5 | 11.54
Output  | 0.016313   | 0.044437   | 0.10226    |  14.4 |  0.02
Modify  | 19.181     | 19.412     | 19.817     |   6.1 |  9.46
Other   |            | 0.1223     |            |       |  0.06

Nlocal:          45.25 ave          52 max          41 min
Histogram: 3 0 2 0 0 0 1 0 1 1
Nghost:        3339.62 ave        3364 max        3307 min
Histogram: 1 1 0 0 0 2 1 1 0 2
Neighs:        28815.6 ave       32702 max       26322 min
Histogram: 3 0 2 0 0 0 1 0 1 1

Total # of neighbors = 230525
Ave neighs/atom = 636.80939
Ave special neighs/atom = 0
Neighbor list builds = 70
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg4

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (17.1722 13.1279 17.5867) with tilt (-8.382 0.0305 0.3027)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  362 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*17.1722
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box
fix deform_p all deform 100 yz delta ${delta} remap v units box
fix deform_p all deform 100 yz delta 0.171722 remap v units box
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 4 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos4.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos4.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos4 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos4 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos4 all custom/gz 100 dump/pos_deform4.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 130.6 | 131.5 | 132.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   290.39093     -37311.354     -1019.8392      3964.6564    
       100   293.38609     -37312.163      12890.27       3964.6564    
       200   329.21971     -37339.248     -10861.495      3964.6564    
       300   321.61897     -37311.86      -1917.8704      3964.6564    
       400   286.57793     -37272.743      289.58552      3964.6564    
       500   304.0651      -37321.054     -575.54618      3964.6564    
       600   308.75643     -37347.822      7951.1994      3964.6564    
       700   303.41799     -37344.044      3986.0429      3964.6564    
       800   297.8829      -37312.46       6866.1465      3964.6564    
       900   313.82814     -37314.113     -2036.0004      3964.6564    
      1000   302.41461     -37312.476     -4497.0389      3964.6564    
      1100   280.94106     -37305.554     -10805.407      3964.6564    
      1200   296.39644     -37328.376     -3440.5534      3964.6564    
      1300   304.29542     -37312.135     -427.74692      3964.6564    
      1400   321.35143     -37310.325     -1408.9629      3964.6564    
      1500   308.83184     -37314.124     -2369.3421      3964.6564    
      1600   298.40813     -37325.686      2781.7925      3964.6564    
      1700   300.33681     -37336.527      589.76822      3964.6564    
      1800   289.85713     -37319.979      2991.2063      3964.6564    
      1900   313.95047     -37339.81       2569.7217      3964.6564    
      2000   302.93643     -37328.891     -886.96343      3964.6564    
      2100   290.59884     -37313.212     -13463.016      3964.6564    
      2200   308.00827     -37314.153      1053.0615      3964.6564    
      2300   324.34804     -37305.961     -12471.55       3964.6564    
      2400   295.66397     -37295.003      6492.3998      3964.6564    
      2500   295.28679     -37321.258     -433.81709      3964.6564    
      2600   291.80289     -37324.008     -5257.5818      3964.6564    
      2700   291.46093     -37318.295      4050.0155      3964.6564    
      2800   285.85582     -37292.433      12215.178      3964.6564    
      2900   307.90332     -37285.31       8003.9299      3964.6564    
      3000   309.12627     -37297.783     -642.7729       3964.6564    
      3100   298.68505     -37305.293      7408.0072      3964.6564    
      3200   313.06932     -37333.254     -4348.0988      3964.6564    
      3300   302.07934     -37339.645     -6786.1014      3964.6564    
      3400   288.9511      -37327.407      2569.2249      3964.6564    
      3500   293.05573     -37323.569      7754.1624      3964.6564    
      3600   306.23471     -37330.165     -5913.7783      3964.6564    
      3700   291.41712     -37304.815      1137.8264      3964.6564    
      3800   309.81751     -37310.911      6579.7683      3964.6564    
      3900   326.07602     -37298.505     -10068.725      3964.6564    
      4000   311.22423     -37284.505     -7973.3847      3964.6564    
      4100   308.99627     -37323.049      1639.9845      3964.6564    
      4200   280.25099     -37300.002     -6420.6688      3964.6564    
      4300   287.49849     -37295.249     -902.4888       3964.6564    
      4400   303.86345     -37300.249      4169.4189      3964.6564    
      4500   322.35637     -37317.209     -11185.554      3964.6564    
      4600   301.1512      -37328.858      3537.591       3964.6564    
      4700   284.07931     -37321.692      6459.2155      3964.6564    
      4800   312.27717     -37342.679      5786.2281      3964.6564    
      4900   305.7951      -37313.057     -9797.8152      3964.6564    
      5000   310.3097      -37291.723      13937.144      3964.6564    
Loop time of 204.962 on 16 procs for 5000 steps with 362 atoms

Performance: 1.054 ns/day, 22.774 hours/ns, 24.395 timesteps/s, 8.831 katom-step/s
98.9% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 122.42     | 156.67     | 181.18     | 206.0 | 76.44
Bond    | 0.01195    | 0.01329    | 0.01479    |   0.8 |  0.01
Neigh   | 1.5132     | 1.9134     | 2.1744     |  21.4 |  0.93
Comm    | 2.1491     | 26.72      | 61.003     | 499.0 | 13.04
Output  | 0.015959   | 0.043419   | 0.099687   |  14.2 |  0.02
Modify  | 19.222     | 19.48      | 19.884     |   6.8 |  9.50
Other   |            | 0.1233     |            |       |  0.06

Nlocal:          45.25 ave          50 max          40 min
Histogram: 2 0 0 1 0 1 1 0 0 3
Nghost:           3348 ave        3360 max        3336 min
Histogram: 1 1 1 1 0 0 0 2 1 1
Neighs:        28830.9 ave       31443 max       25688 min
Histogram: 2 0 0 1 0 1 1 0 0 3

Total # of neighbors = 230647
Ave neighs/atom = 637.14641
Ave special neighs/atom = 0
Neighbor list builds = 71
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos4

# Delete dir to make sure it is not reused
variable dir delete
# uxz Perturbation
variable dir equal 5
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
variable len0 equal ${ly0}
variable len0 equal 13.1279
variable dlen equal 2*(xz-${xz0})
variable dlen equal 2*(xz-0.0305)
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (17.1722 13.1279 17.5867) with tilt (-8.382 0.0305 0.3027)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  362 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*13.1279
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -8.3819999999999996732, deltaxy = 0.08382
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.030499999999999999334, deltaxz = -0.000305
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0.3027000000000000246, deltayz = -0.003027
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no
fix deform_n all deform 100 xz delta ${delta} remap v units box flip no
fix deform_n all deform 100 xz delta -0.131279 remap v units box flip no
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 5 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg5.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg5.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg5 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg5 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg5 all custom/gz 100 dump/neg_deform5.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 130.5 | 131.4 | 132.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   290.39093     -37311.354     -1019.8392      3964.6564    
       100   293.38684     -37312.164      12890.241      3964.6564    
       200   329.20215     -37339.183     -10714.606      3964.6564    
       300   321.26936     -37311.799     -1948.5756      3964.6564    
       400   286.06677     -37273.214     -31.093264      3964.6564    
       500   303.0391      -37320.875     -619.1822       3964.6564    
       600   307.98616     -37347.957      7419.7484      3964.6564    
       700   303.12995     -37344.421      5158.3233      3964.6564    
       800   297.26165     -37312.513      8418.611       3964.6564    
       900   314.28996     -37314.685     -1614.251       3964.6564    
      1000   304.68863     -37315.073     -9241.94        3964.6564    
      1100   276.41344     -37301.413     -13370.13       3964.6564    
      1200   290.76799     -37326.03      -4047.8693      3964.6564    
      1300   299.99212     -37320.467     -1830.0988      3964.6564    
      1400   324.84316     -37322.227      2517.9701      3964.6564    
      1500   299.03661     -37300.965     -3942.3226      3964.6564    
      1600   298.28901     -37319.465      11150.517      3964.6564    
      1700   294.9353      -37340.332      360.25601      3964.6564    
      1800   262.45686     -37310.894     -34.461382      3964.6564    
      1900   326.01386     -37335.299      2716.6974      3964.6564    
      2000   308.59716     -37312.167     -1855.1976      3964.6564    
      2100   305.01655     -37326.459     -6868.5118      3964.6564    
      2200   274.61345     -37310.321      603.82141      3964.6564    
      2300   290.64707     -37318.117      4422.6181      3964.6564    
      2400   327.81841     -37319.754      5419.4807      3964.6564    
      2500   311.67671     -37309.049      195.14815      3964.6564    
      2600   310.58382     -37326.698     -2104.5447      3964.6564    
      2700   298.96109     -37323.765      1606.0889      3964.6564    
      2800   296.94904     -37321.735      3816.1321      3964.6564    
      2900   308.95192     -37315.672     -7982.9539      3964.6564    
      3000   330.19454     -37303.518     -2050.8379      3964.6564    
      3100   308.25194     -37296.172      4096.7839      3964.6564    
      3200   315.78383     -37329.513     -4365.2329      3964.6564    
      3300   287.1499      -37314.788      1276.9279      3964.6564    
      3400   303.70629     -37334.865     -391.05769      3964.6564    
      3500   305.90422     -37326.349      3625.8479      3964.6564    
      3600   308.85482     -37291.776      4993.955       3964.6564    
      3700   325.81914     -37297.363      9713.95        3964.6564    
      3800   313.626       -37307.427      2303.3351      3964.6564    
      3900   284.01474     -37295.479     -1001.4828      3964.6564    
      4000   293.47176     -37316.935     -7776.8736      3964.6564    
      4100   288.56823     -37317.695     -2175.7469      3964.6564    
      4200   291.39464     -37330.735      18339.197      3964.6564    
      4300   288.7864      -37324.357      3828.7443      3964.6564    
      4400   308.15582     -37315.187      13768.266      3964.6564    
      4500   324.22209     -37321.984      4269.5424      3964.6564    
      4600   293.682       -37307.78       11587.872      3964.6564    
      4700   279.26249     -37314.304     -12355.919      3964.6564    
      4800   288.2277      -37321.397     -12246.531      3964.6564    
      4900   294.14688     -37318.333     -7255.7783      3964.6564    
      5000   299.14505     -37312.477      2575.7238      3964.6564    
Loop time of 205.072 on 16 procs for 5000 steps with 362 atoms

Performance: 1.053 ns/day, 22.786 hours/ns, 24.382 timesteps/s, 8.826 katom-step/s
98.9% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 122.96     | 157.42     | 181.24     | 204.5 | 76.76
Bond    | 0.011759   | 0.013059   | 0.014551   |   0.8 |  0.01
Neigh   | 1.451      | 1.8319     | 2.0749     |  20.9 |  0.89
Comm    | 2.3913     | 26.244     | 60.738     | 501.1 | 12.80
Output  | 0.01572    | 0.04428    | 0.10277    |  14.7 |  0.02
Modify  | 19.161     | 19.4       | 19.78      |   6.5 |  9.46
Other   |            | 0.1207     |            |       |  0.06

Nlocal:          45.25 ave          50 max          38 min
Histogram: 1 0 1 0 1 0 0 3 0 2
Nghost:        3318.25 ave        3339 max        3297 min
Histogram: 1 0 2 1 1 0 0 0 2 1
Neighs:          28862 ave       31538 max       24488 min
Histogram: 1 0 1 0 1 0 0 3 0 2

Total # of neighbors = 230896
Ave neighs/atom = 637.83425
Ave special neighs/atom = 0
Neighbor list builds = 68
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg5

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (17.1722 13.1279 17.5867) with tilt (-8.382 0.0305 0.3027)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  362 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*13.1279
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box
fix deform_p all deform 100 xz delta ${delta} remap v units box
fix deform_p all deform 100 xz delta 0.131279 remap v units box
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 5 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos5.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos5.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos5 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos5 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos5 all custom/gz 100 dump/pos_deform5.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 130.6 | 131.5 | 132.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   290.39093     -37311.354     -1019.8392      3964.6564    
       100   293.39155     -37312.168      12890.219      3964.6564    
       200   329.28357     -37339.266     -10797.426      3964.6564    
       300   321.61319     -37312.13      -1874.0432      3964.6564    
       400   286.87277     -37273.239      894.03213      3964.6564    
       500   304.04523     -37320.758     -1004.1788      3964.6564    
       600   307.39671     -37346.398      8799.1828      3964.6564    
       700   303.12884     -37343.145      3476.8619      3964.6564    
       800   300.25285     -37315.034      6615.2866      3964.6564    
       900   309.40704     -37309.398     -841.10234      3964.6564    
      1000   306.11361     -37315.843     -9165.2493      3964.6564    
      1100   280.37493     -37305.411     -12025.8        3964.6564    
      1200   297.57139     -37332.335     -4895.4009      3964.6564    
      1300   298.81832     -37318.227     -7422.7555      3964.6564    
      1400   321.23802     -37315.609     -1465.8501      3964.6564    
      1500   309.56371     -37311.983     -1246.3658      3964.6564    
      1600   282.2421      -37304.596     -767.50305      3964.6564    
      1700   298.55299     -37332.783      6932.2277      3964.6564    
      1800   285.12853     -37319.969      2253.4831      3964.6564    
      1900   320.15304     -37334.262      1466.174       3964.6564    
      2000   310.72517     -37312.649      2566.8298      3964.6564    
      2100   305.68591     -37313.313      1152.6811      3964.6564    
      2200   286.81997     -37319.862      3284.1743      3964.6564    
      2300   303.43772     -37343.963      5471.6004      3964.6564    
      2400   296.96176     -37325.065      2014.9337      3964.6564    
      2500   306.03784     -37299.221      3357.462       3964.6564    
      2600   303.96677     -37292.221      2226.3727      3964.6564    
      2700   311.35055     -37320.143      3031.6106      3964.6564    
      2800   290.72184     -37323.192     -3501.0258      3964.6564    
      2900   282.92096     -37319.264     -326.08319      3964.6564    
      3000   283.30327     -37313.738     -10039.204      3964.6564    
      3100   302.44264     -37317.863      1581.5255      3964.6564    
      3200   311.64705     -37318.692      3279.303       3964.6564    
      3300   301.87993     -37316.236     -5574.2318      3964.6564    
      3400   283.76603     -37307.066     -3347.1121      3964.6564    
      3500   296.34105     -37316.573      10488.51       3964.6564    
      3600   308.06346     -37322.524     -7146.7532      3964.6564    
      3700   302.93344     -37320.879     -5058.3244      3964.6564    
      3800   293.94073     -37328.992      2864.3164      3964.6564    
      3900   271.25927     -37322.659      4357.8279      3964.6564    
      4000   299.31359     -37337.165     -198.91572      3964.6564    
      4100   310.87289     -37315.323      159.09308      3964.6564    
      4200   299.20988     -37302.452     -872.60167      3964.6564    
      4300   286.44343     -37304.076     -2499.4412      3964.6564    
      4400   301.76323     -37335.341      5453.6457      3964.6564    
      4500   268.60554     -37325.774      7548.1385      3964.6564    
      4600   279.10523     -37338.683      7588.5623      3964.6564    
      4700   305.50828     -37327.551     -3800.971       3964.6564    
      4800   308.11364     -37319.774     -7773.0332      3964.6564    
      4900   322.77219     -37334.031      15652.514      3964.6564    
      5000   295.16092     -37312.749      1422.4178      3964.6564    
Loop time of 200.485 on 16 procs for 5000 steps with 362 atoms

Performance: 1.077 ns/day, 22.276 hours/ns, 24.940 timesteps/s, 9.028 katom-step/s
98.8% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 121.2      | 148.17     | 176.67     | 171.9 | 73.91
Bond    | 0.011521   | 0.012659   | 0.013664   |   0.7 |  0.01
Neigh   | 1.3859     | 1.6694     | 1.9459     |  16.7 |  0.83
Comm    | 2.1791     | 30.742     | 57.762     | 377.7 | 15.33
Output  | 0.015072   | 0.041867   | 0.097135   |  14.2 |  0.02
Modify  | 19.427     | 19.724     | 20.001     |   5.0 |  9.84
Other   |            | 0.1204     |            |       |  0.06

Nlocal:          45.25 ave          51 max          42 min
Histogram: 2 2 1 0 0 0 1 1 0 1
Nghost:        3323.88 ave        3342 max        3300 min
Histogram: 1 0 3 0 0 0 0 0 1 3
Neighs:        28835.6 ave       32411 max       26892 min
Histogram: 2 2 1 0 0 0 1 1 0 1

Total # of neighbors = 230685
Ave neighs/atom = 637.25138
Ave special neighs/atom = 0
Neighbor list builds = 65
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos5

# Delete dir to make sure it is not reused
variable dir delete
# uxy Perturbation
variable dir equal 6
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"
variable len0 equal ${lz0}
variable len0 equal 17.5867
variable dlen equal 2*(xy-${xy0})
variable dlen equal 2*(xy--8.382)

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (17.1722 13.1279 17.5867) with tilt (-8.382 0.0305 0.3027)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  362 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*17.5867
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -8.3819999999999996732, deltaxy = 0.08382
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.030499999999999999334, deltaxz = -0.000305
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0.3027000000000000246, deltayz = -0.003027
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no
fix deform_n all deform 100 xy delta ${delta} remap v units box flip no
fix deform_n all deform 100 xy delta -0.175867 remap v units box flip no

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 6 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg6.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg6.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg6 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg6 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg6 all custom/gz 100 dump/neg_deform6.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 130.5 | 131.4 | 132.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   290.39093     -37311.354     -1019.8392      3964.6564    
       100   293.39292     -37312.172      12890.888      3964.6564    
       200   329.28008     -37339.09      -10900.204      3964.6564    
       300   321.67133     -37311.841     -1919.4379      3964.6564    
       400   286.16633     -37273.528      535.71022      3964.6564    
       500   302.5756      -37320.95      -873.87722      3964.6564    
       600   307.82744     -37347.797      7821.6811      3964.6564    
       700   302.64763     -37342.925      3500.8371      3964.6564    
       800   297.51513     -37311.454      7678.8727      3964.6564    
       900   312.40922     -37312.172     -695.91644      3964.6564    
      1000   305.81191     -37315.414     -540.49452      3964.6564    
      1100   283.84823     -37311.134     -11240.487      3964.6564    
      1200   289.2067      -37327.838     -2983.6185      3964.6564    
      1300   293.33272     -37320.102     -2968.43        3964.6564    
      1400   324.61023     -37316.635      1355.6248      3964.6564    
      1500   305.27209     -37294.969      5494.114       3964.6564    
      1600   310.67664     -37318.257      10823.834      3964.6564    
      1700   292.8659      -37328.123     -45.07587       3964.6564    
      1800   284.79523     -37320.859      2402.4281      3964.6564    
      1900   304.25828     -37333.11      -6172.0992      3964.6564    
      2000   306.77997     -37329.645     -508.23278      3964.6564    
      2100   312.79267     -37321.288      1789.6848      3964.6564    
      2200   297.9897      -37298.486      9405.133       3964.6564    
      2300   325.01092     -37317.237      11078.106      3964.6564    
      2400   303.24598     -37315.373      11748.726      3964.6564    
      2500   294.8456      -37327.676      6556.0065      3964.6564    
      2600   283.04139     -37322.002     -2804.9395      3964.6564    
      2700   292.6163      -37326.467     -602.38913      3964.6564    
      2800   309.54069     -37309.056      2350.2954      3964.6564    
      2900   322.0546      -37313.744      2192.2653      3964.6564    
      3000   297.85125     -37298.949      3012.0286      3964.6564    
      3100   292.2393      -37317.936     -3308.267       3964.6564    
      3200   288.27274     -37333.132      279.00186      3964.6564    
      3300   288.75885     -37342.627     -15375.58       3964.6564    
      3400   271.25882     -37323.488     -8119.4971      3964.6564    
      3500   283.54278     -37302.599     -2847.2729      3964.6564    
      3600   293.30699     -37291.781     -1193.2174      3964.6564    
      3700   297.15788     -37291.538      2467.5539      3964.6564    
      3800   280.59504     -37286.896      4510.912       3964.6564    
      3900   292.14872     -37325.226      13666.362      3964.6564    
      4000   298.53673     -37339.793      8642.3282      3964.6564    
      4100   282.70229     -37304.405     -7770.9177      3964.6564    
      4200   325.23738     -37316.781     -2620.0826      3964.6564    
      4300   294.49533     -37290.975      2435.8427      3964.6564    
      4400   318.16384     -37332.53       1518.7354      3964.6564    
      4500   290.68717     -37326.034      4255.4465      3964.6564    
      4600   289.10332     -37323.691      2611.1357      3964.6564    
      4700   304.18906     -37319.677     -2265.4254      3964.6564    
      4800   316.40251     -37328.213     -5361.7573      3964.6564    
      4900   302.9733      -37315.504     -2329.2421      3964.6564    
      5000   298.91348     -37320.57       3395.3895      3964.6564    
Loop time of 192.643 on 16 procs for 5000 steps with 362 atoms

Performance: 1.121 ns/day, 21.405 hours/ns, 25.955 timesteps/s, 9.396 katom-step/s
99.0% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 117.6      | 131.84     | 169.69     | 183.4 | 68.44
Bond    | 0.010653   | 0.011721   | 0.012795   |   0.7 |  0.01
Neigh   | 1.5803     | 1.7681     | 2.2682     |  21.0 |  0.92
Comm    | 1.3706     | 39.278     | 53.49      | 336.1 | 20.39
Output  | 0.013948   | 0.040579   | 0.095513   |  14.3 |  0.02
Modify  | 19.079     | 19.587     | 19.794     |   6.5 | 10.17
Other   |            | 0.1143     |            |       |  0.06

Nlocal:          45.25 ave          53 max          39 min
Histogram: 1 0 2 2 0 1 0 0 1 1
Nghost:        3327.75 ave        3390 max        3277 min
Histogram: 1 1 0 1 3 0 0 0 1 1
Neighs:        28824.4 ave       33192 max       25159 min
Histogram: 1 0 2 2 0 1 0 0 1 1

Total # of neighbors = 230595
Ave neighs/atom = 637.00276
Ave special neighs/atom = 0
Neighbor list builds = 75
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg6

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (17.1722 13.1279 17.5867) with tilt (-8.382 0.0305 0.3027)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  362 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*17.5867
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box
fix deform_p all deform 100 xy delta ${delta} remap v units box
fix deform_p all deform 100 xy delta 0.175867 remap v units box

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 6 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos6.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos6.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos6 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos6 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos6 all custom/gz 100 dump/pos_deform6.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 130.6 | 131.5 | 132.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   290.39093     -37311.354     -1019.8392      3964.6564    
       100   293.38562     -37312.159      12889.164      3964.6564    
       200   329.12822     -37339.548     -10784.786      3964.6564    
       300   321.66714     -37312.488     -2134.2228      3964.6564    
       400   286.93425     -37272.71      -13.765492      3964.6564    
       500   303.21551     -37319.002     -99.643463      3964.6564    
       600   307.75956     -37346.553      8695.6472      3964.6564    
       700   302.16456     -37343.18       5192.4803      3964.6564    
       800   299.26526     -37315.526      7928.6391      3964.6564    
       900   313.44288     -37314.911     -2561.6142      3964.6564    
      1000   298.16595     -37308.031     -5406.2295      3964.6564    
      1100   287.42087     -37313.275     -12863.142      3964.6564    
      1200   297.06856     -37332.889     -3768.3511      3964.6564    
      1300   303.86666     -37319.176      1670.9364      3964.6564    
      1400   316.76544     -37304.951     -2756.8838      3964.6564    
      1500   306.31574     -37304.546     -1163.0607      3964.6564    
      1600   307.68986     -37328.964     -2163.0606      3964.6564    
      1700   303.82032     -37338.2        10637.532      3964.6564    
      1800   282.39056     -37315.167      3036.54        3964.6564    
      1900   321.4895      -37318.813     -3611.5062      3964.6564    
      2000   297.18381     -37290.605     -1923.6849      3964.6564    
      2100   307.24974     -37321.208     -2166.0291      3964.6564    
      2200   273.08055     -37304.732     -3424.1023      3964.6564    
      2300   288.2137      -37312.941      3779.1945      3964.6564    
      2400   329.47633     -37317.869      3423.5761      3964.6564    
      2500   314.7869      -37297.311     -3891.1199      3964.6564    
      2600   306.51272     -37309.667     -7616.8382      3964.6564    
      2700   300.64565     -37318.267     -14470.778      3964.6564    
      2800   298.09037     -37335.01       2507.6711      3964.6564    
      2900   309.20331     -37347.872      3823.7004      3964.6564    
      3000   307.09073     -37312.515      521.12359      3964.6564    
      3100   303.69562     -37287.542      3037.4401      3964.6564    
      3200   313.79586     -37315.173     -4701.456       3964.6564    
      3300   294.05684     -37314.521     -4809.4146      3964.6564    
      3400   285.49728     -37314.07       6730.2453      3964.6564    
      3500   289.34243     -37316.906      10059.536      3964.6564    
      3600   312.19785     -37303.625     -4824.0672      3964.6564    
      3700   309.31127     -37299.227      4183.914       3964.6564    
      3800   313.47136     -37323.168      7355.6318      3964.6564    
      3900   280.70222     -37317.793      8083.4775      3964.6564    
      4000   305.7826      -37341.286      8497.5102      3964.6564    
      4100   308.23178     -37334.469     -5796.6717      3964.6564    
      4200   301.06547     -37312.52      -2337.2074      3964.6564    
      4300   305.00837     -37295.464      6558.459       3964.6564    
      4400   325.27355     -37307.755      16239.728      3964.6564    
      4500   308.19941     -37322.469     -1818.3246      3964.6564    
      4600   282.3194      -37315.008     -13728.228      3964.6564    
      4700   296.57325     -37324.502     -15563.189      3964.6564    
      4800   316.51154     -37330.625      2526.4901      3964.6564    
      4900   321.33611     -37318.379      8162.1439      3964.6564    
      5000   311.59558     -37299.716      4481.8032      3964.6564    
Loop time of 187.864 on 16 procs for 5000 steps with 362 atoms

Performance: 1.150 ns/day, 20.874 hours/ns, 26.615 timesteps/s, 9.635 katom-step/s
98.9% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 116.62     | 129.76     | 165.56     | 168.2 | 69.07
Bond    | 0.010901   | 0.011913   | 0.013039   |   0.6 |  0.01
Neigh   | 1.4368     | 1.594      | 1.9985     |  18.3 |  0.85
Comm    | 1.2695     | 37.13      | 50.241     | 314.5 | 19.76
Output  | 0.013874   | 0.041424   | 0.098404   |  14.7 |  0.02
Modify  | 18.798     | 19.21      | 19.379     |   5.4 | 10.23
Other   |            | 0.1166     |            |       |  0.06

Nlocal:          45.25 ave          51 max          41 min
Histogram: 1 2 1 1 0 0 0 0 1 2
Nghost:        3338.62 ave        3393 max        3288 min
Histogram: 1 1 0 2 0 1 1 1 0 1
Neighs:        28833.9 ave       32135 max       26344 min
Histogram: 1 3 0 1 0 0 0 0 2 1

Total # of neighbors = 230671
Ave neighs/atom = 637.21271
Ave special neighs/atom = 0
Neighbor list builds = 69
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos6

# Delete dir to make sure it is not reused
variable dir delete

# Calc and output
# include calc.mod.lmp

Total wall time: 0:40:11
