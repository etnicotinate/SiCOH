LAMMPS (2 Aug 2023 - Update 2)
  using 2 OpenMP thread(s) per MPI task
# Initialization
units           real
dimension       3
boundary        p p p
# boundary        s s s
atom_style      full
timestep        0.5   # fs

# Define MD parameters
variable nevery equal 10                  # sampling interval
variable nrepeat equal 10                 # number of samples
variable nfreq equal ${nevery}*${nrepeat} # length of one average
variable nfreq equal 10*${nrepeat} 
variable nfreq equal 10*10 
variable nthermo equal ${nfreq}           # interval for thermo output
variable nthermo equal 100           
# 1 ps : 1e3 fs / 0.5 fs = 2e3 steps
variable nequil equal 50*${nthermo}       # steps of equilibration run 10
variable nequil equal 50*100       
variable nrun equal 50*${nthermo}          # stpes of equilibrated run 10
variable nrun equal 50*100          
variable temp equal 300.0                # temperature of initial sample
variable tdamp equal 50.0                 # time constant for thermostat
variable seed equal 123456                # seed for thermostat
variable ufac equal 1.01325e-4         # pressure unit conversion, from atm to Gpa
variable up equal 0.01                  # the deformation magnitude 0.1
variable FF string "SiOCHN_2018.ff C H O Si"          # force field args for pair_coeff
# pair_coeff * * CHONSSi.ff C H O Si
# pair_coeff * * CHOSiNa.ff C H O Si
# pair_coeff * * SiOCHN_2018.ff C H O Si
# pair_coeff * * PDMSDecomp.ff C H O Si
# pair_coeff * * CHONSi.ff C H O Si
# pair_coeff * * CHOFe.ff O Si

# Read the initial sctructure
# box tilt large
variable structure string 333U-50C-48_eq

read_data       ${structure}.data
read_data       333U-50C-48_eq.data
Reading data file ...
  triclinic box = (0 0 0) to (16.7222 13.589 17.3161) with tilt (-7.3464 -0.3071 -0.018)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  reading atoms ...
  386 atoms
  reading velocities ...
  386 velocities
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.001 seconds
  read_data CPU = 0.008 seconds

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400

# # Energy minimization
# print "*****Minimization starts.*****"
# minimize 1.0e-6 1.0e-6 100 1000
# min_style cg
# # Save the optimized structure
# write_data ${structure}_opt.data
# velocity        all create ${temp} ${seed} dist gaussian

# # Equilibration
# include ff.mod.lmp
# if "$(is_defined(fix,avgp))" then "unfix avgp"
# if "$(is_defined(fix,avgl))" then "unfix avgl"
# thermo_style custom step temp pe press density vol
# run ${nequil}
# # Save the equilibrated structure
# write_data ${structure}_eq.data

# use tmp to save initial length and tilt
variable tmp equal lx
variable lx0 equal ${tmp}
variable lx0 equal 16.7222
variable tmp equal ly
variable ly0 equal ${tmp}
variable ly0 equal 13.589
variable tmp equal lz
variable lz0 equal ${tmp}
variable lz0 equal 17.3161

variable tmp equal yz
variable yz0 equal ${tmp}
variable yz0 equal -0.018
variable tmp equal xz
variable xz0 equal ${tmp}
variable xz0 equal -0.3071
variable tmp equal xy
variable xy0 equal ${tmp}
variable xy0 equal -7.3464

# Write restart
write_restart equil.res
System init for write_restart ...
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none

# dir: direction
# uxx Perturbation
variable dir equal 1
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
variable len0 equal ${lx0}
variable len0 equal 16.7222
variable dlen equal lx-${len0}
variable dlen equal lx-16.7222
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.7222 13.589 17.3161) with tilt (-7.3464 -0.3071 -0.018)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  386 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.001 seconds
  read_restart CPU = 0.004 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*16.7222
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.3464000000000000412, deltaxy = 0.073464
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = -0.3070999999999999841, deltaxz = 0.003071
print "yz = $(yz), deltayz = ${deltayz}"
yz = -0.01799999999999999864, deltayz = 0.00018
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.167222 xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.167222 xy delta 0.073464 xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.167222 xy delta 0.073464 xz delta 0.003071 remap v units box flip no
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 1 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg1.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg1.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg1 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg1 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg1 all custom/gz 100 dump/neg_deform1.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Your simulation uses code contributions which should be cited:

- pair reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 number =  {4--5},
 pages =   {245--259}
}

- fix qeq/reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 pages =   {245--259}
}

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 134 | 135.8 | 137.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   308.49374     -39631.172      1364.8398      3934.8755    
       100   315.65912     -39638.901      4679.6175      3934.0885    
       200   289.98607     -39630.074      7989.3975      3933.3016    
       300   271.82573     -39634.041     -1502.8941      3932.5146    
       400   297.30121     -39660.382      3007.6911      3931.7276    
       500   313.4692      -39637.998     -3022.399       3930.9406    
       600   293.2377      -39609.158      3442.3342      3930.1537    
       700   304.91071     -39635.387      8516.6409      3929.3667    
       800   303.0561      -39647.23       8949.5757      3928.5797    
       900   273.41822     -39629.926     -3697.7593      3927.7927    
      1000   291.61117     -39647.865      6948.318       3927.0058    
      1100   298.94186     -39625.414     -2200.8416      3926.2188    
      1200   338.35048     -39653.673      5082.397       3925.4318    
      1300   292.1117      -39609.615      5080.2396      3924.6448    
      1400   308.10579     -39655.031      9795.5106      3923.8579    
      1500   310.34166     -39667.022      16112.253      3923.0709    
      1600   297.39114     -39645.887     -7714.1381      3922.2839    
      1700   283.48391     -39615.768     -2237.3896      3921.4969    
      1800   314.20392     -39635.461      10514.529      3920.71      
      1900   284.62591     -39606.063      5301.5624      3919.923     
      2000   278.87489     -39623.569      8701.9308      3919.136     
      2100   292.71976     -39664.981      2318.8731      3918.349     
      2200   280.51968     -39636.589      2787.4218      3917.5621    
      2300   308.23158     -39642.651      9683.5438      3916.7751    
      2400   309.41999     -39642.2       -2297.5494      3915.9881    
      2500   295.53348     -39628.676      11919.548      3915.2011    
      2600   289.0607      -39627.95       1272.1076      3914.4142    
      2700   306.11335     -39667.658      5397.4532      3913.6272    
      2800   286.14696     -39656.638      3392.6876      3912.8402    
      2900   284.66311     -39634.716      11663.353      3912.0532    
      3000   305.98211     -39629.554      16821.786      3911.2663    
      3100   304.86206     -39624.441      10309.648      3910.4793    
      3200   295.07202     -39624.074      6208.9989      3909.6923    
      3300   273.64537     -39627.997      4954.5327      3908.9053    
      3400   296.84989     -39662.689      16270.417      3908.1184    
      3500   293.81775     -39620.984      10478.493      3907.3314    
      3600   305.77654     -39610.064      9791.4029      3906.5444    
      3700   311.9687      -39630.535      12288.902      3905.7574    
      3800   277.25182     -39620.264      2619.0571      3904.9705    
      3900   291.11859     -39642.083      786.72514      3904.1835    
      4000   301.34466     -39647.289      15679.459      3903.3965    
      4100   298.64057     -39603.602      19348.62       3902.6095    
      4200   307.24281     -39607.74       17605.079      3901.8226    
      4300   292.44598     -39608.169      12131.605      3901.0356    
      4400   305.0181      -39640.923     -3607.9856      3900.2486    
      4500   296.57687     -39645.314      79.09601       3899.4616    
      4600   308.17193     -39658.083      14778.432      3898.6747    
      4700   305.04502     -39626.828      3108.4972      3897.8877    
      4800   294.54841     -39589.437      10875.327      3897.1007    
      4900   314.19432     -39623.088      19631.188      3896.3137    
      5000   309.15599     -39648.241     -3069.6921      3895.5268    
Loop time of 226.622 on 16 procs for 5000 steps with 386 atoms

Performance: 0.953 ns/day, 25.180 hours/ns, 22.063 timesteps/s, 8.516 katom-step/s
99.0% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 133.22     | 182.24     | 201.51     | 206.9 | 80.42
Bond    | 0.012593   | 0.013553   | 0.014663   |   0.5 |  0.01
Neigh   | 1.5929     | 2.0219     | 2.2175     |  17.5 |  0.89
Comm    | 2.6704     | 21.971     | 71.024     | 596.1 |  9.69
Output  | 0.017367   | 0.045501   | 0.1058     |  14.5 |  0.02
Modify  | 20.023     | 20.196     | 20.653     |   5.7 |  8.91
Other   |            | 0.134      |            |       |  0.06

Nlocal:          48.25 ave          54 max          42 min
Histogram: 1 1 0 1 1 1 0 1 0 2
Nghost:        3470.88 ave        3500 max        3438 min
Histogram: 1 2 0 1 0 0 0 1 0 3
Neighs:        33393.9 ave       37196 max       29248 min
Histogram: 1 1 0 1 1 1 0 1 0 2

Total # of neighbors = 267151
Ave neighs/atom = 692.10104
Ave special neighs/atom = 0
Neighbor list builds = 67
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg1

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.7222 13.589 17.3161) with tilt (-7.3464 -0.3071 -0.018)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  386 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*16.7222
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.167222 xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.167222 xy delta -0.073464 xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.167222 xy delta -0.073464 xz delta -0.003071 remap v units box
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 1 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos1.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos1.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos1 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos1 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos1 all custom/gz 100 dump/pos_deform1.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 134.1 | 135.9 | 137.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   308.49374     -39631.172      1364.8398      3934.8755    
       100   315.66605     -39638.901      4678.6787      3935.6625    
       200   289.60676     -39629.43       7911.3803      3936.4495    
       300   273.01798     -39635.517     -1811.3946      3937.2364    
       400   297.97977     -39660.649     -94.585318      3938.0234    
       500   316.45581     -39640.68      -5011.3617      3938.8104    
       600   293.73432     -39609.532      2445.2857      3939.5974    
       700   306.75102     -39636.495      2562.0431      3940.3843    
       800   302.7467      -39646.525      6390.3262      3941.1713    
       900   263.81961     -39620.666      1330.8552      3941.9583    
      1000   288.30242     -39649.27       2641.0257      3942.7453    
      1100   317.58278     -39651.248     -67.83023       3943.5322    
      1200   302.28342     -39616.111      15027.756      3944.3192    
      1300   299.68529     -39610.27       4759.922       3945.1062    
      1400   300.00512     -39634.194      9020.3683      3945.8932    
      1500   282.29815     -39643.83       12161.137      3946.6801    
      1600   306.18861     -39665.201     -7379.5608      3947.4671    
      1700   295.6548      -39637.549      1354.1141      3948.2541    
      1800   308.01993     -39638.972      4072.8576      3949.0411    
      1900   294.64202     -39625.049      1560.0771      3949.828     
      2000   298.09833     -39617.474      1733.2239      3950.615     
      2100   312.57606     -39615.569      4512.3517      3951.402     
      2200   328.91837     -39633.027     -4369.6899      3952.189     
      2300   300.81822     -39627.105      921.7422       3952.9759    
      2400   279.60112     -39623.902      3523.9564      3953.7629    
      2500   292.08787     -39640.951      5152.3253      3954.5499    
      2600   306.05766     -39641.336     -11727.723      3955.3369    
      2700   339.45546     -39637.065      9546.7012      3956.1238    
      2800   302.15535     -39600.279      1702.5056      3956.9108    
      2900   318.32804     -39640.186     -3585.7758      3957.6978    
      3000   302.87827     -39639.75       1173.5656      3958.4848    
      3100   295.08469     -39635.253      10785.275      3959.2717    
      3200   312.58545     -39656          7903.8087      3960.0587    
      3300   285.53721     -39617.265      2956.2732      3960.8457    
      3400   300.11469     -39625.625      4369.8651      3961.6327    
      3500   319.4717      -39642.631      3995.64        3962.4196    
      3600   290.49498     -39615.545     -11542.654      3963.2066    
      3700   282.08262     -39645.452     -6394.8536      3963.9936    
      3800   295.29296     -39659.105      5301.581       3964.7806    
      3900   305.88603     -39646.154      2842.6823      3965.5675    
      4000   290.89939     -39616.085     -1292.9486      3966.3545    
      4100   313.29868     -39641.622      1415.4459      3967.1415    
      4200   302.28396     -39631.862      17936.969      3967.9285    
      4300   281.41532     -39641.417     -3468.9404      3968.7154    
      4400   289.15955     -39661.208     -1920.1547      3969.5024    
      4500   290.6462      -39631.268     -521.08529      3970.2894    
      4600   309.44646     -39638.994     -3440.7901      3971.0764    
      4700   303.95656     -39632.325     -265.01784      3971.8633    
      4800   329.23926     -39653.151      485.99153      3972.6503    
      4900   296.51199     -39607.935     -2550.2931      3973.4373    
      5000   309.84314     -39632.289      918.04949      3974.2243    
Loop time of 222.678 on 16 procs for 5000 steps with 386 atoms

Performance: 0.970 ns/day, 24.742 hours/ns, 22.454 timesteps/s, 8.667 katom-step/s
99.0% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 132.59     | 179.8      | 198.28     | 203.1 | 80.74
Bond    | 0.01317    | 0.013599   | 0.014139   |   0.2 |  0.01
Neigh   | 1.591      | 2.0364     | 2.2338     |  17.9 |  0.91
Comm    | 2.2929     | 20.779     | 68.003     | 597.7 |  9.33
Output  | 0.01725    | 0.04528    | 0.10608    |  14.6 |  0.02
Modify  | 19.689     | 19.871     | 20.331     |   5.9 |  8.92
Other   |            | 0.1347     |            |       |  0.06

Nlocal:          48.25 ave          58 max          40 min
Histogram: 1 1 1 1 0 1 1 0 1 1
Nghost:        3420.62 ave        3482 max        3362 min
Histogram: 2 0 0 0 3 0 1 0 0 2
Neighs:        32719.8 ave       39031 max       27345 min
Histogram: 1 1 1 1 0 1 1 0 1 1

Total # of neighbors = 261758
Ave neighs/atom = 678.12953
Ave special neighs/atom = 0
Neighbor list builds = 68
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos1

# Delete dir to make sure it is not reused
variable dir delete
# uyy Perturbation
variable dir equal 2
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
variable len0 equal ${ly0}
variable len0 equal 13.589
variable dlen equal ly-${len0}
variable dlen equal ly-13.589
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.7222 13.589 17.3161) with tilt (-7.3464 -0.3071 -0.018)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  386 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*13.589
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.3464000000000000412, deltaxy = 0.073464
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = -0.3070999999999999841, deltaxz = 0.003071
print "yz = $(yz), deltayz = ${deltayz}"
yz = -0.01799999999999999864, deltayz = 0.00018
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 -0.13589 yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 -0.13589 yz delta 0.00018 remap v units box flip no
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 2 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg2.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg2.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg2 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg2 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg2 all custom/gz 100 dump/neg_deform2.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 134 | 135.8 | 137.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   308.49374     -39631.172      1364.8398      3934.8755    
       100   315.66196     -39638.901      4680.2287      3934.0885    
       200   289.95419     -39629.819      8131.4738      3933.3016    
       300   273.41584     -39635.943     -1358.1612      3932.5146    
       400   298.10074     -39660.947      2356.5346      3931.7276    
       500   315.11947     -39639.59      -3156.1435      3930.9406    
       600   293.7143      -39609.583      4586.9957      3930.1537    
       700   308.50986     -39639.692      6049.0866      3929.3667    
       800   301.44403     -39645.714      7869.2467      3928.5797    
       900   265.69191     -39618.864     -2286.3655      3927.7927    
      1000   297.34131     -39645.209      2739.7823      3927.0058    
      1100   311.33895     -39632.22      -218.48432      3926.2188    
      1200   321.63468     -39637.162      6291.6387      3925.4318    
      1300   280.64724     -39604.694      10327.746      3924.6448    
      1400   290.76733     -39649.511      12602.685      3923.8579    
      1500   287.86483     -39651.877      18762.277      3923.0709    
      1600   307.09221     -39658.331     -5531.3512      3922.2839    
      1700   305.91526     -39649.071      5422.6807      3921.4969    
      1800   307.93342     -39636.541      6754.5262      3920.71      
      1900   296.09323     -39615.949     -1338.2823      3919.923     
      2000   306.91003     -39634.792      7236.9893      3919.136     
      2100   290.50494     -39623.434     -7218.3019      3918.349     
      2200   296.0242      -39627.129     -1342.6623      3917.5621    
      2300   314.76066     -39643.956      3533.2136      3916.7751    
      2400   282.89446     -39604.295      20837.639      3915.9881    
      2500   300.69622     -39628.271      9080.6202      3915.2011    
      2600   304.84356     -39641.549      4405.0874      3914.4142    
      2700   271.10376     -39617.752      10272.331      3913.6272    
      2800   285.07691     -39641.866      3481.539       3912.8402    
      2900   307.41723     -39651.943     -759.53613      3912.0532    
      3000   305.03213     -39612.151      7335.3223      3911.2663    
      3100   304.76079     -39612.543      13706.286      3910.4793    
      3200   305.69274     -39637.77       15242.141      3909.6923    
      3300   291.08878     -39629.264      11454.89       3908.9053    
      3400   279.8733      -39617.509      4692.1001      3908.1184    
      3500   313.15606     -39647.405      21649.796      3907.3314    
      3600   291.76741     -39606.909      15783.637      3906.5444    
      3700   313.01787     -39590.876      19036.168      3905.7574    
      3800   306.13855     -39589.62       12626.254      3904.9705    
      3900   303.14077     -39618.816      24067.392      3904.1835    
      4000   304.92356     -39635.676      7983.1668      3903.3965    
      4100   295.48204     -39634.845     -6732.7489      3902.6095    
      4200   308.5008      -39650.52      -11807.598      3901.8226    
      4300   301.2653      -39622.182      12042.134      3901.0356    
      4400   296.5767      -39588.886      14434.366      3900.2486    
      4500   314.7766      -39615.749      19907.541      3899.4616    
      4600   308.57589     -39646.609      7864.7824      3898.6747    
      4700   294.88471     -39642.319      14261.831      3897.8877    
      4800   294.08452     -39635.646      25195.058      3897.1007    
      4900   301.68245     -39630.07       16047.623      3896.3137    
      5000   318.72198     -39632.563      7897.7829      3895.5268    
Loop time of 226.379 on 16 procs for 5000 steps with 386 atoms

Performance: 0.954 ns/day, 25.153 hours/ns, 22.087 timesteps/s, 8.526 katom-step/s
99.1% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 134.74     | 178.83     | 201.33     | 207.4 | 79.00
Bond    | 0.012914   | 0.013457   | 0.013783   |   0.2 |  0.01
Neigh   | 1.7887     | 2.234      | 2.4959     |  19.3 |  0.99
Comm    | 2.4423     | 24.97      | 69.072     | 555.6 | 11.03
Output  | 0.016639   | 0.043463   | 0.10165    |  14.2 |  0.02
Modify  | 19.906     | 20.151     | 20.618     |   6.5 |  8.90
Other   |            | 0.1356     |            |       |  0.06

Nlocal:          48.25 ave          58 max          42 min
Histogram: 3 0 1 0 1 0 1 1 0 1
Nghost:        3460.62 ave        3534 max        3385 min
Histogram: 1 0 0 2 1 0 3 0 0 1
Neighs:        33425.1 ave       39921 max       29131 min
Histogram: 3 0 1 0 1 0 1 1 0 1

Total # of neighbors = 267401
Ave neighs/atom = 692.7487
Ave special neighs/atom = 0
Neighbor list builds = 75
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg2

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.7222 13.589 17.3161) with tilt (-7.3464 -0.3071 -0.018)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  386 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*13.589
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 ${delta} yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 0.13589 yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 0.13589 yz delta -0.00018 remap v units box
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 2 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos2.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos2.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos2 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos2 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos2 all custom/gz 100 dump/pos_deform2.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 134.1 | 135.9 | 137.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   308.49374     -39631.172      1364.8398      3934.8755    
       100   315.66336     -39638.901      4678.0673      3935.6625    
       200   289.91169     -39630.064      7947.4838      3936.4495    
       300   272.1453      -39634.412     -1085.9383      3937.2364    
       400   295.34709     -39658.017     -114.32391      3938.0234    
       500   315.25533     -39639.994     -5713.2662      3938.8104    
       600   295.64162     -39612.307      1792.7441      3939.5974    
       700   305.83409     -39635.412      4718.3534      3940.3843    
       800   303.08999     -39645.757      2358.9384      3941.1713    
       900   265.50214     -39623.36      -1651.4937      3941.9583    
      1000   280.45475     -39646.584      1382.7251      3942.7453    
      1100   301.69876     -39639.534     -448.15294      3943.5322    
      1200   312.43304     -39629.225      7202.3322      3944.3192    
      1300   294.02828     -39610.626      7542.2115      3945.1062    
      1400   310.64033     -39653.539      9204.7571      3945.8932    
      1500   281.27075     -39643.065      6849.5388      3946.6801    
      1600   302.10942     -39666.748     -6867.5651      3947.4671    
      1700   307.52264     -39627.431      1666.8105      3948.2541    
      1800   312.57854     -39617.236      4351.4841      3949.0411    
      1900   307.07534     -39626.904      4075.3382      3949.828     
      2000   292.36062     -39639.431      389.04009      3950.615     
      2100   289.26907     -39647.828      6590.1105      3951.402     
      2200   299.09451     -39648.187     -13075.965      3952.189     
      2300   315.43257     -39643.216      2594.5771      3952.9759    
      2400   329.75597     -39622.571      9410.1917      3953.7629    
      2500   333.51921     -39608.306     -2075.6041      3954.5499    
      2600   301.92054     -39603.491     -7169.0978      3955.3369    
      2700   312.38852     -39635.105      2584.2856      3956.1238    
      2800   286.80863     -39629.841     -1576.309       3956.9108    
      2900   286.32617     -39637.601     -4896.0899      3957.6978    
      3000   296.47432     -39653.41       6984.697       3958.4848    
      3100   300.7334      -39659.996      17489.079      3959.2717    
      3200   299.0986      -39645.198     -3914.533       3960.0587    
      3300   299.26999     -39618.519      16907.716      3960.8457    
      3400   329.71622     -39638.56       1257.4653      3961.6327    
      3500   289.34707     -39611.479     -4194.9152      3962.4196    
      3600   275.39168     -39607.066     -14899.704      3963.2066    
      3700   313.21833     -39651.564      6925.53        3963.9936    
      3800   303.6625      -39649.565      11048.509      3964.7806    
      3900   289.78827     -39634.987      11164.806      3965.5675    
      4000   305.82659     -39646.173     -6185.6834      3966.3545    
      4100   316.12585     -39610.931      5016.5048      3967.1415    
      4200   312.11011     -39605.546      4355.063       3967.9285    
      4300   305.21532     -39627.198     -1369.0979      3968.7154    
      4400   299.59281     -39639.55       4751.5258      3969.5024    
      4500   311.84291     -39660.948      2586.6955      3970.2894    
      4600   280.19393     -39631.259      1606.3038      3971.0764    
      4700   299.87314     -39645.765     -4627.3125      3971.8633    
      4800   308.53374     -39628.703     -3995.9816      3972.6503    
      4900   308.32942     -39625.869      5747.2046      3973.4373    
      5000   292.92519     -39626.446      7655.6126      3974.2243    
Loop time of 221.976 on 16 procs for 5000 steps with 386 atoms

Performance: 0.973 ns/day, 24.664 hours/ns, 22.525 timesteps/s, 8.695 katom-step/s
99.0% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 132.29     | 169.7      | 197.71     | 200.3 | 76.45
Bond    | 0.012721   | 0.013355   | 0.013749   |   0.3 |  0.01
Neigh   | 1.6056     | 1.9602     | 2.2675     |  20.3 |  0.88
Comm    | 1.9228     | 29.959     | 67.404     | 477.0 | 13.50
Output  | 0.016712   | 0.043636   | 0.10232    |  14.2 |  0.02
Modify  | 19.844     | 20.164     | 20.521     |   6.4 |  9.08
Other   |            | 0.1326     |            |       |  0.06

Nlocal:          48.25 ave          55 max          41 min
Histogram: 2 0 0 0 1 1 1 2 0 1
Nghost:         3402.5 ave        3443 max        3351 min
Histogram: 1 1 0 0 1 2 0 1 0 2
Neighs:        32762.2 ave       37098 max       28097 min
Histogram: 2 0 0 0 1 1 1 2 0 1

Total # of neighbors = 262098
Ave neighs/atom = 679.01036
Ave special neighs/atom = 0
Neighbor list builds = 69
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos2

# Delete dir to make sure it is not reused
variable dir delete
# uzz Perturbation
variable dir equal 3
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
variable len0 equal ${lz0}
variable len0 equal 17.3161
variable dlen equal lz-${len0}
variable dlen equal lz-17.3161
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.7222 13.589 17.3161) with tilt (-7.3464 -0.3071 -0.018)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  386 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*17.3161
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.3464000000000000412, deltaxy = 0.073464
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = -0.3070999999999999841, deltaxz = 0.003071
print "yz = $(yz), deltayz = ${deltayz}"
yz = -0.01799999999999999864, deltayz = 0.00018
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no
fix deform_n all deform 100 z delta 0 ${delta} remap v units box flip no
fix deform_n all deform 100 z delta 0 -0.173161 remap v units box flip no
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 3 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg3.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg3.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg3 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg3 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg3 all custom/gz 100 dump/neg_deform3.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 134 | 135.8 | 137.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   308.49374     -39631.172      1364.8398      3934.8755    
       100   315.66768     -39638.893      4680.1878      3934.0885    
       200   290.3967      -39630.506      7812.1809      3933.3016    
       300   271.66433     -39633.933     -808.35689      3932.5146    
       400   296.24686     -39658.755      1619.381       3931.7276    
       500   314.1347      -39638.322     -1676.7406      3930.9406    
       600   293.29212     -39608.997      3115.9623      3930.1537    
       700   310.57952     -39641.043      5421.6825      3929.3667    
       800   299.22095     -39644.462      3674.6571      3928.5797    
       900   267.88547     -39625.955     -258.86455      3927.7927    
      1000   300.02477     -39652.171      6642.4242      3927.0058    
      1100   310.06935     -39631.263      815.96135      3926.2188    
      1200   308.5174      -39621.366      12551.121      3925.4318    
      1300   291.90509     -39612.898      11844.959      3924.6448    
      1400   309.35507     -39666.871      21480.013      3923.8579    
      1500   268.99053     -39628.704      22024.927      3923.0709    
      1600   313.82733     -39665.403      1787.4945      3922.2839    
      1700   303.68567     -39641.645      11405.535      3921.4969    
      1800   313.88691     -39637.424      13774.716      3920.71      
      1900   307.83526     -39626.681      2955.2926      3919.923     
      2000   299.59578     -39620.972      1109.11        3919.136     
      2100   284.46255     -39641.613     -5583.8081      3918.349     
      2200   289.59812     -39657.604     -4810.6842      3917.5621    
      2300   312.79282     -39660.262     -814.81537      3916.7751    
      2400   287.05679     -39614.711      16293.474      3915.9881    
      2500   295.33347     -39616.189     -1059.6326      3915.2011    
      2600   298.49138     -39617.126     -2463.8479      3914.4142    
      2700   292.61014     -39618.034      1278.5501      3913.6272    
      2800   307.02309     -39636.564      6232.2069      3912.8402    
      2900   302.31905     -39628.927     -1715.3297      3912.0532    
      3000   284.69411     -39609.212      1420.3288      3911.2663    
      3100   313.36485     -39643.502      3664.0889      3910.4793    
      3200   295.41962     -39626.733     -1896.0915      3909.6923    
      3300   289.10055     -39617.398      11009.56       3908.9053    
      3400   295.69547     -39624.237      10648.376      3908.1184    
      3500   304.71593     -39634.874      2635.0423      3907.3314    
      3600   295.5635      -39630.073      609.83929      3906.5444    
      3700   286.47484     -39638.128      5227.9352      3905.7574    
      3800   294.52623     -39651.421      6300.7956      3904.9705    
      3900   299.27984     -39623.902      10716.519      3904.1835    
      4000   279.76588     -39580.489      8870.2922      3903.3965    
      4100   319.2039      -39637.952      9537.2006      3902.6095    
      4200   297.40478     -39636.4       -677.28692      3901.8226    
      4300   283.43514     -39629.344      6036.2927      3901.0356    
      4400   295.18176     -39640.186     -1867.6184      3900.2486    
      4500   286.27859     -39611.65       5771.753       3899.4616    
      4600   303.32512     -39608.231      13724.448      3898.6747    
      4700   322.57366     -39635.89       10817.691      3897.8877    
      4800   281.15491     -39608.338      20273.296      3897.1007    
      4900   295.21984     -39647.004      16143.991      3896.3137    
      5000   292.0414      -39637.913     -4987.6195      3895.5268    
Loop time of 225.024 on 16 procs for 5000 steps with 386 atoms

Performance: 0.960 ns/day, 25.003 hours/ns, 22.220 timesteps/s, 8.577 katom-step/s
99.0% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 134.38     | 173.91     | 201.2      | 213.9 | 77.28
Bond    | 0.013069   | 0.013401   | 0.013821   |   0.2 |  0.01
Neigh   | 1.5209     | 1.9646     | 2.2486     |  22.3 |  0.87
Comm    | 1.7637     | 29.086     | 68.614     | 523.0 | 12.93
Output  | 0.015236   | 0.036619   | 0.082712   |  12.3 |  0.02
Modify  | 19.594     | 19.887     | 20.356     |   7.2 |  8.84
Other   |            | 0.1282     |            |       |  0.06

Nlocal:          48.25 ave          54 max          43 min
Histogram: 3 0 1 0 0 0 1 0 1 2
Nghost:         3474.5 ave        3530 max        3413 min
Histogram: 1 0 1 1 0 2 1 0 1 1
Neighs:        33408.5 ave       37220 max       29854 min
Histogram: 2 1 1 0 0 0 1 0 1 2

Total # of neighbors = 267268
Ave neighs/atom = 692.40415
Ave special neighs/atom = 0
Neighbor list builds = 68
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg3

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.7222 13.589 17.3161) with tilt (-7.3464 -0.3071 -0.018)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  386 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*17.3161
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box
fix deform_p all deform 100 z delta 0 ${delta} remap v units box
fix deform_p all deform 100 z delta 0 0.173161 remap v units box
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 3 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos3.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos3.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos3 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos3 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos3 all custom/gz 100 dump/pos_deform3.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 134 | 135.8 | 137.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   308.49374     -39631.172      1364.8398      3934.8755    
       100   315.65967     -39638.905      4679.0105      3935.6625    
       200   289.40291     -39629.316      7987.5288      3936.4495    
       300   272.16636     -39634.372     -2101.1851      3937.2364    
       400   297.44569     -39660.473      881.75232      3938.0234    
       500   314.96962     -39639.846     -4369.4638      3938.8104    
       600   293.59072     -39609.666     -279.18064      3939.5974    
       700   306.0479      -39635.363      6786.5637      3940.3843    
       800   299.94812     -39642.265      5544.1279      3941.1713    
       900   270.57883     -39626.515     -1390.1093      3941.9583    
      1000   290.20397     -39654.131      3922.2732      3942.7453    
      1100   295.65659     -39637.003     -111.74802      3943.5322    
      1200   323.31789     -39643.105      14644.137      3944.3192    
      1300   303.32615     -39616.968      3830.9947      3945.1062    
      1400   305.83244     -39640.011      9591.726       3945.8932    
      1500   293.41507     -39659.225      17416.47       3946.6801    
      1600   309.86249     -39681.147     -9431.3889      3947.4671    
      1700   284.7353      -39638.764     -3012.2559      3948.2541    
      1800   295.00991     -39632.636     -362.23557      3949.0411    
      1900   307.53784     -39629.575     -4464.0463      3949.828     
      2000   309.43134     -39615.416     -5469.8506      3950.615     
      2100   298.25678     -39619.332     -490.56106      3951.402     
      2200   288.38262     -39642.219     -13728.451      3952.189     
      2300   283.37776     -39630.337     -5940.0579      3952.9759    
      2400   297.17653     -39633.191      7113.2362      3953.7629    
      2500   313.74109     -39624.687      9749.1309      3954.5499    
      2600   317.83365     -39614.093      2353.4054      3955.3369    
      2700   304.06516     -39619.822      4724.9868      3956.1238    
      2800   278.07568     -39626.513     -3284.0689      3956.9108    
      2900   301.77224     -39648.443      7854.6065      3957.6978    
      3000   295.59394     -39625.548      10232.364      3958.4848    
      3100   299.31833     -39617.579      7426.9874      3959.2717    
      3200   305.78208     -39623.924     -1848.4376      3960.0587    
      3300   312.53997     -39661.066      16450.051      3960.8457    
      3400   271.62357     -39626.871      4536.4446      3961.6327    
      3500   267.25134     -39603.572      8686.9463      3962.4196    
      3600   288.37892     -39615.044     -4933.0941      3963.2066    
      3700   309.27332     -39635.235      9725.5518      3963.9936    
      3800   304.73817     -39634.34      -5229.0099      3964.7806    
      3900   295.95058     -39633.219      8937.0934      3965.5675    
      4000   287.77346     -39633.792     -8962.5778      3966.3545    
      4100   283.69737     -39637.816     -8599.0751      3967.1415    
      4200   305.63931     -39648.348      2577.4741      3967.9285    
      4300   294.41847     -39610.607     -1410.6423      3968.7154    
      4400   295.75649     -39606.734      2356.2014      3969.5024    
      4500   305.37114     -39640.476     -2435.535       3970.2894    
      4600   288.70681     -39649.194      3848.2956      3971.0764    
      4700   296.07543     -39652.312     -443.50717      3971.8633    
      4800   296.12918     -39638.627     -4442.238       3972.6503    
      4900   283.87027     -39614.827      5243.6377      3973.4373    
      5000   301.87375     -39625.622      12058.097      3974.2243    
Loop time of 220.887 on 16 procs for 5000 steps with 386 atoms

Performance: 0.978 ns/day, 24.543 hours/ns, 22.636 timesteps/s, 8.737 katom-step/s
99.1% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 132.01     | 167.08     | 197.53     | 213.7 | 75.64
Bond    | 0.012845   | 0.01337    | 0.013756   |   0.3 |  0.01
Neigh   | 1.5603     | 1.9485     | 2.2938     |  23.4 |  0.88
Comm    | 1.7758     | 32.249     | 67.339     | 486.4 | 14.60
Output  | 0.015557   | 0.038375   | 0.087734   |  12.8 |  0.02
Modify  | 19.064     | 19.433     | 19.823     |   7.6 |  8.80
Other   |            | 0.129      |            |       |  0.06

Nlocal:          48.25 ave          54 max          41 min
Histogram: 1 0 0 1 1 0 3 0 1 1
Nghost:         3410.5 ave        3464 max        3346 min
Histogram: 1 1 0 0 1 2 0 1 0 2
Neighs:        32718.5 ave       36506 max       28031 min
Histogram: 1 0 1 0 1 0 3 0 1 1

Total # of neighbors = 261748
Ave neighs/atom = 678.10363
Ave special neighs/atom = 0
Neighbor list builds = 70
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos3

# Delete dir to make sure it is not reused
variable dir delete
# uyz Perturbation
variable dir equal 4
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
variable len0 equal ${lx0}
variable len0 equal 16.7222
variable dlen equal 2*(yz-${yz0})
variable dlen equal 2*(yz--0.018)
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.7222 13.589 17.3161) with tilt (-7.3464 -0.3071 -0.018)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  386 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*16.7222
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.3464000000000000412, deltaxy = 0.073464
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = -0.3070999999999999841, deltaxz = 0.003071
print "yz = $(yz), deltayz = ${deltayz}"
yz = -0.01799999999999999864, deltayz = 0.00018
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no
fix deform_n all deform 100 yz delta ${delta} remap v units box flip no
fix deform_n all deform 100 yz delta -0.167222 remap v units box flip no
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 4 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg4.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg4.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg4 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg4 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg4 all custom/gz 100 dump/neg_deform4.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 134 | 135.8 | 137.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   308.49374     -39631.172      1364.8398      3934.8755    
       100   315.66751     -39638.898      4679.3876      3934.8755    
       200   289.80396     -39629.937      7851.8311      3934.8755    
       300   272.05488     -39634.232     -1430.8624      3934.8755    
       400   296.30271     -39659.221     -235.46279      3934.8755    
       500   316.13497     -39641.132     -4473.4535      3934.8755    
       600   291.82143     -39607.903      2129.6963      3934.8755    
       700   307.62275     -39637.362      5773.805       3934.8755    
       800   300.54154     -39644.896      6176.0919      3934.8755    
       900   266.01356     -39626.074     -1488.2028      3934.8755    
      1000   291.34175     -39654.528      5325.9877      3934.8755    
      1100   300.92235     -39632.729     -1700.9121      3934.8755    
      1200   324.72676     -39642.44       8477.025       3934.8755    
      1300   280.28119     -39594.352      4596.4246      3934.8755    
      1400   296.73198     -39640.249      9325.3349      3934.8755    
      1500   281.15469     -39647.452      15441.457      3934.8755    
      1600   320.55205     -39680.734     -67.55125       3934.8755    
      1700   286.98604     -39625.572     -7933.807       3934.8755    
      1800   304.53748     -39632.098      6490.7038      3934.8755    
      1900   305.00579     -39628.896     -6111.8615      3934.8755    
      2000   306.30597     -39630.412     -2607.4203      3934.8755    
      2100   297.99775     -39627.316      6753.5637      3934.8755    
      2200   300.19509     -39634.06      -13989.428      3934.8755    
      2300   286.90363     -39615.741      11537.105      3934.8755    
      2400   302.37808     -39630.65       5328.4791      3934.8755    
      2500   295.3657      -39627.715     -5982.5756      3934.8755    
      2600   293.26656     -39628.659     -7593.7015      3934.8755    
      2700   294.96105     -39635.163      12357.645      3934.8755    
      2800   297.66465     -39641.17       5265.616       3934.8755    
      2900   300.5995      -39631.163      6202.5315      3934.8755    
      3000   323.82996     -39630.322      17427.815      3934.8755    
      3100   329.16257     -39642.446      2199.4749      3934.8755    
      3200   267.76557     -39602.388      171.92188      3934.8755    
      3300   294.15406     -39634.527      3211.8188      3934.8755    
      3400   307.78368     -39643.808      10047.372      3934.8755    
      3500   309.31907     -39638.802     -12450.582      3934.8755    
      3600   305.60442     -39641.76       7164.1492      3934.8755    
      3700   284.84006     -39635.259      18115.694      3934.8755    
      3800   277.23094     -39630.423      5828.2136      3934.8755    
      3900   307.26371     -39641.266     -56.661979      3934.8755    
      4000   302.37946     -39613.786      44.350008      3934.8755    
      4100   310.6478      -39630.85       956.73194      3934.8755    
      4200   304.16118     -39646.954      295.79722      3934.8755    
      4300   294.66366     -39639.055      6360.1398      3934.8755    
      4400   267.7074      -39639.442     -1258.8448      3934.8755    
      4500   291.60564     -39676.628     -1340.2685      3934.8755    
      4600   277.36235     -39632.456      6750.8773      3934.8755    
      4700   304.89644     -39639.169      6981.5586      3934.8755    
      4800   313.4934      -39635.745     -3092.3535      3934.8755    
      4900   311.44055     -39626.223     -222.54276      3934.8755    
      5000   312.53718     -39642.51       11069.009      3934.8755    
Loop time of 222.597 on 16 procs for 5000 steps with 386 atoms

Performance: 0.970 ns/day, 24.733 hours/ns, 22.462 timesteps/s, 8.670 katom-step/s
99.1% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 133.03     | 170.34     | 199.18     | 207.9 | 76.52
Bond    | 0.012437   | 0.013356   | 0.014054   |   0.4 |  0.01
Neigh   | 1.6736     | 2.1083     | 2.4517     |  22.9 |  0.95
Comm    | 1.6379     | 30.516     | 67.858     | 491.2 | 13.71
Output  | 0.015856   | 0.040448   | 0.094012   |  13.5 |  0.02
Modify  | 19.081     | 19.449     | 19.891     |   7.7 |  8.74
Other   |            | 0.1314     |            |       |  0.06

Nlocal:          48.25 ave          55 max          43 min
Histogram: 1 0 2 0 1 3 0 0 0 1
Nghost:        3453.75 ave        3490 max        3411 min
Histogram: 1 1 0 1 0 0 2 1 1 1
Neighs:        33097.1 ave       37495 max       29633 min
Histogram: 1 0 2 0 2 2 0 0 0 1

Total # of neighbors = 264777
Ave neighs/atom = 685.95078
Ave special neighs/atom = 0
Neighbor list builds = 74
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg4

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.7222 13.589 17.3161) with tilt (-7.3464 -0.3071 -0.018)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  386 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*16.7222
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box
fix deform_p all deform 100 yz delta ${delta} remap v units box
fix deform_p all deform 100 yz delta 0.167222 remap v units box
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 4 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos4.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos4.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos4 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos4 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos4 all custom/gz 100 dump/pos_deform4.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 134.1 | 135.9 | 137.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   308.49374     -39631.172      1364.8398      3934.8755    
       100   315.66078     -39638.9        4679.881       3934.8755    
       200   289.85803     -39629.748      8065.0049      3934.8755    
       300   271.84781     -39634.258     -1607.3329      3934.8755    
       400   297.4269      -39660.134      2198.827       3934.8755    
       500   314.85364     -39639.265     -3312.919       3934.8755    
       600   293.77699     -39609.781      1828.7884      3934.8755    
       700   309.79563     -39641.463      4575.0744      3934.8755    
       800   299.65311     -39643.679      6054.921       3934.8755    
       900   270.87747     -39626.68       2074.3968      3934.8755    
      1000   290.68519     -39650.769      3424.9406      3934.8755    
      1100   305.14037     -39641.858     -1018.2811      3934.8755    
      1200   320.54802     -39638.28       13932.091      3934.8755    
      1300   294.14194     -39605.106      10170.334      3934.8755    
      1400   308.88449     -39646.356      9629.1944      3934.8755    
      1500   284.91844     -39651.534      22344.761      3934.8755    
      1600   312.12281     -39673.332      180.94179      3934.8755    
      1700   286.95427     -39625.382      9559.0387      3934.8755    
      1800   309.23171     -39636.029      6425.0879      3934.8755    
      1900   310.52302     -39636.924      10288.215      3934.8755    
      2000   300.86729     -39623.437     -11718.063      3934.8755    
      2100   288.69458     -39633.121      19357.72       3934.8755    
      2200   283.25514     -39658.156      9085.1054      3934.8755    
      2300   297.69149     -39652.73       6167.1053      3934.8755    
      2400   291.00531     -39620.908      9126.2884      3934.8755    
      2500   307.41412     -39632.814      2326.632       3934.8755    
      2600   311.94296     -39634.989      10826.249      3934.8755    
      2700   294.39702     -39634.772      1731.8187      3934.8755    
      2800   296.54355     -39657.514      6598.6472      3934.8755    
      2900   294.35788     -39646.175     -2221.2701      3934.8755    
      3000   311.90904     -39629.967      2498.1861      3934.8755    
      3100   298.12095     -39604.773      18739.046      3934.8755    
      3200   307.87589     -39628.606      10767.199      3934.8755    
      3300   304.44768     -39641.758      5347.6865      3934.8755    
      3400   298.11508     -39644.109      19970.6        3934.8755    
      3500   298.66004     -39637.974      4844.0096      3934.8755    
      3600   305.46621     -39605.394      13292.648      3934.8755    
      3700   318.22205     -39596.931      5326.4366      3934.8755    
      3800   318.69124     -39630.148      11627.884      3934.8755    
      3900   298.62796     -39629.777      285.9198       3934.8755    
      4000   276.94205     -39619.048     -1881.6858      3934.8755    
      4100   291.13688     -39638.072      11192.912      3934.8755    
      4200   309.27274     -39629.516      11828.16       3934.8755    
      4300   316.64247     -39615.493      7581.6227      3934.8755    
      4400   300.32744     -39605.723      4977.639       3934.8755    
      4500   306.9138      -39637.248      2751.5518      3934.8755    
      4600   284.25541     -39624.77       9989.2491      3934.8755    
      4700   301.96321     -39646.779      22373.406      3934.8755    
      4800   319.84927     -39656.072      1532.2255      3934.8755    
      4900   293.38112     -39606.797      9226.3381      3934.8755    
      5000   322.72003     -39607.528      5651.1779      3934.8755    
Loop time of 222.281 on 16 procs for 5000 steps with 386 atoms

Performance: 0.972 ns/day, 24.698 hours/ns, 22.494 timesteps/s, 8.683 katom-step/s
99.1% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 133.27     | 167.08     | 198.76     | 222.1 | 75.16
Bond    | 0.012565   | 0.013377   | 0.014142   |   0.4 |  0.01
Neigh   | 1.5579     | 1.9481     | 2.3219     |  24.9 |  0.88
Comm    | 1.9111     | 33.635     | 67.454     | 494.9 | 15.13
Output  | 0.01538    | 0.036768   | 0.082708   |  12.2 |  0.02
Modify  | 19.039     | 19.443     | 19.852     |   8.1 |  8.75
Other   |            | 0.1289     |            |       |  0.06

Nlocal:          48.25 ave          55 max          40 min
Histogram: 2 0 0 0 1 1 1 1 0 2
Nghost:           3459 ave        3497 max        3418 min
Histogram: 1 1 1 0 0 2 0 1 1 1
Neighs:        33054.9 ave       37442 max       27490 min
Histogram: 2 0 0 0 1 1 1 1 0 2

Total # of neighbors = 264439
Ave neighs/atom = 685.07513
Ave special neighs/atom = 0
Neighbor list builds = 70
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos4

# Delete dir to make sure it is not reused
variable dir delete
# uxz Perturbation
variable dir equal 5
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
variable len0 equal ${ly0}
variable len0 equal 13.589
variable dlen equal 2*(xz-${xz0})
variable dlen equal 2*(xz--0.3071)
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.7222 13.589 17.3161) with tilt (-7.3464 -0.3071 -0.018)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  386 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*13.589
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.3464000000000000412, deltaxy = 0.073464
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = -0.3070999999999999841, deltaxz = 0.003071
print "yz = $(yz), deltayz = ${deltayz}"
yz = -0.01799999999999999864, deltayz = 0.00018
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no
fix deform_n all deform 100 xz delta ${delta} remap v units box flip no
fix deform_n all deform 100 xz delta -0.13589 remap v units box flip no
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 5 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg5.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg5.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg5 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg5 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg5 all custom/gz 100 dump/neg_deform5.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 134 | 135.8 | 137.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   308.49374     -39631.172      1364.8398      3934.8755    
       100   315.66385     -39638.904      4678.6882      3934.8755    
       200   289.66303     -39629.741      7957.4592      3934.8755    
       300   272.09852     -39634.351     -1544.2686      3934.8755    
       400   296.34637     -39659.046     -218.44481      3934.8755    
       500   316.51927     -39641.259     -2856.4265      3934.8755    
       600   290.85241     -39606.6        1947.4458      3934.8755    
       700   307.47973     -39637.386      4396.8538      3934.8755    
       800   299.51805     -39643.169      8053.9273      3934.8755    
       900   264.64043     -39624.644      4089.8245      3934.8755    
      1000   289.66053     -39652.567      3528.6533      3934.8755    
      1100   302.07284     -39633.184     -1925.4912      3934.8755    
      1200   322.10873     -39637.281      5188.0178      3934.8755    
      1300   293.26118     -39605.182      5257.6184      3934.8755    
      1400   302.6282      -39644.084      9394.3658      3934.8755    
      1500   279.8601      -39641.96       13931.238      3934.8755    
      1600   310.98935     -39669.069     -10191.463      3934.8755    
      1700   286.74046     -39622.347     -556.63315      3934.8755    
      1800   298.72412     -39621.833      3781.5367      3934.8755    
      1900   314.83495     -39637.471      2679.4977      3934.8755    
      2000   302.94935     -39632.842      4058.2         3934.8755    
      2100   266.33052     -39640.599      3616.3248      3934.8755    
      2200   298.26172     -39667.502     -2702.6851      3934.8755    
      2300   304.20386     -39644.133      10449.632      3934.8755    
      2400   291.78542     -39620.706      11780.865      3934.8755    
      2500   305.0615      -39625.376      10641.833      3934.8755    
      2600   319.83939     -39636.04       1148.4949      3934.8755    
      2700   289.58846     -39625.742      5742.4378      3934.8755    
      2800   294.06998     -39651.097     -3270.9564      3934.8755    
      2900   297.60574     -39637.967      532.8661       3934.8755    
      3000   309.53046     -39632.399      5702.577       3934.8755    
      3100   305.13357     -39628.836      4893.6016      3934.8755    
      3200   301.55306     -39634.636     -2271.7729      3934.8755    
      3300   279.01774     -39652.605     -6974.8131      3934.8755    
      3400   289.64208     -39659.567     -9022.3054      3934.8755    
      3500   299.99297     -39642.4        1714.2608      3934.8755    
      3600   305.94202     -39630.062      55.289108      3934.8755    
      3700   298.0967      -39615.961      1167.2316      3934.8755    
      3800   308.35069     -39637.108      3325.1048      3934.8755    
      3900   291.81452     -39653.804     -5931.8857      3934.8755    
      4000   275.99565     -39642.892      3438.6179      3934.8755    
      4100   305.35992     -39656.756     -3631.3911      3934.8755    
      4200   299.47638     -39632.598      7513.0373      3934.8755    
      4300   298.28744     -39635.423      7513.4271      3934.8755    
      4400   279.19034     -39616.852      14557.888      3934.8755    
      4500   297.8531      -39612.344      1276.959       3934.8755    
      4600   331.46287     -39629.025      13439.671      3934.8755    
      4700   285.66871     -39594.21       15273.222      3934.8755    
      4800   300.01254     -39635.946      12939.254      3934.8755    
      4900   293.69187     -39635.465      3757.2106      3934.8755    
      5000   287.4575      -39628.704      3021.2638      3934.8755    
Loop time of 219.703 on 16 procs for 5000 steps with 386 atoms

Performance: 0.983 ns/day, 24.411 hours/ns, 22.758 timesteps/s, 8.785 katom-step/s
99.1% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 136.97     | 163.59     | 195.48     | 158.1 | 74.46
Bond    | 0.012402   | 0.012952   | 0.013417   |   0.3 |  0.01
Neigh   | 1.5159     | 1.8257     | 2.1717     |  16.4 |  0.83
Comm    | 2.4835     | 34.349     | 60.989     | 345.1 | 15.63
Output  | 0.016327   | 0.041154   | 0.094994   |  13.5 |  0.02
Modify  | 19.403     | 19.761     | 20.074     |   5.1 |  8.99
Other   |            | 0.1252     |            |       |  0.06

Nlocal:          48.25 ave          56 max          42 min
Histogram: 2 0 2 0 0 0 2 1 0 1
Nghost:        3438.38 ave        3477 max        3400 min
Histogram: 1 1 0 1 1 1 0 1 1 1
Neighs:        33070.6 ave       38182 max       28987 min
Histogram: 2 1 1 0 0 0 2 1 0 1

Total # of neighbors = 264565
Ave neighs/atom = 685.40155
Ave special neighs/atom = 0
Neighbor list builds = 66
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg5

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.7222 13.589 17.3161) with tilt (-7.3464 -0.3071 -0.018)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  386 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*13.589
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box
fix deform_p all deform 100 xz delta ${delta} remap v units box
fix deform_p all deform 100 xz delta 0.13589 remap v units box
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 5 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos5.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos5.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos5 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos5 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos5 all custom/gz 100 dump/pos_deform5.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 134.1 | 135.9 | 137.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   308.49374     -39631.172      1364.8398      3934.8755    
       100   315.66443     -39638.893      4680.7221      3934.8755    
       200   289.98228     -39629.941      7940.8106      3934.8755    
       300   271.82789     -39634.175     -1454.2276      3934.8755    
       400   296.70565     -39659.636      326.91227      3934.8755    
       500   313.6567      -39638.222     -4151.5802      3934.8755    
       600   292.57754     -39608.572      914.06419      3934.8755    
       700   309.40579     -39640.511      3482.7563      3934.8755    
       800   305.23471     -39649.289      4883.1035      3934.8755    
       900   265.44967     -39619.858     -948.83162      3934.8755    
      1000   294.72856     -39651.693      395.80484      3934.8755    
      1100   306.97604     -39638.867     -2769.7414      3934.8755    
      1200   311.81972     -39625.079      9188.668       3934.8755    
      1300   299.40944     -39607.608      10815.381      3934.8755    
      1400   317.44785     -39660.182      11195.535      3934.8755    
      1500   269.05498     -39630.006      20699.712      3934.8755    
      1600   318.13063     -39674.368      2653.6337      3934.8755    
      1700   301.15431     -39636.321      6456.8656      3934.8755    
      1800   310.33227     -39630.326      4953.4585      3934.8755    
      1900   309.71441     -39623.538     -4065.1543      3934.8755    
      2000   309.84288     -39617.637     -1648.026       3934.8755    
      2100   280.63802     -39604.753      7137.9557      3934.8755    
      2200   288.63237     -39636.187     -12411.537      3934.8755    
      2300   298.85263     -39651.973     -4013.3382      3934.8755    
      2400   292.26192     -39616.588      11443.308      3934.8755    
      2500   293.24282     -39603.519      1040.3872      3934.8755    
      2600   307.8979      -39626.291      13490.749      3934.8755    
      2700   299.11395     -39629.132      2165.6821      3934.8755    
      2800   290.25209     -39627.212      15747.813      3934.8755    
      2900   293.94226     -39631.598      4710.1767      3934.8755    
      3000   280.854       -39612.845     -9544.7353      3934.8755    
      3100   312.73745     -39642.954      6603.8444      3934.8755    
      3200   328.65296     -39625.226      4344.8749      3934.8755    
      3300   305.72826     -39592.056      12587.98       3934.8755    
      3400   302.92379     -39615.314      236.36677      3934.8755    
      3500   298.43565     -39635.619      7298.379       3934.8755    
      3600   303.52129     -39642.5        7099.6777      3934.8755    
      3700   302.4294      -39633.912      6322.1487      3934.8755    
      3800   309.70547     -39620.978      15391.749      3934.8755    
      3900   316.23524     -39603.268     -10851.382      3934.8755    
      4000   320.63492     -39610.962     -42.565275      3934.8755    
      4100   303.65611     -39636.528      15390.19       3934.8755    
      4200   294.4656      -39634.876      13157.27       3934.8755    
      4300   307.86383     -39645.671      8069.3918      3934.8755    
      4400   314.87516     -39645.783     -810.48776      3934.8755    
      4500   308.87758     -39627.491      717.53301      3934.8755    
      4600   304.82674     -39627.065     -2250.9037      3934.8755    
      4700   286.30279     -39636.395      4956.4676      3934.8755    
      4800   299.11204     -39654.891      14970.274      3934.8755    
      4900   289.03673     -39621.594      4306.6161      3934.8755    
      5000   301.36794     -39607.068     -3346.3482      3934.8755    
Loop time of 208.436 on 16 procs for 5000 steps with 386 atoms

Performance: 1.036 ns/day, 23.160 hours/ns, 23.988 timesteps/s, 9.259 katom-step/s
99.1% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 125.49     | 142.1      | 185.33     | 203.5 | 68.18
Bond    | 0.011003   | 0.011785   | 0.012442   |   0.5 |  0.01
Neigh   | 1.5665     | 1.7622     | 2.2981     |  21.0 |  0.85
Comm    | 1.6797     | 44.908     | 61.554     | 362.3 | 21.55
Output  | 0.016089   | 0.043354   | 0.1026     |  14.4 |  0.02
Modify  | 18.964     | 19.485     | 19.671     |   6.2 |  9.35
Other   |            | 0.123      |            |       |  0.06

Nlocal:          48.25 ave          53 max          44 min
Histogram: 1 1 1 1 0 1 1 0 1 1
Nghost:        3461.88 ave        3495 max        3438 min
Histogram: 2 1 0 0 1 2 1 0 0 1
Neighs:        33075.4 ave       36062 max       30235 min
Histogram: 1 1 1 1 0 1 1 0 0 2

Total # of neighbors = 264603
Ave neighs/atom = 685.5
Ave special neighs/atom = 0
Neighbor list builds = 70
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos5

# Delete dir to make sure it is not reused
variable dir delete
# uxy Perturbation
variable dir equal 6
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"
variable len0 equal ${lz0}
variable len0 equal 17.3161
variable dlen equal 2*(xy-${xy0})
variable dlen equal 2*(xy--7.3464)

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.7222 13.589 17.3161) with tilt (-7.3464 -0.3071 -0.018)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  386 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*17.3161
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.3464000000000000412, deltaxy = 0.073464
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = -0.3070999999999999841, deltaxz = 0.003071
print "yz = $(yz), deltayz = ${deltayz}"
yz = -0.01799999999999999864, deltayz = 0.00018
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no
fix deform_n all deform 100 xy delta ${delta} remap v units box flip no
fix deform_n all deform 100 xy delta -0.173161 remap v units box flip no

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 6 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg6.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg6.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg6 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg6 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg6 all custom/gz 100 dump/neg_deform6.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 134 | 135.8 | 137.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   308.49374     -39631.172      1364.8398      3934.8755    
       100   315.66824     -39638.899      4679.5409      3934.8755    
       200   289.85395     -39629.919      7919.859       3934.8755    
       300   272.37533     -39634.786     -773.32548      3934.8755    
       400   297.66908     -39660.685      2343.7874      3934.8755    
       500   314.06897     -39638.464     -4900.6823      3934.8755    
       600   292.80078     -39609.161     -679.61266      3934.8755    
       700   309.0382      -39639.389      5756.911       3934.8755    
       800   305.80058     -39650.801      6983.0287      3934.8755    
       900   264.08438     -39622.624     -3651.5373      3934.8755    
      1000   291.74425     -39655.203      4906.2399      3934.8755    
      1100   303.0731      -39639.261      1473.0526      3934.8755    
      1200   321.16514     -39637.987      11387.736      3934.8755    
      1300   295.4603      -39606.225      3575.7942      3934.8755    
      1400   298.82217     -39633.449      12856.788      3934.8755    
      1500   277.82928     -39640.943      15869.793      3934.8755    
      1600   294.80633     -39654.733     -4653.6527      3934.8755    
      1700   297.70996     -39639.94       1697.9998      3934.8755    
      1800   300.08297     -39629.553      17087.037      3934.8755    
      1900   306.74413     -39636.134      677.83027      3934.8755    
      2000   290.34716     -39616.989      5654.2576      3934.8755    
      2100   302.56237     -39646.765      6671.5938      3934.8755    
      2200   288.31576     -39642.744     -2671.3183      3934.8755    
      2300   297.9819      -39639.071      38.993901      3934.8755    
      2400   305.70875     -39623.911      10842.854      3934.8755    
      2500   284.9297      -39599.395      12031.351      3934.8755    
      2600   301.0971      -39640.966     -8318.2165      3934.8755    
      2700   284.29955     -39655.515      7194.5811      3934.8755    
      2800   281.93665     -39646.172      14133.291      3934.8755    
      2900   301.10845     -39641.033      3500.8983      3934.8755    
      3000   301.15562     -39631.346      8284.415       3934.8755    
      3100   311.22426     -39645.033      3304.2682      3934.8755    
      3200   283.44587     -39613.04      -1192.2181      3934.8755    
      3300   308.30336     -39644.647      3604.3587      3934.8755    
      3400   304.16402     -39639.071      789.84557      3934.8755    
      3500   302.78008     -39630.182      1592.4125      3934.8755    
      3600   308.45139     -39628.147      4127.463       3934.8755    
      3700   307.62712     -39617.726      10064.631      3934.8755    
      3800   299.07931     -39617.504      10997.912      3934.8755    
      3900   281.82676     -39626.322      4722.3766      3934.8755    
      4000   296.31147     -39649.377      17842.78       3934.8755    
      4100   321.43899     -39656.378      2854.5897      3934.8755    
      4200   301.70397     -39603.213      9365.8983      3934.8755    
      4300   338.78498     -39645.989      10168.383      3934.8755    
      4400   315.13079     -39637.783      23219.913      3934.8755    
      4500   309.31817     -39651.286     -1986.8586      3934.8755    
      4600   290.37914     -39631.925     -919.46596      3934.8755    
      4700   267.98507     -39601.349      9687.8495      3934.8755    
      4800   327.58356     -39632.638      6748.7259      3934.8755    
      4900   306.77069     -39591.643      13261.069      3934.8755    
      5000   304.46418     -39610.738     -5712.6111      3934.8755    
Loop time of 199.336 on 16 procs for 5000 steps with 386 atoms

Performance: 1.084 ns/day, 22.148 hours/ns, 25.083 timesteps/s, 9.682 katom-step/s
99.1% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 124.65     | 139.31     | 176.59     | 176.2 | 69.89
Bond    | 0.011262   | 0.01176    | 0.012992   |   0.5 |  0.01
Neigh   | 1.7059     | 1.8988     | 2.399      |  19.0 |  0.95
Comm    | 1.6161     | 38.902     | 53.599     | 333.8 | 19.52
Output  | 0.015415   | 0.041792   | 0.099293   |  14.3 |  0.02
Modify  | 18.565     | 19.051     | 19.227     |   5.9 |  9.56
Other   |            | 0.1216     |            |       |  0.06

Nlocal:          48.25 ave          56 max          41 min
Histogram: 2 1 0 0 1 0 1 1 1 1
Nghost:        3452.12 ave        3492 max        3414 min
Histogram: 1 1 1 1 1 0 0 0 1 2
Neighs:        33066.5 ave       38119 max       28264 min
Histogram: 2 1 0 0 1 0 1 1 1 1

Total # of neighbors = 264532
Ave neighs/atom = 685.31606
Ave special neighs/atom = 0
Neighbor list builds = 76
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg6

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.7222 13.589 17.3161) with tilt (-7.3464 -0.3071 -0.018)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  386 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*17.3161
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box
fix deform_p all deform 100 xy delta ${delta} remap v units box
fix deform_p all deform 100 xy delta 0.173161 remap v units box

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 6 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos6.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos6.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos6 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos6 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos6 all custom/gz 100 dump/pos_deform6.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 134.1 | 135.9 | 137.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   308.49374     -39631.172      1364.8398      3934.8755    
       100   315.65707     -39638.903      4678.7416      3934.8755    
       200   289.82662     -39629.758      8070.4489      3934.8755    
       300   272.02233     -39634.27      -2116.4451      3934.8755    
       400   297.19064     -39659.947      3985.5475      3934.8755    
       500   313.03629     -39636.933      805.37313      3934.8755    
       600   293.17452     -39607.79       4020.3665      3934.8755    
       700   310.1816      -39640.17       8592.8329      3934.8755    
       800   299.84793     -39643.233      8334.7484      3934.8755    
       900   274.32602     -39629.898     -2142.1316      3934.8755    
      1000   299.30448     -39657.401     -861.46925      3934.8755    
      1100   296.72459     -39630.107     -408.73642      3934.8755    
      1200   326.41063     -39645.314      9893.4006      3934.8755    
      1300   293.82488     -39604.231      4987.689       3934.8755    
      1400   311.63725     -39653.6        11078.284      3934.8755    
      1500   284.24482     -39646.786      21797.839      3934.8755    
      1600   308.40407     -39659.256     -10090.766      3934.8755    
      1700   291.62477     -39624.539     -8215.2408      3934.8755    
      1800   340.11762     -39656.477      5792.0882      3934.8755    
      1900   317.88963     -39622.536     -2441.336       3934.8755    
      2000   275.39017     -39587.438      13091.841      3934.8755    
      2100   300.51389     -39647.123      5798.108       3934.8755    
      2200   297.60802     -39660.564      1629.88        3934.8755    
      2300   279.55408     -39639.868      9716.654       3934.8755    
      2400   311.12163     -39644.088      3082.2745      3934.8755    
      2500   308.33308     -39627.163      17627.973      3934.8755    
      2600   305.47517     -39624.556      8461.9194      3934.8755    
      2700   301.69329     -39631.162      7482.4376      3934.8755    
      2800   307.27121     -39675.293      1855.9832      3934.8755    
      2900   274.90169     -39638.764     -33.371702      3934.8755    
      3000   287.80401     -39633.803      3862.7643      3934.8755    
      3100   301.64469     -39632.652      16250.332      3934.8755    
      3200   308.89975     -39628.323     -2487.6656      3934.8755    
      3300   297.35        -39631.02       7749.91        3934.8755    
      3400   288.28309     -39656.53       5079.8668      3934.8755    
      3500   285.03389     -39645.123      4930.184       3934.8755    
      3600   303.1765      -39644.097      7101.3214      3934.8755    
      3700   305.48215     -39636.778      13115.574      3934.8755    
      3800   290.72084     -39622.329     -5452.035       3934.8755    
      3900   294.53962     -39625.803      5616.4976      3934.8755    
      4000   306.62107     -39646.167      325.17296      3934.8755    
      4100   294.95303     -39661.416      7372.0813      3934.8755    
      4200   277.27719     -39653.888     -3430.2837      3934.8755    
      4300   289.65694     -39645.107     -1328.3585      3934.8755    
      4400   307.71693     -39639.045      3198.8168      3934.8755    
      4500   297.63194     -39621.386     -6613.5116      3934.8755    
      4600   300.11952     -39641.172     -1582.3671      3934.8755    
      4700   288.4717      -39655.83       6251.8885      3934.8755    
      4800   266.85964     -39643.533     -380.72697      3934.8755    
      4900   284.85687     -39625.649      12922.554      3934.8755    
      5000   313.85841     -39635.517      3575.3274      3934.8755    
Loop time of 127.061 on 16 procs for 5000 steps with 386 atoms

Performance: 1.700 ns/day, 14.118 hours/ns, 39.351 timesteps/s, 15.190 katom-step/s
98.9% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 105.05     | 107.35     | 109.52     |  14.6 | 84.49
Bond    | 0.0093522  | 0.0097265  | 0.010412   |   0.4 |  0.01
Neigh   | 1.567      | 1.6143     | 1.6631     |   2.8 |  1.27
Comm    | 1.2397     | 3.4332     | 5.7339     |  82.2 |  2.70
Output  | 0.011168   | 0.031619   | 0.076113   |  12.7 |  0.02
Modify  | 14.462     | 14.508     | 14.552     |   0.9 | 11.42
Other   |            | 0.1142     |            |       |  0.09

Nlocal:          48.25 ave          54 max          41 min
Histogram: 1 0 2 0 0 0 2 1 0 2
Nghost:           3431 ave        3464 max        3389 min
Histogram: 1 0 1 0 1 1 1 1 0 2
Neighs:        33064.2 ave       36810 max       28248 min
Histogram: 1 0 2 0 0 0 1 2 0 2

Total # of neighbors = 264514
Ave neighs/atom = 685.26943
Ave special neighs/atom = 0
Neighbor list builds = 72
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos6

# Delete dir to make sure it is not reused
variable dir delete

# Calc and output
# include calc.mod.lmp

Total wall time: 0:42:24
