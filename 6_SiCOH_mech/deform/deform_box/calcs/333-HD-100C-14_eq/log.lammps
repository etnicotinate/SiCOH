LAMMPS (2 Aug 2023 - Update 2)
  using 2 OpenMP thread(s) per MPI task
# Initialization
units           real
dimension       3
boundary        p p p
# boundary        s s s
atom_style      full
timestep        0.5   # fs

# Define MD parameters
variable nevery equal 10                  # sampling interval
variable nrepeat equal 10                 # number of samples
variable nfreq equal ${nevery}*${nrepeat} # length of one average
variable nfreq equal 10*${nrepeat} 
variable nfreq equal 10*10 
variable nthermo equal ${nfreq}           # interval for thermo output
variable nthermo equal 100           
# 1 ps : 1e3 fs / 0.5 fs = 2e3 steps
variable nequil equal 50*${nthermo}       # steps of equilibration run 10
variable nequil equal 50*100       
variable nrun equal 50*${nthermo}          # stpes of equilibrated run 10
variable nrun equal 50*100          
variable temp equal 300.0                # temperature of initial sample
variable tdamp equal 50.0                 # time constant for thermostat
variable seed equal 123456                # seed for thermostat
variable ufac equal 1.01325e-4         # pressure unit conversion, from atm to Gpa
variable up equal 0.01                  # the deformation magnitude 0.1
variable FF string "SiOCHN_2018.ff C H O Si"          # force field args for pair_coeff
# pair_coeff * * CHONSSi.ff C H O Si
# pair_coeff * * CHOSiNa.ff C H O Si
# pair_coeff * * SiOCHN_2018.ff C H O Si
# pair_coeff * * PDMSDecomp.ff C H O Si
# pair_coeff * * CHONSi.ff C H O Si
# pair_coeff * * CHOFe.ff O Si

# Read the initial sctructure
# box tilt large
variable structure string 333-HD-100C-14_eq

read_data       ${structure}.data
read_data       333-HD-100C-14_eq.data
Reading data file ...
  triclinic box = (0 0 0) to (15.724 13.9031 17.2465) with tilt (-7.584 0.1778 0.4371)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  reading atoms ...
  366 atoms
  reading velocities ...
  366 velocities
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.001 seconds
  read_data CPU = 0.010 seconds

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400

# # Energy minimization
# print "*****Minimization starts.*****"
# minimize 1.0e-6 1.0e-6 100 1000
# min_style cg
# # Save the optimized structure
# write_data ${structure}_opt.data
# velocity        all create ${temp} ${seed} dist gaussian

# # Equilibration
# include ff.mod.lmp
# if "$(is_defined(fix,avgp))" then "unfix avgp"
# if "$(is_defined(fix,avgl))" then "unfix avgl"
# thermo_style custom step temp pe press density vol
# run ${nequil}
# # Save the equilibrated structure
# write_data ${structure}_eq.data

# use tmp to save initial length and tilt
variable tmp equal lx
variable lx0 equal ${tmp}
variable lx0 equal 15.724
variable tmp equal ly
variable ly0 equal ${tmp}
variable ly0 equal 13.9031
variable tmp equal lz
variable lz0 equal ${tmp}
variable lz0 equal 17.2465

variable tmp equal yz
variable yz0 equal ${tmp}
variable yz0 equal 0.4371
variable tmp equal xz
variable xz0 equal ${tmp}
variable xz0 equal 0.1778
variable tmp equal xy
variable xy0 equal ${tmp}
variable xy0 equal -7.584

# Write restart
write_restart equil.res
System init for write_restart ...
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none

# dir: direction
# uxx Perturbation
variable dir equal 1
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
variable len0 equal ${lx0}
variable len0 equal 15.724
variable dlen equal lx-${len0}
variable dlen equal lx-15.724
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.724 13.9031 17.2465) with tilt (-7.584 0.1778 0.4371)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.004 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*15.724
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.5839999999999996305, deltaxy = 0.07584
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.17780000000000001359, deltaxz = -0.001778
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0.43709999999999998854, deltayz = -0.004371
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.15724 xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.15724 xy delta 0.07584 xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.15724 xy delta 0.07584 xz delta -0.001778 remap v units box flip no
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 1 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg1.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg1.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg1 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg1 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg1 all custom/gz 100 dump/neg_deform1.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Your simulation uses code contributions which should be cited:

- pair reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 number =  {4--5},
 pages =   {245--259}
}

- fix qeq/reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 pages =   {245--259}
}

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 133.7 | 135.2 | 136.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   291.03529     -41137.437     -4896.0768      3770.2978    
       100   307.23829     -41146.679     -2125.6645      3769.5437    
       200   307.6477      -41117.971     -1898.9974      3768.7897    
       300   316.53221     -41106.152     -7451.5987      3768.0356    
       400   313.74287     -41113.433      2493.7407      3767.2816    
       500   295.45851     -41107.728      4017.1359      3766.5275    
       600   291.66989     -41110.252     -5040.9915      3765.7734    
       700   313.4134      -41141.962      369.71229      3765.0194    
       800   308.57709     -41150.587     -9639.3278      3764.2653    
       900   291.06019     -41134.64       17058.947      3763.5113    
      1000   303.91883     -41142.633     -4417.273       3762.7572    
      1100   297.05777     -41129.827     -4434.2705      3762.0031    
      1200   313.69152     -41135.435     -5073.591       3761.2491    
      1300   314.4598      -41127.392      3256.4756      3760.495     
      1400   295.89321     -41119.385      440.93677      3759.741     
      1500   304.86615     -41151.89      -2638.6048      3758.9869    
      1600   290.29873     -41152.376     -6273.9187      3758.2328    
      1700   310.34211     -41155.641     -7911.3445      3757.4788    
      1800   321.36648     -41134.984     -1188.9793      3756.7247    
      1900   307.06327     -41118.706      2365.1628      3755.9707    
      2000   308.79133     -41134.287     -5905.2939      3755.2166    
      2100   293.28124     -41139.233     -6086.816       3754.4625    
      2200   288.40293     -41136.014     -4612.8492      3753.7085    
      2300   309.6094      -41145.03      -1979.7285      3752.9544    
      2400   302.3026      -41122.527      5418.9126      3752.2004    
      2500   328.75613     -41106.321     -3554.4758      3751.4463    
      2600   313.34271     -41099.097     -5816.0346      3750.6922    
      2700   310.67424     -41130.721     -5088.4286      3749.9382    
      2800   306.11185     -41145.98      -13573.888      3749.1841    
      2900   299.30239     -41153.71       1960.3999      3748.4301    
      3000   291.19452     -41153.873     -994.47801      3747.676     
      3100   323.78595     -41153.732     -6521.9176      3746.922     
      3200   321.56152     -41139.052     -10206.22       3746.1679    
      3300   308.97331     -41133.341     -4127.8599      3745.4138    
      3400   291.15891     -41138.943      5734.0106      3744.6598    
      3500   293.26523     -41151.232      3648.5306      3743.9057    
      3600   292.52211     -41139.516      8479.2201      3743.1517    
      3700   301.20935     -41138.842     -159.25453      3742.3976    
      3800   307.54416     -41144.15      -1507.9613      3741.6435    
      3900   289.01884     -41126.866      7719.4519      3740.8895    
      4000   292.31256     -41123.499     -3670.1964      3740.1354    
      4100   294.30525     -41103.761     -5719.8651      3739.3814    
      4200   321.04837     -41112.817      1386.4449      3738.6273    
      4300   307.66644     -41123.416      235.2515       3737.8732    
      4400   306.19608     -41144.065      11857.836      3737.1192    
      4500   301.91025     -41144.845      1147.5319      3736.3651    
      4600   285.4244      -41128.871     -14242.426      3735.6111    
      4700   295.43646     -41140.593     -5291.3024      3734.857     
      4800   301.21176     -41139.174      10202.765      3734.1029    
      4900   304.72658     -41128.397     -1015.8341      3733.3489    
      5000   326.43336     -41142.957      3721.0259      3732.5948    
Loop time of 226.356 on 16 procs for 5000 steps with 366 atoms

Performance: 0.954 ns/day, 25.151 hours/ns, 22.089 timesteps/s, 8.085 katom-step/s
99.0% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 143.12     | 167.79     | 203.03     | 200.0 | 74.13
Bond    | 0.012368   | 0.013547   | 0.014849   |   0.8 |  0.01
Neigh   | 1.612      | 1.9785     | 2.4003     |  22.2 |  0.87
Comm    | 2.0314     | 37.283     | 61.961     | 424.2 | 16.47
Output  | 0.014576   | 0.036143   | 0.079676   |  12.1 |  0.02
Modify  | 18.729     | 19.135     | 19.491     |   7.2 |  8.45
Other   |            | 0.1237     |            |       |  0.05

Nlocal:          45.75 ave          54 max          41 min
Histogram: 2 2 0 1 1 0 0 1 0 1
Nghost:        3467.88 ave        3537 max        3405 min
Histogram: 1 0 1 2 0 1 1 0 1 1
Neighs:          31379 ave       36807 max       28227 min
Histogram: 2 2 0 1 1 0 0 1 0 1

Total # of neighbors = 251032
Ave neighs/atom = 685.87978
Ave special neighs/atom = 0
Neighbor list builds = 62
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg1

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.724 13.9031 17.2465) with tilt (-7.584 0.1778 0.4371)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*15.724
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.15724 xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.15724 xy delta -0.07584 xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.15724 xy delta -0.07584 xz delta 0.001778 remap v units box
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 1 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos1.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos1.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos1 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos1 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos1 all custom/gz 100 dump/pos_deform1.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 133.7 | 135.2 | 136.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   291.03529     -41137.437     -4896.0768      3770.2978    
       100   307.23729     -41146.684     -2125.4316      3771.0519    
       200   307.4226      -41116.941     -1208.198       3771.8059    
       300   317.7666      -41106.231     -2750.3551      3772.56      
       400   312.01781     -41111.01       2330.7733      3773.314     
       500   310.43436     -41121.031      1218.7754      3774.0681    
       600   301.5756      -41121.654     -3256.9465      3774.8222    
       700   318.73054     -41152.948     -5290.2677      3775.5762    
       800   296.424       -41140.134     -4248.1327      3776.3303    
       900   291.06617     -41133.158     -906.44535      3777.0843    
      1000   276.13694     -41110.191     -2116.6798      3777.8384    
      1100   297.91608     -41129.01      -5615.1663      3778.5925    
      1200   299.16519     -41133.745     -3380.9969      3779.3465    
      1300   289.79555     -41116.82      -7222.8702      3780.1006    
      1400   305.12529     -41120.888      3262.2771      3780.8546    
      1500   309.15387     -41122.957     -6486.7923      3781.6087    
      1600   298.16322     -41131.47      -12076.052      3782.3628    
      1700   297.819       -41152.483     -4097.629       3783.1168    
      1800   306.22808     -41163.574     -2038.7893      3783.8709    
      1900   313.51891     -41140.686     -9563.7877      3784.6249    
      2000   298.48419     -41099.526     -12184.22       3785.379     
      2100   311.36204     -41123.044      1055.6177      3786.133     
      2200   301.30646     -41137.394     -3059.322       3786.8871    
      2300   299.66057     -41147.785     -8267.368       3787.6412    
      2400   291.12107     -41134.993      201.18313      3788.3952    
      2500   299.52544     -41103.927      933.24636      3789.1493    
      2600   309.16638     -41110.961     -15829.638      3789.9033    
      2700   304.60287     -41128.376      2947.7329      3790.6574    
      2800   299.75013     -41132.984     -11462.062      3791.4115    
      2900   295.86256     -41136.017     -341.06457      3792.1655    
      3000   288.06238     -41137.155     -7280.3576      3792.9196    
      3100   293.16743     -41145.547     -9230.4801      3793.6736    
      3200   309.22739     -41136.595     -8610.7078      3794.4277    
      3300   304.74818     -41117.407      2602.5519      3795.1818    
      3400   297.11205     -41109.826     -5161.9818      3795.9358    
      3500   293.95915     -41130.274     -11828.952      3796.6899    
      3600   277.16629     -41139.776     -10680.024      3797.4439    
      3700   271.421       -41131.303     -12857.436      3798.198     
      3800   301.25179     -41139.278     -17730.192      3798.9521    
      3900   288.50644     -41117.886     -3722.7501      3799.7061    
      4000   314.9287      -41143.581     -5483.1884      3800.4602    
      4100   303.99658     -41128.515      1637.7716      3801.2142    
      4200   311.70259     -41139.276      561.79962      3801.9683    
      4300   289.40199     -41135.999      3278.1509      3802.7224    
      4400   282.76439     -41145.177     -2025.6657      3803.4764    
      4500   289.07929     -41130.96      -8776.9312      3804.2305    
      4600   316.77839     -41130.923     -892.34318      3804.9845    
      4700   318.93578     -41135.113     -6651.1409      3805.7386    
      4800   295.39936     -41124.098     -8983.8625      3806.4927    
      4900   289.48638     -41132.325     -3870.2927      3807.2467    
      5000   298.21792     -41143.814     -8607.0263      3808.0008    
Loop time of 225.364 on 16 procs for 5000 steps with 366 atoms

Performance: 0.958 ns/day, 25.040 hours/ns, 22.186 timesteps/s, 8.120 katom-step/s
99.0% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 139.64     | 169.32     | 201.8      | 221.8 | 75.13
Bond    | 0.01251    | 0.013804   | 0.014765   |   0.7 |  0.01
Neigh   | 1.9176     | 2.3967     | 2.8318     |  25.6 |  1.06
Comm    | 1.7946     | 34.264     | 63.954     | 492.9 | 15.20
Output  | 0.014212   | 0.035484   | 0.078957   |  12.1 |  0.02
Modify  | 18.765     | 19.204     | 19.688     |   9.1 |  8.52
Other   |            | 0.1286     |            |       |  0.06

Nlocal:          45.75 ave          49 max          43 min
Histogram: 1 0 0 2 0 4 0 0 0 1
Nghost:        3395.38 ave        3463 max        3335 min
Histogram: 1 1 0 2 0 2 0 0 1 1
Neighs:          30748 ave       32716 max       28959 min
Histogram: 1 0 0 2 2 2 0 0 0 1

Total # of neighbors = 245984
Ave neighs/atom = 672.08743
Ave special neighs/atom = 0
Neighbor list builds = 74
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos1

# Delete dir to make sure it is not reused
variable dir delete
# uyy Perturbation
variable dir equal 2
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
variable len0 equal ${ly0}
variable len0 equal 13.9031
variable dlen equal ly-${len0}
variable dlen equal ly-13.9031
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.724 13.9031 17.2465) with tilt (-7.584 0.1778 0.4371)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*13.9031
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.5839999999999996305, deltaxy = 0.07584
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.17780000000000001359, deltaxz = -0.001778
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0.43709999999999998854, deltayz = -0.004371
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 -0.139031 yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 -0.139031 yz delta -0.004371 remap v units box flip no
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 2 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg2.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg2.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg2 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg2 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg2 all custom/gz 100 dump/neg_deform2.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 133.7 | 135.2 | 136.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   291.03529     -41137.437     -4896.0768      3770.2978    
       100   307.23783     -41146.682     -2125.9732      3769.5437    
       200   307.70264     -41117.723     -1588.0861      3768.7897    
       300   316.87864     -41105.924     -5442.4302      3768.0356    
       400   316.02939     -41115.949      2341.8816      3767.2816    
       500   309.15324     -41120.178     -920.42681      3766.5275    
       600   306.30885     -41126.199     -8330.3485      3765.7734    
       700   320.45205     -41152.932     -979.09865      3765.0194    
       800   296.10086     -41136.144     -2522.3604      3764.2653    
       900   303.12133     -41142.144      571.231        3763.5113    
      1000   305.83723     -41140.977     -10174.69       3762.7572    
      1100   299.25442     -41136.831      4673.078       3762.0031    
      1200   298.67058     -41136.358      4524.7442      3761.2491    
      1300   303.3676      -41122.301      294.48502      3760.495     
      1400   296.65601     -41079.497      159.53507      3759.741     
      1500   307.57603     -41098.784     -8420.6478      3758.9869    
      1600   313.65906     -41136.375      4074.7874      3758.2328    
      1700   292.91668     -41133.478     -10022.787      3757.4788    
      1800   280.7656      -41125.686      362.7284       3756.7247    
      1900   292.48497     -41119.968      3389.51        3755.9707    
      2000   302.29435     -41104.761     -4278.2576      3755.2166    
      2100   312.02194     -41123.632      979.33099      3754.4625    
      2200   298.0561      -41125.191     -67.325481      3753.7085    
      2300   294.89176     -41123.597     -11742.74       3752.9544    
      2400   311.03107     -41143.151     -3565.5671      3752.2004    
      2500   299.32064     -41139.562      11165.112      3751.4463    
      2600   298.65039     -41139.302     -8713.8485      3750.6922    
      2700   286.79159     -41118.802      2781.6647      3749.9382    
      2800   294.00468     -41106.021     -6924.9681      3749.1841    
      2900   322.58857     -41128.821     -14527.715      3748.4301    
      3000   299.81929     -41140.02       4563.9928      3747.676     
      3100   298.40613     -41149.255      5298.6293      3746.922     
      3200   308.02844     -41156.934      2849.7669      3746.1679    
      3300   298.33313     -41132.835     -5931.617       3745.4138    
      3400   322.72591     -41127.863      2796.2235      3744.6598    
      3500   298.94125     -41110.476      3420.7356      3743.9057    
      3600   304.64056     -41130.72       5285.5493      3743.1517    
      3700   314.11326     -41155.89      -2975.154       3742.3976    
      3800   315.26687     -41166.967     -7130.897       3741.6435    
      3900   291.41367     -41150.45       4675.4326      3740.8895    
      4000   297.79371     -41141.486     -4920.736       3740.1354    
      4100   321.84289     -41134.609     -11012.448      3739.3814    
      4200   307.79632     -41128.257      992.12945      3738.6273    
      4300   303.87747     -41153.395      411.2692       3737.8732    
      4400   292.00677     -41138.985      5595.0693      3737.1192    
      4500   296.24799     -41124.909      20057.432      3736.3651    
      4600   320.11099     -41137.664      19.981144      3735.6111    
      4700   292.50156     -41144.64      -849.56373      3734.857     
      4800   276.49882     -41144.961     -648.87338      3734.1029    
      4900   300.3429      -41156.356      7392.0035      3733.3489    
      5000   317.86401     -41147.925      10421.257      3732.5948    
Loop time of 228.911 on 16 procs for 5000 steps with 366 atoms

Performance: 0.944 ns/day, 25.435 hours/ns, 21.843 timesteps/s, 7.994 katom-step/s
99.0% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 141.37     | 175.28     | 205.52     | 203.2 | 76.57
Bond    | 0.012789   | 0.013743   | 0.014767   |   0.6 |  0.01
Neigh   | 1.5828     | 1.9881     | 2.3335     |  20.7 |  0.87
Comm    | 1.933      | 32.174     | 66.068     | 473.9 | 14.06
Output  | 0.014031   | 0.035118   | 0.078565   |  12.2 |  0.02
Modify  | 18.957     | 19.297     | 19.713     |   6.7 |  8.43
Other   |            | 0.1254     |            |       |  0.05

Nlocal:          45.75 ave          52 max          40 min
Histogram: 1 0 2 1 0 2 0 0 0 2
Nghost:        3464.88 ave        3533 max        3400 min
Histogram: 1 1 0 2 0 0 2 1 0 1
Neighs:          31386 ave       35485 max       27577 min
Histogram: 1 0 2 1 1 0 1 0 0 2

Total # of neighbors = 251088
Ave neighs/atom = 686.03279
Ave special neighs/atom = 0
Neighbor list builds = 60
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg2

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.724 13.9031 17.2465) with tilt (-7.584 0.1778 0.4371)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*13.9031
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 ${delta} yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 0.139031 yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 0.139031 yz delta 0.004371 remap v units box
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 2 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos2.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos2.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos2 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos2 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos2 all custom/gz 100 dump/pos_deform2.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 133.7 | 135.2 | 136.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   291.03529     -41137.437     -4896.0768      3770.2978    
       100   307.23774     -41146.682     -2124.6603      3771.0519    
       200   307.41977     -41117.272     -1439.781       3771.8059    
       300   318.76098     -41108.197     -4370.4303      3772.56      
       400   312.13012     -41111.29       2094.0904      3773.314     
       500   307.81848     -41119.669     -63.223251      3774.0681    
       600   305.13556     -41125.809     -4998.5079      3774.8222    
       700   309.94276     -41140.323     -2502.9527      3775.5762    
       800   306.73349     -41148.471     -4070.1561      3776.3303    
       900   281.84714     -41125.484      8171.4883      3777.0843    
      1000   300.78875     -41118.197      1102.4198      3777.8384    
      1100   326.15188     -41116.703     -9203.5529      3778.5925    
      1200   305.87593     -41117.888      535.87713      3779.3465    
      1300   298.57259     -41137.87      -15004.002      3780.1006    
      1400   278.81372     -41128.315     -2570.7525      3780.8546    
      1500   300.51925     -41133.184     -8310.4955      3781.6087    
      1600   298.50906     -41109.68      -6651.6691      3782.3628    
      1700   297.37916     -41102.988      378.97668      3783.1168    
      1800   319.86055     -41126.718      4960.5504      3783.8709    
      1900   303.47        -41121.476     -7990.2653      3784.6249    
      2000   302.1637      -41130.417     -7573.5245      3785.379     
      2100   303.27869     -41144.569     -8938.2062      3786.133     
      2200   280.66828     -41119.034      4681.8442      3786.8871    
      2300   296.89342     -41083.075     -1595.3611      3787.6412    
      2400   320.52044     -41113.936      387.49015      3788.3952    
      2500   282.84474     -41102.697     -5166.9315      3789.1493    
      2600   281.72637     -41117.532     -1972.0491      3789.9033    
      2700   293.96233     -41144.136     -5674.178       3790.6574    
      2800   300.65456     -41134.616     -7566.3464      3791.4115    
      2900   310.33641     -41110.459      1122.3522      3792.1655    
      3000   296.94619     -41100.596     -9153.2199      3792.9196    
      3100   320.90919     -41144.5       -6437.0123      3793.6736    
      3200   280.72406     -41118.869     -7469.6848      3794.4277    
      3300   309.81956     -41147.997     -4190.1942      3795.1818    
      3400   301.83353     -41132.704     -2511.0307      3795.9358    
      3500   292.21421     -41094.431     -3086.1262      3796.6899    
      3600   317.23859     -41106.065     -6863.513       3797.4439    
      3700   298.6611      -41097.281     -6951.295       3798.198     
      3800   272.87338     -41098.765     -4243.1976      3798.9521    
      3900   293.5118      -41123.982     -9384.2341      3799.7061    
      4000   309.76506     -41131.246     -9520.3933      3800.4602    
      4100   309.16328     -41128.587     -926.83248      3801.2142    
      4200   278.83169     -41127.663     -4308.6288      3801.9683    
      4300   284.64732     -41141.69      -8842.9247      3802.7224    
      4400   286.28103     -41115.713     -12132.073      3803.4764    
      4500   299.77774     -41108.883     -4245.1776      3804.2305    
      4600   302.68424     -41111.101      5237.3789      3804.9845    
      4700   305.19933     -41124.027      941.18111      3805.7386    
      4800   273.3705      -41117.59      -8717.8539      3806.4927    
      4900   278.1578      -41132.147     -13507.448      3807.2467    
      5000   305.81185     -41130.033      5380.6521      3808.0008    
Loop time of 226.863 on 16 procs for 5000 steps with 366 atoms

Performance: 0.952 ns/day, 25.207 hours/ns, 22.040 timesteps/s, 8.067 katom-step/s
99.0% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 137.04     | 171.13     | 203.36     | 228.5 | 75.43
Bond    | 0.013222   | 0.013678   | 0.014778   |   0.4 |  0.01
Neigh   | 1.6372     | 2.0172     | 2.3961     |  22.8 |  0.89
Comm    | 1.9571     | 34.177     | 68.235     | 511.0 | 15.07
Output  | 0.014265   | 0.035475   | 0.079127   |  12.2 |  0.02
Modify  | 18.96      | 19.362     | 19.742     |   7.7 |  8.53
Other   |            | 0.1281     |            |       |  0.06

Nlocal:          45.75 ave          49 max          41 min
Histogram: 1 0 0 3 0 0 0 0 3 1
Nghost:        3422.25 ave        3483 max        3365 min
Histogram: 1 1 1 0 2 0 1 0 1 1
Neighs:        30783.4 ave       32730 max       27715 min
Histogram: 1 0 0 1 2 0 0 0 1 3

Total # of neighbors = 246267
Ave neighs/atom = 672.86066
Ave special neighs/atom = 0
Neighbor list builds = 62
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos2

# Delete dir to make sure it is not reused
variable dir delete
# uzz Perturbation
variable dir equal 3
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
variable len0 equal ${lz0}
variable len0 equal 17.2465
variable dlen equal lz-${len0}
variable dlen equal lz-17.2465
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.724 13.9031 17.2465) with tilt (-7.584 0.1778 0.4371)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*17.2465
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.5839999999999996305, deltaxy = 0.07584
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.17780000000000001359, deltaxz = -0.001778
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0.43709999999999998854, deltayz = -0.004371
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no
fix deform_n all deform 100 z delta 0 ${delta} remap v units box flip no
fix deform_n all deform 100 z delta 0 -0.172465 remap v units box flip no
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 3 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg3.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg3.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg3 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg3 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg3 all custom/gz 100 dump/neg_deform3.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 133.7 | 135.2 | 136.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   291.03529     -41137.437     -4896.0768      3770.2978    
       100   307.23469     -41146.684     -2126.3587      3769.5437    
       200   307.69751     -41117.43      -1342.9053      3768.7897    
       300   317.93983     -41106.5       -3849.6548      3768.0356    
       400   313.09628     -41112.494      3756.3298      3767.2816    
       500   307.01678     -41117.86       2308.5249      3766.5275    
       600   309.54716     -41128.834     -7698.7106      3765.7734    
       700   309.31251     -41141.725     -8394.7437      3765.0194    
       800   308.62108     -41150.795     -7103.1469      3764.2653    
       900   290.54747     -41133.064      5590.909       3763.5113    
      1000   309.41072     -41149.056     -113.81778      3762.7572    
      1100   302.03556     -41134.254      657.9176       3762.0031    
      1200   300.01971     -41117.166      789.94662      3761.2491    
      1300   295.82617     -41090.568     -8007.6886      3760.495     
      1400   316.38907     -41090.91       1336.1335      3759.741     
      1500   295.73532     -41095.742      10372.625      3758.9869    
      1600   320.52669     -41149.628     -5784.8289      3758.2328    
      1700   283.22256     -41128.776     -14328.248      3757.4788    
      1800   301.87168     -41151.171     -3913.4713      3756.7247    
      1900   304.45282     -41136.304     -2990.4981      3755.9707    
      2000   318.42923     -41121.039     -9333.6636      3755.2166    
      2100   324.25157     -41129.24      -3663.9688      3754.4625    
      2200   283.04746     -41127.996     -12576.026      3753.7085    
      2300   287.56372     -41132.334      7791.2446      3752.9544    
      2400   294.54101     -41119.574      3583.424       3752.2004    
      2500   310.3286      -41117.469      3469.1539      3751.4463    
      2600   319.38075     -41134.72       249.97593      3750.6922    
      2700   283.83935     -41134.604     -11024.638      3749.9382    
      2800   306.68778     -41160.509     -7584.4818      3749.1841    
      2900   296.87707     -41136.304     -5786.2076      3748.4301    
      3000   323.25442     -41146.295     -2865.362       3747.676     
      3100   318.11048     -41128.221     -2620.3282      3746.922     
      3200   320.51543     -41134.468     -7186.1644      3746.1679    
      3300   273.01146     -41116.153      4091.3076      3745.4138    
      3400   294.69779     -41145.256      2412.5055      3744.6598    
      3500   295.9925      -41133.204      1742.1353      3743.9057    
      3600   302.44919     -41125.898      144.46969      3743.1517    
      3700   304.88855     -41118.2       -10706.348      3742.3976    
      3800   316.17264     -41138.224     -10712.747      3741.6435    
      3900   295.25084     -41139.804     -7628.0165      3740.8895    
      4000   289.99539     -41145.283      382.80557      3740.1354    
      4100   283.03581     -41135.196     -2324.4568      3739.3814    
      4200   298.9383      -41116.619      7507.927       3738.6273    
      4300   328.90962     -41131.391      6542.3044      3737.8732    
      4400   307.33255     -41128.4       -1797.6581      3737.1192    
      4500   311.0806      -41151.931     -269.88605      3736.3651    
      4600   303.57253     -41147.775      319.51586      3735.6111    
      4700   293.38014     -41127.744     -10717.608      3734.857     
      4800   320.50662     -41128.254      3889.6702      3734.1029    
      4900   315.13235     -41107.607      1598.0707      3733.3489    
      5000   291.44099     -41130.08      -3056.9739      3732.5948    
Loop time of 230.275 on 16 procs for 5000 steps with 366 atoms

Performance: 0.938 ns/day, 25.586 hours/ns, 21.713 timesteps/s, 7.947 katom-step/s
99.0% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 139.73     | 173.38     | 206.07     | 236.6 | 75.29
Bond    | 0.013376   | 0.013802   | 0.014843   |   0.4 |  0.01
Neigh   | 1.6122     | 1.9663     | 2.3328     |  22.8 |  0.85
Comm    | 2.6732     | 35.342     | 68.959     | 523.8 | 15.35
Output  | 0.014096   | 0.035083   | 0.078155   |  12.1 |  0.02
Modify  | 19.011     | 19.411     | 19.773     |   7.6 |  8.43
Other   |            | 0.1272     |            |       |  0.06

Nlocal:          45.75 ave          53 max          40 min
Histogram: 2 0 0 3 0 0 1 1 0 1
Nghost:        3456.25 ave        3525 max        3400 min
Histogram: 1 1 1 1 1 1 0 1 0 1
Neighs:        31374.4 ave       35979 max       27547 min
Histogram: 2 0 0 2 1 0 0 2 0 1

Total # of neighbors = 250995
Ave neighs/atom = 685.77869
Ave special neighs/atom = 0
Neighbor list builds = 60
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg3

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.724 13.9031 17.2465) with tilt (-7.584 0.1778 0.4371)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*17.2465
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box
fix deform_p all deform 100 z delta 0 ${delta} remap v units box
fix deform_p all deform 100 z delta 0 0.172465 remap v units box
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 3 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos3.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos3.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos3 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos3 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos3 all custom/gz 100 dump/pos_deform3.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 133.7 | 135.2 | 136.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   291.03529     -41137.437     -4896.0768      3770.2978    
       100   307.24091     -41146.68      -2124.7381      3771.0519    
       200   307.7938      -41117.967     -1896.7507      3771.8059    
       300   319.08378     -41109.022     -4856.8342      3772.56      
       400   313.36533     -41113.813      2936.4027      3773.314     
       500   307.48394     -41120.266      3088.66        3774.0681    
       600   293.0098      -41111.966     -4953.8647      3774.8222    
       700   307.17288     -41136.736     -3448.8602      3775.5762    
       800   308.78917     -41153.246      657.16149      3776.3303    
       900   288.11856     -41132.458     -5961.4587      3777.0843    
      1000   293.89645     -41129.165     -565.39165      3777.8384    
      1100   288.84549     -41107.133     -4076.4136      3778.5925    
      1200   305.02235     -41119.79      -1325.2551      3779.3465    
      1300   294.14374     -41127.35      -15009.378      3780.1006    
      1400   273.03698     -41132.53       6356.9429      3780.8546    
      1500   290.04709     -41150.62      -12413.851      3781.6087    
      1600   281.48526     -41119.187     -7445.8289      3782.3628    
      1700   315.51102     -41126.035     -4843.6879      3783.1168    
      1800   288.70001     -41103.317     -2790.7201      3783.8709    
      1900   305.44331     -41136.621     -2971.7421      3784.6249    
      2000   296.27912     -41148.548     -5197.8728      3785.379     
      2100   277.2544      -41132.96      -1568.9671      3786.133     
      2200   298.99433     -41119.951     -8252.8763      3786.8871    
      2300   305.68561     -41112.516     -10574.539      3787.6412    
      2400   309.45674     -41125.285     -6611.0468      3788.3952    
      2500   298.69467     -41137.573     -15471.125      3789.1493    
      2600   301.37861     -41158.201     -13771.483      3789.9033    
      2700   300.45823     -41137.442     -6996.3952      3790.6574    
      2800   312.1498      -41110.868     -7929.5712      3791.4115    
      2900   312.00809     -41121.314     -6415.9039      3792.1655    
      3000   298.64589     -41130.535     -1286.4417      3792.9196    
      3100   301.04367     -41149.866     -6297.4041      3793.6736    
      3200   294.66909     -41154.144     -11941.471      3794.4277    
      3300   286.14134     -41132.278     -15628.048      3795.1818    
      3400   309.54489     -41117.355     -9267.6886      3795.9358    
      3500   317.68278     -41119.704     -7975.1357      3796.6899    
      3600   304.81441     -41130.873     -5635.4491      3797.4439    
      3700   305.15951     -41150.412     -15258.738      3798.198     
      3800   279.67036     -41127.356     -11688.685      3798.9521    
      3900   302.89926     -41130.481      6598.6594      3799.7061    
      4000   318.3422      -41125.131     -5299.2271      3800.4602    
      4100   299.75998     -41105.481     -12584.521      3801.2142    
      4200   313.8886      -41129.845     -3760.0162      3801.9683    
      4300   290.90826     -41123.744     -8639.2281      3802.7224    
      4400   283.72013     -41125.08      -15037.494      3803.4764    
      4500   296.79759     -41130.392     -7069.7416      3804.2305    
      4600   321.68244     -41123.142     -14580.891      3804.9845    
      4700   308.53564     -41107.654     -6542.523       3805.7386    
      4800   308.60015     -41124.455     -6098.9617      3806.4927    
      4900   310.64828     -41138.918     -6568.3373      3807.2467    
      5000   295.9054      -41153.866     -2470.1564      3808.0008    
Loop time of 227.368 on 16 procs for 5000 steps with 366 atoms

Performance: 0.950 ns/day, 25.263 hours/ns, 21.991 timesteps/s, 8.049 katom-step/s
99.0% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 137.07     | 171.22     | 203.37     | 234.3 | 75.30
Bond    | 0.013248   | 0.013917   | 0.014829   |   0.4 |  0.01
Neigh   | 1.6896     | 2.077      | 2.4608     |  23.7 |  0.91
Comm    | 2.5046     | 34.626     | 68.739     | 520.6 | 15.23
Output  | 0.014398   | 0.036077   | 0.079851   |  12.2 |  0.02
Modify  | 18.861     | 19.269     | 19.667     |   8.2 |  8.47
Other   |            | 0.1269     |            |       |  0.06

Nlocal:          45.75 ave          52 max          41 min
Histogram: 1 3 0 0 1 1 0 0 0 2
Nghost:        3402.25 ave        3471 max        3341 min
Histogram: 1 0 3 0 0 0 2 1 0 1
Neighs:        30766.9 ave       34697 max       27684 min
Histogram: 1 3 0 0 1 1 0 0 0 2

Total # of neighbors = 246135
Ave neighs/atom = 672.5
Ave special neighs/atom = 0
Neighbor list builds = 64
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos3

# Delete dir to make sure it is not reused
variable dir delete
# uyz Perturbation
variable dir equal 4
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
variable len0 equal ${lx0}
variable len0 equal 15.724
variable dlen equal 2*(yz-${yz0})
variable dlen equal 2*(yz-0.4371)
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.724 13.9031 17.2465) with tilt (-7.584 0.1778 0.4371)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.001 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*15.724
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.5839999999999996305, deltaxy = 0.07584
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.17780000000000001359, deltaxz = -0.001778
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0.43709999999999998854, deltayz = -0.004371
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no
fix deform_n all deform 100 yz delta ${delta} remap v units box flip no
fix deform_n all deform 100 yz delta -0.15724 remap v units box flip no
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 4 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg4.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg4.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg4 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg4 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg4 all custom/gz 100 dump/neg_deform4.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 133.7 | 135.2 | 136.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   291.03529     -41137.437     -4896.0768      3770.2978    
       100   307.23914     -41146.679     -2125.7819      3770.2978    
       200   308.36396     -41118.115     -2555.4039      3770.2978    
       300   317.06969     -41105.93      -4134.2862      3770.2978    
       400   313.20625     -41112.142      2675.1055      3770.2978    
       500   302.10644     -41112.842      2521.133       3770.2978    
       600   300.38177     -41118.567     -7812.8647      3770.2978    
       700   304.16626     -41132.193     -1319.511       3770.2978    
       800   298.63015     -41140.075     -11616.997      3770.2978    
       900   287.32139     -41150.456      2451.3108      3770.2978    
      1000   275.61418     -41163.203     -11338.649      3770.2978    
      1100   292.80593     -41160.654     -7007.5388      3770.2978    
      1200   293.81778     -41134.252     -5503.0016      3770.2978    
      1300   289.34218     -41117.075     -5571.1895      3770.2978    
      1400   303.37905     -41126.274     -3944.5305      3770.2978    
      1500   311.63446     -41121.297     -9014.9004      3770.2978    
      1600   298.68806     -41106.069     -3694.5909      3770.2978    
      1700   302.20098     -41139.115     -573.45205      3770.2978    
      1800   303.98434     -41148.734     -5784.9525      3770.2978    
      1900   308.69719     -41143.828     -651.19202      3770.2978    
      2000   322.70456     -41127.904      986.57216      3770.2978    
      2100   300.41843     -41093.382     -13426.377      3770.2978    
      2200   304.74913     -41126.017     -1496.2552      3770.2978    
      2300   292.29865     -41131.27      -5580.8204      3770.2978    
      2400   297.39001     -41132.905     -261.45891      3770.2978    
      2500   294.26432     -41124.933      353.26072      3770.2978    
      2600   305.29094     -41113.441     -2216.3199      3770.2978    
      2700   322.06327     -41114.129     -15977.342      3770.2978    
      2800   310.59925     -41128.748     -5595.9016      3770.2978    
      2900   312.57565     -41149.333      3938.6218      3770.2978    
      3000   295.69581     -41133.959      2022.4786      3770.2978    
      3100   301.42017     -41136.295     -13476.699      3770.2978    
      3200   301.94004     -41127.101     -5368.593       3770.2978    
      3300   313.2011      -41127.989     -5767.4639      3770.2978    
      3400   312.85905     -41131.593      2746.6997      3770.2978    
      3500   289.46461     -41139.528     -6972.552       3770.2978    
      3600   280.05345     -41138.711     -2617.3256      3770.2978    
      3700   308.08131     -41146.619     -985.6582       3770.2978    
      3800   307.92495     -41132.826     -1378.9859      3770.2978    
      3900   294.10187     -41123.405     -35.459506      3770.2978    
      4000   282.13157     -41114.578     -3727.8179      3770.2978    
      4100   301.13654     -41132.776     -6714.6046      3770.2978    
      4200   306.70314     -41134.677     -8468.7402      3770.2978    
      4300   298.28908     -41133.969     -15858.095      3770.2978    
      4400   287.2464      -41129.022     -2175.6481      3770.2978    
      4500   292.83579     -41122.608     -2740.1257      3770.2978    
      4600   313.73665     -41123.48      -15147.904      3770.2978    
      4700   300.50359     -41099.005     -2674.1615      3770.2978    
      4800   326.42246     -41109.135      7054.8793      3770.2978    
      4900   312.29411     -41115.807     -8296.0499      3770.2978    
      5000   306.25742     -41142.994      1849.3297      3770.2978    
Loop time of 228.355 on 16 procs for 5000 steps with 366 atoms

Performance: 0.946 ns/day, 25.373 hours/ns, 21.896 timesteps/s, 8.014 katom-step/s
99.0% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 138.29     | 171.97     | 204.48     | 232.0 | 75.31
Bond    | 0.013117   | 0.013939   | 0.015531   |   0.6 |  0.01
Neigh   | 1.667      | 2.075      | 2.4743     |  24.2 |  0.91
Comm    | 2.2046     | 34.688     | 68.326     | 516.2 | 15.19
Output  | 0.014817   | 0.036883   | 0.081076   |  12.3 |  0.02
Modify  | 19.026     | 19.446     | 19.872     |   8.3 |  8.52
Other   |            | 0.1274     |            |       |  0.06

Nlocal:          45.75 ave          51 max          41 min
Histogram: 1 0 0 2 2 1 0 0 0 2
Nghost:           3445 ave        3492 max        3405 min
Histogram: 1 1 1 1 0 2 0 1 0 1
Neighs:        31054.4 ave       34307 max       27924 min
Histogram: 1 0 0 3 1 1 0 0 0 2

Total # of neighbors = 248435
Ave neighs/atom = 678.78415
Ave special neighs/atom = 0
Neighbor list builds = 64
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg4

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.724 13.9031 17.2465) with tilt (-7.584 0.1778 0.4371)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*15.724
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box
fix deform_p all deform 100 yz delta ${delta} remap v units box
fix deform_p all deform 100 yz delta 0.15724 remap v units box
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 4 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos4.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos4.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos4 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos4 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos4 all custom/gz 100 dump/pos_deform4.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 133.7 | 135.2 | 136.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   291.03529     -41137.437     -4896.0768      3770.2978    
       100   307.23646     -41146.685     -2125.1832      3770.2978    
       200   308.46104     -41118.682     -1956.8508      3770.2978    
       300   318.09656     -41107.482     -4918.7658      3770.2978    
       400   310.86452     -41110.324      1420.9567      3770.2978    
       500   309.9832      -41122.365      696.83283      3770.2978    
       600   304.0273      -41123.462      3474.5246      3770.2978    
       700   303.26496     -41131.297     -3181.7636      3770.2978    
       800   296.24265     -41132.5       -265.93764      3770.2978    
       900   293.80756     -41132.019      5115.1149      3770.2978    
      1000   290.35458     -41126.487     -3726.902       3770.2978    
      1100   310.66917     -41144.628      467.90237      3770.2978    
      1200   286.58389     -41121.991      1920.8675      3770.2978    
      1300   283.87754     -41107.15      -4998.2197      3770.2978    
      1400   313.31672     -41113.893      3883.0715      3770.2978    
      1500   306.24182     -41108.755     -8909.6862      3770.2978    
      1600   307.55805     -41149.11      -9079.8324      3770.2978    
      1700   277.7546      -41121.986     -4534.2026      3770.2978    
      1800   305.63332     -41142.721      2603.1301      3770.2978    
      1900   297.83402     -41117.588      2782.5513      3770.2978    
      2000   305.44276     -41106.953     -1506.7394      3770.2978    
      2100   320.91325     -41102.942     -14769.331      3770.2978    
      2200   321.37778     -41120.486     -1528.1828      3770.2978    
      2300   294.91588     -41125.046     -13267.418      3770.2978    
      2400   312.30639     -41156.761      4402.3261      3770.2978    
      2500   291.01898     -41151.746     -9407.022       3770.2978    
      2600   274.85204     -41128.622     -7264.4345      3770.2978    
      2700   327.11664     -41145.922     -22094.757      3770.2978    
      2800   298.26761     -41117.467     -6967.6366      3770.2978    
      2900   298.51072     -41131.226     -11591.29       3770.2978    
      3000   303.75691     -41150.678     -5973.4479      3770.2978    
      3100   290.06134     -41155.904     -2992.4703      3770.2978    
      3200   282.59797     -41167.386      4319.4715      3770.2978    
      3300   290.83968     -41153.579     -6424.8791      3770.2978    
      3400   295.08626     -41125.78      -3221.1682      3770.2978    
      3500   317.25958     -41149.718     -8088.0215      3770.2978    
      3600   305.98688     -41136.653     -5968.0966      3770.2978    
      3700   297.49499     -41127.914     -8856.2429      3770.2978    
      3800   295.27978     -41125.823     -9256.2066      3770.2978    
      3900   276.34542     -41109.231      1731.3214      3770.2978    
      4000   293.68796     -41132.917      5492.4435      3770.2978    
      4100   307.68733     -41139.352     -1795.4782      3770.2978    
      4200   307.60915     -41125.73      -10125.163      3770.2978    
      4300   323.91415     -41125.706     -1371.2084      3770.2978    
      4400   298.3501      -41116.058     -5407.9886      3770.2978    
      4500   303.16642     -41147.424     -2200.6818      3770.2978    
      4600   274.95017     -41125.774     -1582.8745      3770.2978    
      4700   302.61784     -41139.575     -9714.1176      3770.2978    
      4800   307.06239     -41128.565     -5471.3332      3770.2978    
      4900   297.19261     -41119.111      3223.5264      3770.2978    
      5000   313.57969     -41137.291     -2770.7165      3770.2978    
Loop time of 228.818 on 16 procs for 5000 steps with 366 atoms

Performance: 0.944 ns/day, 25.424 hours/ns, 21.851 timesteps/s, 7.998 katom-step/s
99.0% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 138.24     | 177.35     | 204.53     | 221.3 | 77.51
Bond    | 0.013399   | 0.014076   | 0.01538    |   0.5 |  0.01
Neigh   | 1.6165     | 2.0945     | 2.4176     |  22.9 |  0.92
Comm    | 2.5643     | 29.73      | 68.824     | 540.4 | 12.99
Output  | 0.014405   | 0.036654   | 0.0817     |  12.5 |  0.02
Modify  | 19.112     | 19.456     | 19.937     |   7.6 |  8.50
Other   |            | 0.1322     |            |       |  0.06

Nlocal:          45.75 ave          50 max          41 min
Histogram: 1 1 0 2 0 0 1 1 0 2
Nghost:        3458.62 ave        3515 max        3411 min
Histogram: 2 0 0 2 1 1 0 0 1 1
Neighs:        31072.8 ave       33753 max       28205 min
Histogram: 2 0 0 2 0 0 1 1 0 2

Total # of neighbors = 248582
Ave neighs/atom = 679.18579
Ave special neighs/atom = 0
Neighbor list builds = 62
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos4

# Delete dir to make sure it is not reused
variable dir delete
# uxz Perturbation
variable dir equal 5
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
variable len0 equal ${ly0}
variable len0 equal 13.9031
variable dlen equal 2*(xz-${xz0})
variable dlen equal 2*(xz-0.1778)
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.724 13.9031 17.2465) with tilt (-7.584 0.1778 0.4371)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*13.9031
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.5839999999999996305, deltaxy = 0.07584
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.17780000000000001359, deltaxz = -0.001778
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0.43709999999999998854, deltayz = -0.004371
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no
fix deform_n all deform 100 xz delta ${delta} remap v units box flip no
fix deform_n all deform 100 xz delta -0.139031 remap v units box flip no
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 5 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg5.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg5.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg5 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg5 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg5 all custom/gz 100 dump/neg_deform5.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 133.7 | 135.2 | 136.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   291.03529     -41137.437     -4896.0768      3770.2978    
       100   307.24093     -41146.687     -2125.1719      3770.2978    
       200   308.22529     -41118.296     -1873.3053      3770.2978    
       300   317.75249     -41107.122     -4197.4861      3770.2978    
       400   312.20968     -41111.599      1547.407       3770.2978    
       500   310.19145     -41122.711      1350.3765      3770.2978    
       600   299.08004     -41118.248     -699.90195      3770.2978    
       700   300.88343     -41129.089     -1763.3346      3770.2978    
       800   306.30735     -41145.781     -21602.978      3770.2978    
       900   299.65983     -41140.8        8881.6822      3770.2978    
      1000   296.74541     -41136.916     -255.64045      3770.2978    
      1100   300.18889     -41135.748     -3319.4321      3770.2978    
      1200   307.8396      -41134.015     -8301.7669      3770.2978    
      1300   319.56292     -41114.588     -5649.6661      3770.2978    
      1400   329.4571      -41112.266     -1967.8439      3770.2978    
      1500   310.5922      -41121.934     -8960.5281      3770.2978    
      1600   292.13031     -41119.055      9923.5989      3770.2978    
      1700   292.29788     -41118.659     -3477.9023      3770.2978    
      1800   288.34779     -41109.227     -5824.5068      3770.2978    
      1900   298.92382     -41121.073      1223.3286      3770.2978    
      2000   297.05028     -41137.88      -17521.866      3770.2978    
      2100   276.34479     -41136.494     -2393.838       3770.2978    
      2200   294.7597      -41151.087     -1963.1342      3770.2978    
      2300   312.5361      -41132.656     -6616.8622      3770.2978    
      2400   308.56385     -41115.144      4455.4505      3770.2978    
      2500   303.9509      -41117.358      1048.9922      3770.2978    
      2600   292.91877     -41119.473     -3045.7419      3770.2978    
      2700   288.9354      -41141.063     -17762.782      3770.2978    
      2800   258.33299     -41131.008     -3129.4503      3770.2978    
      2900   307.25065     -41138.518     -14869.253      3770.2978    
      3000   311.67394     -41127.626     -1390.9845      3770.2978    
      3100   298.20415     -41119.588     -12054.212      3770.2978    
      3200   306.67075     -41142.122     -4235.6026      3770.2978    
      3300   303.14493     -41152.374      325.04771      3770.2978    
      3400   299.47972     -41144.716     -3142.0895      3770.2978    
      3500   301.17278     -41118.541      1836.2901      3770.2978    
      3600   312.81041     -41121.985     -3045.3141      3770.2978    
      3700   295.23741     -41118.513     -2835.137       3770.2978    
      3800   310.81397     -41156.604     -2192.4442      3770.2978    
      3900   295.23306     -41143.412     -7707.3079      3770.2978    
      4000   307.72793     -41140.716     -13270.602      3770.2978    
      4100   295.08518     -41110.212     -7241.4803      3770.2978    
      4200   313.08919     -41116.298     -7828.9229      3770.2978    
      4300   311.6787      -41129.757     -1802.6468      3770.2978    
      4400   286.61884     -41133.672     -9169.4656      3770.2978    
      4500   300.46774     -41148.011      5373.6977      3770.2978    
      4600   291.24961     -41126.865     -8535.685       3770.2978    
      4700   306.1528      -41131.708     -2305.8855      3770.2978    
      4800   323.15294     -41119.902     -6415.8456      3770.2978    
      4900   311.07738     -41092.444     -10031.731      3770.2978    
      5000   303.34002     -41114.353     -728.16267      3770.2978    
Loop time of 228.799 on 16 procs for 5000 steps with 366 atoms

Performance: 0.944 ns/day, 25.422 hours/ns, 21.853 timesteps/s, 7.998 katom-step/s
98.9% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 138.33     | 181.16     | 204.39     | 205.0 | 79.18
Bond    | 0.013081   | 0.014152   | 0.015316   |   0.5 |  0.01
Neigh   | 1.6612     | 2.1362     | 2.4512     |  21.2 |  0.93
Comm    | 2.6439     | 25.871     | 68.7       | 542.3 | 11.31
Output  | 0.014603   | 0.035619   | 0.078676   |  12.0 |  0.02
Modify  | 19.127     | 19.443     | 19.94      |   7.1 |  8.50
Other   |            | 0.136      |            |       |  0.06

Nlocal:          45.75 ave          53 max          40 min
Histogram: 1 0 2 0 3 0 1 0 0 1
Nghost:        3437.38 ave        3490 max        3396 min
Histogram: 1 1 1 2 0 0 1 0 1 1
Neighs:        31072.8 ave       35694 max       27263 min
Histogram: 1 0 2 0 3 0 1 0 0 1

Total # of neighbors = 248582
Ave neighs/atom = 679.18579
Ave special neighs/atom = 0
Neighbor list builds = 62
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg5

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.724 13.9031 17.2465) with tilt (-7.584 0.1778 0.4371)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.004 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*13.9031
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box
fix deform_p all deform 100 xz delta ${delta} remap v units box
fix deform_p all deform 100 xz delta 0.139031 remap v units box
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 5 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos5.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos5.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos5 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos5 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos5 all custom/gz 100 dump/pos_deform5.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 133.7 | 135.2 | 136.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   291.03529     -41137.437     -4896.0768      3770.2978    
       100   307.23466     -41146.676     -2125.4488      3770.2978    
       200   307.92874     -41117.913     -1838.6696      3770.2978    
       300   317.96556     -41106.806     -4186.6547      3770.2978    
       400   314.1639      -41114.341      1956.2727      3770.2978    
       500   306.29524     -41117.92       4308.1926      3770.2978    
       600   298.67561     -41117.243     -8530.434       3770.2978    
       700   299.36034     -41129.244      116.34626      3770.2978    
       800   297.72823     -41141.24      -6399.45        3770.2978    
       900   297.38988     -41140.187     -1323.6757      3770.2978    
      1000   291.56244     -41130.994     -3124.2544      3770.2978    
      1100   290.15013     -41119.231     -1507.8077      3770.2978    
      1200   299.89308     -41111.3       -3673.4202      3770.2978    
      1300   309.27032     -41111.564      3066.8837      3770.2978    
      1400   284.44378     -41123.477     -9668.2312      3770.2978    
      1500   272.14858     -41124.947     -3034.3288      3770.2978    
      1600   300.05238     -41144.916     -12958.909      3770.2978    
      1700   314.15331     -41139.696      2392.0406      3770.2978    
      1800   322.62684     -41134.611      1876.579       3770.2978    
      1900   316.07728     -41137.528      607.29794      3770.2978    
      2000   302.42371     -41132.835     -5586.5741      3770.2978    
      2100   290.08976     -41126.02      -9456.0662      3770.2978    
      2200   287.79948     -41129.876      3544.5811      3770.2978    
      2300   284.10823     -41134.567     -3296.5635      3770.2978    
      2400   277.43263     -41128.3       -11628.95       3770.2978    
      2500   315.24061     -41140.608      2717.3721      3770.2978    
      2600   308.11929     -41119.945      10239.143      3770.2978    
      2700   301.38976     -41123.69      -3311.0611      3770.2978    
      2800   305.22399     -41159.629     -4782.5019      3770.2978    
      2900   279.83419     -41152.615     -309.67404      3770.2978    
      3000   274.63952     -41131.249      799.7084       3770.2978    
      3100   302.12264     -41143.253     -3801.9016      3770.2978    
      3200   303.80689     -41131.584      850.52131      3770.2978    
      3300   305.44796     -41124.309      756.85219      3770.2978    
      3400   307.20247     -41132.429      188.49169      3770.2978    
      3500   292.77219     -41134.535     -419.30709      3770.2978    
      3600   295.30809     -41151.517     -7515.9785      3770.2978    
      3700   280.79537     -41131.828     -6417.8449      3770.2978    
      3800   298.45285     -41116.629      1907.0557      3770.2978    
      3900   306.5729      -41120.28      -6515.1142      3770.2978    
      4000   310.79464     -41138.014     -13095.701      3770.2978    
      4100   285.81228     -41127.869     -7369.4154      3770.2978    
      4200   297.40132     -41143.816      838.24549      3770.2978    
      4300   291.11607     -41134.798     -3012.2758      3770.2978    
      4400   297.04612     -41134.516     -2834.8678      3770.2978    
      4500   300.3844      -41125.799     -7386.1732      3770.2978    
      4600   298.28678     -41111.686     -2856.9225      3770.2978    
      4700   320.25216     -41126.983     -3811.3947      3770.2978    
      4800   308.33445     -41126.885      3653.685       3770.2978    
      4900   297.49763     -41136.736     -16090.789      3770.2978    
      5000   300.15179     -41150.218     -10872.988      3770.2978    
Loop time of 224.988 on 16 procs for 5000 steps with 366 atoms

Performance: 0.960 ns/day, 24.999 hours/ns, 22.223 timesteps/s, 8.134 katom-step/s
99.0% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 136.79     | 175.31     | 200.36     | 180.5 | 77.92
Bond    | 0.012628   | 0.013546   | 0.014494   |   0.6 |  0.01
Neigh   | 1.6215     | 2.0949     | 2.4983     |  20.3 |  0.93
Comm    | 3.0754     | 28.144     | 66.679     | 450.3 | 12.51
Output  | 0.015226   | 0.036304   | 0.079569   |  11.9 |  0.02
Modify  | 18.765     | 19.246     | 19.758     |   7.3 |  8.55
Other   |            | 0.1407     |            |       |  0.06

Nlocal:          45.75 ave          53 max          41 min
Histogram: 2 1 0 1 1 1 1 0 0 1
Nghost:        3438.75 ave        3508 max        3377 min
Histogram: 2 0 1 1 1 1 0 0 0 2
Neighs:        31078.4 ave       35748 max       27899 min
Histogram: 2 1 0 1 1 1 1 0 0 1

Total # of neighbors = 248627
Ave neighs/atom = 679.30874
Ave special neighs/atom = 0
Neighbor list builds = 61
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos5

# Delete dir to make sure it is not reused
variable dir delete
# uxy Perturbation
variable dir equal 6
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"
variable len0 equal ${lz0}
variable len0 equal 17.2465
variable dlen equal 2*(xy-${xy0})
variable dlen equal 2*(xy--7.584)

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.724 13.9031 17.2465) with tilt (-7.584 0.1778 0.4371)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*17.2465
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.5839999999999996305, deltaxy = 0.07584
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.17780000000000001359, deltaxz = -0.001778
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0.43709999999999998854, deltayz = -0.004371
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no
fix deform_n all deform 100 xy delta ${delta} remap v units box flip no
fix deform_n all deform 100 xy delta -0.172465 remap v units box flip no

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 6 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg6.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg6.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg6 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg6 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg6 all custom/gz 100 dump/neg_deform6.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 133.7 | 135.2 | 136.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   291.03529     -41137.437     -4896.0768      3770.2978    
       100   307.23779     -41146.682     -2125.559       3770.2978    
       200   307.25498     -41116.961     -1360.2079      3770.2978    
       300   316.81091     -41105.38      -2417.1571      3770.2978    
       400   313.24717     -41111.717      3250.9557      3770.2978    
       500   315.97568     -41126.125     -506.27052      3770.2978    
       600   300.39349     -41119.404     -5119.0665      3770.2978    
       700   304.8293      -41133.053      151.16561      3770.2978    
       800   295.66133     -41131.987      1016.6198      3770.2978    
       900   309.44017     -41147.54       6196.3542      3770.2978    
      1000   294.36595     -41125.292      657.66813      3770.2978    
      1100   299.47825     -41127.088     -2768.2983      3770.2978    
      1200   282.99174     -41116.926     -8444.6983      3770.2978    
      1300   293.91181     -41133.359     -12193.345      3770.2978    
      1400   273.04469     -41114.867     -1951.2994      3770.2978    
      1500   303.46466     -41132.216     -4461.662       3770.2978    
      1600   312.71667     -41122.551      2969.9535      3770.2978    
      1700   303.88725     -41113.594     -4069.2964      3770.2978    
      1800   292.26186     -41135.856     -12263.238      3770.2978    
      1900   284.62249     -41134.961     -4402.9378      3770.2978    
      2000   276.1902      -41111.815      3801.6831      3770.2978    
      2100   296.73293     -41120.19       337.05459      3770.2978    
      2200   303.31456     -41127.35      -2542.0864      3770.2978    
      2300   317.22981     -41143.117     -3592.7332      3770.2978    
      2400   282.95417     -41124.49      -9654.6628      3770.2978    
      2500   288.9575      -41144.705     -1190.2605      3770.2978    
      2600   301.78317     -41157.334     -3758.5709      3770.2978    
      2700   293.1237      -41123.665     -10756.397      3770.2978    
      2800   305.16122     -41112.973      2899.8341      3770.2978    
      2900   293.17214     -41110.635      2937.1833      3770.2978    
      3000   294.27942     -41123.755      7393.7408      3770.2978    
      3100   302.96085     -41143.867     -4721.31        3770.2978    
      3200   292.28598     -41149.881     -2196.7878      3770.2978    
      3300   286.86611     -41164.51      -3136.9719      3770.2978    
      3400   283.91235     -41145.78      -7030.545       3770.2978    
      3500   303.0532      -41138.792     -5555.1985      3770.2978    
      3600   309.40864     -41135.193     -818.86183      3770.2978    
      3700   299.111       -41121.768     -3270.8887      3770.2978    
      3800   292.42494     -41127.847     -6394.1121      3770.2978    
      3900   288.48101     -41150.826     -3371.9526      3770.2978    
      4000   274.15778     -41141.748     -3997.5314      3770.2978    
      4100   294.59829     -41133.963     -12222.661      3770.2978    
      4200   294.87467     -41114.919     -5465.3392      3770.2978    
      4300   306.3629      -41126.883     -11551.448      3770.2978    
      4400   306.16828     -41137.157     -10241.293      3770.2978    
      4500   272.19811     -41126.598     -4153.3989      3770.2978    
      4600   290.06723     -41141.709      5253.8169      3770.2978    
      4700   295.40289     -41106.81       5610.0178      3770.2978    
      4800   312.17103     -41119.291      3330.0219      3770.2978    
      4900   310.92743     -41131.252     -6867.8375      3770.2978    
      5000   289.787       -41127.109     -5072.6433      3770.2978    
Loop time of 168.935 on 16 procs for 5000 steps with 366 atoms

Performance: 1.279 ns/day, 18.771 hours/ns, 29.597 timesteps/s, 10.833 katom-step/s
98.9% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 132.48     | 137.48     | 149.92     |  53.4 | 81.38
Bond    | 0.011702   | 0.012727   | 0.014687   |   0.8 |  0.01
Neigh   | 1.5867     | 1.7097     | 1.9326     |   9.1 |  1.01
Comm    | 1.4372     | 13.862     | 18.851     | 168.0 |  8.21
Output  | 0.011656   | 0.032246   | 0.074856   |  12.4 |  0.02
Modify  | 15.487     | 15.708     | 15.833     |   3.1 |  9.30
Other   |            | 0.126      |            |       |  0.07

Nlocal:          45.75 ave          54 max          40 min
Histogram: 2 0 2 1 1 0 0 0 0 2
Nghost:        3455.88 ave        3506 max        3412 min
Histogram: 2 0 0 2 1 1 0 0 0 2
Neighs:        31060.2 ave       36433 max       27257 min
Histogram: 2 0 1 2 1 0 0 0 0 2

Total # of neighbors = 248482
Ave neighs/atom = 678.91257
Ave special neighs/atom = 0
Neighbor list builds = 61
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg6

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.724 13.9031 17.2465) with tilt (-7.584 0.1778 0.4371)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*17.2465
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box
fix deform_p all deform 100 xy delta ${delta} remap v units box
fix deform_p all deform 100 xy delta 0.172465 remap v units box

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 6 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos6.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos6.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos6 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos6 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos6 all custom/gz 100 dump/pos_deform6.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 133.7 | 135.2 | 136.9 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   291.03529     -41137.437     -4896.0768      3770.2978    
       100   307.23779     -41146.682     -2125.559       3770.2978    
       200   307.56771     -41117.66      -1593.8041      3770.2978    
       300   319.52823     -41109.178     -4984.8809      3770.2978    
       400   312.39367     -41112.491      4153.5369      3770.2978    
       500   310.06964     -41124.342     -265.79578      3770.2978    
       600   307.46468     -41130.348     -3620.015       3770.2978    
       700   310.41456     -41142.263     -1815.4098      3770.2978    
       800   302.37189     -41146.593     -4847.6455      3770.2978    
       900   281.70106     -41131.646      10687.4        3770.2978    
      1000   287.48299     -41112.399     -6899.7128      3770.2978    
      1100   316.78345     -41116.077      2827.0943      3770.2978    
      1200   308.12719     -41111.753     -4679.6602      3770.2978    
      1300   303.33556     -41136.824      4543.2135      3770.2978    
      1400   266.46207     -41114.923     -9814.8142      3770.2978    
      1500   302.47686     -41142.382     -10396.638      3770.2978    
      1600   304.31013     -41129.435      3323.7047      3770.2978    
      1700   318.32658     -41112.279      361.63541      3770.2978    
      1800   331.75424     -41108.59      -1120.014       3770.2978    
      1900   306.3596      -41108.946      4663.9338      3770.2978    
      2000   315.70725     -41132.694     -9359.8258      3770.2978    
      2100   286.80847     -41121.901     -1529.311       3770.2978    
      2200   293.27042     -41134.762      4523.297       3770.2978    
      2300   308.40207     -41145.86      -3901.2686      3770.2978    
      2400   313.78666     -41129.356     -1048.6027      3770.2978    
      2500   314.73927     -41115.436      3161.7932      3770.2978    
      2600   302.34048     -41118.11      -3800.7714      3770.2978    
      2700   286.31279     -41137.458     -8885.4984      3770.2978    
      2800   289.08081     -41144.473     -6999.4907      3770.2978    
      2900   303.52377     -41143.586     -2233.0009      3770.2978    
      3000   295.79742     -41114.041     -13247.126      3770.2978    
      3100   323.95177     -41130.506      22.620192      3770.2978    
      3200   311.47304     -41124.32      -5329.5701      3770.2978    
      3300   283.96001     -41102.994     -3564.1676      3770.2978    
      3400   311.10805     -41133.097     -3723.5611      3770.2978    
      3500   302.07719     -41145.025      6952.0684      3770.2978    
      3600   273.81517     -41148.597     -7349.1918      3770.2978    
      3700   278.98596     -41152.257     -6834.6302      3770.2978    
      3800   288.20835     -41141.912     -2872.4833      3770.2978    
      3900   279.31728     -41114.931     -4069.623       3770.2978    
      4000   311.82848     -41134.9       -4281.7536      3770.2978    
      4100   308.88383     -41132.065      7928.3562      3770.2978    
      4200   291.78061     -41137.478     -828.9904       3770.2978    
      4300   293.76008     -41163.507     -3645.2549      3770.2978    
      4400   300.6258      -41154.563     -11093.509      3770.2978    
      4500   300.38907     -41131.094     -7157.9231      3770.2978    
      4600   311.09979     -41138.278     -1050.5439      3770.2978    
      4700   297.01542     -41132.671      681.81496      3770.2978    
      4800   295.06647     -41143.699      719.29985      3770.2978    
      4900   274.41831     -41151.694      13569.452      3770.2978    
      5000   271.72144     -41149.675     -4009.839       3770.2978    
Loop time of 140.609 on 16 procs for 5000 steps with 366 atoms

Performance: 1.536 ns/day, 15.623 hours/ns, 35.560 timesteps/s, 13.015 katom-step/s
98.8% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 118.73     | 120.94     | 122.79     |  14.3 | 86.01
Bond    | 0.010691   | 0.011538   | 0.013178   |   0.7 |  0.01
Neigh   | 1.6205     | 1.6917     | 1.7508     |   4.0 |  1.20
Comm    | 1.403      | 3.2693     | 5.5093     |  87.3 |  2.33
Output  | 0.010867   | 0.031161   | 0.073276   |  12.5 |  0.02
Modify  | 14.485     | 14.539     | 14.615     |   1.3 | 10.34
Other   |            | 0.1225     |            |       |  0.09

Nlocal:          45.75 ave          52 max          40 min
Histogram: 1 1 1 0 2 1 0 0 0 2
Nghost:        3419.88 ave        3459 max        3382 min
Histogram: 1 0 2 0 1 1 0 1 1 1
Neighs:        31060.4 ave       35087 max       27204 min
Histogram: 1 1 1 0 2 0 1 0 0 2

Total # of neighbors = 248483
Ave neighs/atom = 678.9153
Ave special neighs/atom = 0
Neighbor list builds = 63
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos6

# Delete dir to make sure it is not reused
variable dir delete

# Calc and output
# include calc.mod.lmp

Total wall time: 0:43:07
