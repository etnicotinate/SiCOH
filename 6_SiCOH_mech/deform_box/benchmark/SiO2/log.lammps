LAMMPS (2 Aug 2023 - Update 2)
  using 2 OpenMP thread(s) per MPI task
# Initialization
units           real
dimension       3
boundary        p p p
# boundary        s s s
atom_style      full
timestep        0.5   # fs

# Define MD parameters
variable nevery equal 10                  # sampling interval
variable nrepeat equal 10                 # number of samples
variable nfreq equal ${nevery}*${nrepeat} # length of one average
variable nfreq equal 10*${nrepeat} 
variable nfreq equal 10*10 
variable nthermo equal ${nfreq}           # interval for thermo output
variable nthermo equal 100           
# 1 ps : 1e3 fs / 0.5 fs = 2e3 steps
variable nequil equal 50*${nthermo}       # steps of equilibration run 10
variable nequil equal 50*100       
variable nrun equal 50*${nthermo}          # stpes of equilibrated run 10
variable nrun equal 50*100          
variable temp equal 300.0                # temperature of initial sample
variable tdamp equal 50.0                 # time constant for thermostat
variable seed equal 123456                # seed for thermostat
variable ufac equal 1.01325e-4         # pressure unit conversion, from atm to Gpa
variable up equal 0.01                  # the deformation magnitude 0.1
variable FF string "CHOFe.ff O Si"          # force field args for pair_coeff
# pair_coeff * * CHONSSi.ff C H O Si
# pair_coeff * * CHOSiNa.ff C H O Si
# pair_coeff * * SiOCHN_2018.ff C H O Si
# pair_coeff * * PDMSDecomp.ff C H O Si
# pair_coeff * * CHONSi.ff C H O Si
# pair_coeff * * CHOFe.ff O Si

# Read the initial sctructure
# box tilt large
variable structure string 333SiO2-1_eq

read_data       ${structure}.data
read_data       333SiO2-1_eq.data
Reading data file ...
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  reading atoms ...
  243 atoms
  reading velocities ...
  243 velocities
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.001 seconds
  read_data CPU = 0.027 seconds

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)
# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400

# # Energy minimization
# print "*****Minimization starts.*****"
# minimize 1.0e-6 1.0e-6 100 1000
# min_style cg
# # Save the optimized structure
# write_data ${structure}_opt.data
# velocity        all create ${temp} ${seed} dist gaussian

# # Equilibration
# include ff.mod.lmp
# if "$(is_defined(fix,avgp))" then "unfix avgp"
# if "$(is_defined(fix,avgl))" then "unfix avgl"
# thermo_style custom step temp pe press density vol
# run ${nequil}
# # Save the equilibrated structure
# write_data ${structure}_eq.data

# use tmp to save initial length and tilt
variable tmp equal lx
variable lx0 equal ${tmp}
variable lx0 equal 14.6913
variable tmp equal ly
variable ly0 equal ${tmp}
variable ly0 equal 12.723
variable tmp equal lz
variable lz0 equal ${tmp}
variable lz0 equal 15.9631

variable tmp equal yz
variable yz0 equal ${tmp}
variable yz0 equal 0
variable tmp equal xz
variable xz0 equal ${tmp}
variable xz0 equal 0
variable tmp equal xy
variable xy0 equal ${tmp}
variable xy0 equal -7.3456

# Write restart
write_restart equil.res
System init for write_restart ...
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none

# dir: direction
# uxx Perturbation
variable dir equal 1
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
variable len0 equal ${lx0}
variable len0 equal 14.6913
variable dlen equal lx-${len0}
variable dlen equal lx-14.6913
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.004 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*14.6913
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.3456000000000001293, deltaxy = 0.073456
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0, deltaxz = -0
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0, deltayz = -0
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.146913 xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.146913 xy delta 0.073456 xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.146913 xy delta 0.073456 xz delta -0 remap v units box flip no
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 1 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg1.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg1.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg1 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg1 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg1 all custom/gz 100 dump/neg_deform1.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Your simulation uses code contributions which should be cited:

- pair reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 number =  {4--5},
 pages =   {245--259}
}

- fix qeq/reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 pages =   {245--259}
}

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 107.4 | 107.6 | 107.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   304.60255     -36695.294      14914.362      2983.7813    
       100   323.41922     -36714.085      14346.699      2983.1845    
       200   296.52646     -36723.692      13630.003      2982.5878    
       300   289.69126     -36725.316      12844.749      2981.991     
       400   278.12276     -36710.77       10813.573      2981.3943    
       500   292.5151      -36705.721      12420.356      2980.7975    
       600   322.85876     -36722.023      17116.208      2980.2008    
       700   289.46171     -36701.93       5565.3248      2979.604     
       800   310.03419     -36717.919      15181.169      2979.0073    
       900   302.22266     -36713.185      13939.275      2978.4105    
      1000   287.88947     -36720.325      7617.017       2977.8137    
      1100   272.63944     -36738.393      16613.822      2977.217     
      1200   273.0474      -36729.833      15867.446      2976.6202    
      1300   294.81894     -36725.388      9602.3351      2976.0235    
      1400   313.52497     -36727.524      19386.132      2975.4267    
      1500   313.15342     -36714.483      11582.915      2974.83      
      1600   294.05702     -36691.913      15004.008      2974.2332    
      1700   312.4817      -36704.36       20172.259      2973.6364    
      1800   321.41474     -36724.835      11979.905      2973.0397    
      1900   288.70469     -36719.985      10123.812      2972.4429    
      2000   278.46159     -36718.588      13251.525      2971.8462    
      2100   294.07705     -36711.564      19774.225      2971.2494    
      2200   295.86897     -36691.699      13354.878      2970.6527    
      2300   316.48964     -36711.285      8587.3579      2970.0559    
      2400   282.56601     -36704.278      18538.833      2969.4592    
      2500   292.62537     -36722.96       13096.547      2968.8624    
      2600   265.62678     -36696.733      13378.381      2968.2656    
      2700   304.90714     -36716.807      17827.82       2967.6689    
      2800   307.17849     -36719.232      21113.944      2967.0721    
      2900   289.83889     -36709.97       13186.646      2966.4754    
      3000   263.81867     -36698.897      14651.834      2965.8786    
      3100   306.37971     -36718.415      13622.102      2965.2819    
      3200   308.26989     -36700.961      20393.088      2964.6851    
      3300   308.11048     -36700.439      13862.802      2964.0883    
      3400   293.94115     -36719.123      14964.566      2963.4916    
      3500   289.48621     -36716.883      20671.316      2962.8948    
      3600   295.45416     -36709.528      16006.056      2962.2981    
      3700   317.8559      -36716.161      8356.7784      2961.7013    
      3800   296.8947      -36713.45       25401.132      2961.1046    
      3900   273.71778     -36713.294      13720.312      2960.5078    
      4000   298.01018     -36723.55       16461.699      2959.9111    
      4100   319.52071     -36724.137      24226.827      2959.3143    
      4200   311.03162     -36705.246      17689.817      2958.7175    
      4300   326.19089     -36688.479      11055.996      2958.1208    
      4400   314.39245     -36684.125      25715.336      2957.524     
      4500   296.03884     -36703.996      21676.372      2956.9273    
      4600   285.23352     -36704.785      12548.247      2956.3305    
      4700   297.234       -36718.37       15136.127      2955.7338    
      4800   309.12116     -36730.883      14212.715      2955.137     
      4900   296.95965     -36708.88       17172.198      2954.5402    
      5000   318.47251     -36706.986      22965.217      2953.9435    
Loop time of 201.981 on 16 procs for 5000 steps with 243 atoms

Performance: 1.069 ns/day, 22.442 hours/ns, 24.755 timesteps/s, 6.015 katom-step/s
98.9% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 161.87     | 172.14     | 179.85     |  47.4 | 85.22
Bond    | 0.014445   | 0.015234   | 0.015996   |   0.4 |  0.01
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 6.348      | 14.056     | 24.327     | 166.2 |  6.96
Output  | 0.01696    | 0.031019   | 0.078013   |  13.4 |  0.02
Modify  | 15.581     | 15.625     | 15.663     |   0.7 |  7.74
Other   |            | 0.1177     |            |       |  0.06

Nlocal:         30.375 ave          33 max          25 min
Histogram: 1 1 0 0 0 0 1 1 1 3
Nghost:        2704.62 ave        2714 max        2697 min
Histogram: 1 0 1 1 3 0 0 1 0 1
Neighs:        17557.8 ave       19050 max       14522 min
Histogram: 1 1 0 0 0 0 1 1 1 3

Total # of neighbors = 140462
Ave neighs/atom = 578.03292
Ave special neighs/atom = 0
Neighbor list builds = 0
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg1

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.004 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*14.6913
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.146913 xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.146913 xy delta -0.073456 xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.146913 xy delta -0.073456 xz delta 0 remap v units box
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 1 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos1.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos1.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos1 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos1 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos1 all custom/gz 100 dump/pos_deform1.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 107.4 | 107.6 | 107.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   304.60255     -36695.294      14914.362      2983.7813    
       100   323.41922     -36714.085      14340.961      2984.3781    
       200   297.79962     -36725.076      9842.4236      2984.9748    
       300   289.83443     -36725.164      11351.715      2985.5716    
       400   269.37083     -36703.127      7570.363       2986.1683    
       500   320.80191     -36726.078      12335.211      2986.7651    
       600   311.00767     -36714.765      14564.259      2987.3618    
       700   292.39442     -36702.679      17116.99       2987.9586    
       800   306.06639     -36718.474      15736.228      2988.5554    
       900   311.26048     -36725.41       12188.75       2989.1521    
      1000   297.16111     -36717.391      13720.854      2989.7489    
      1100   288.14231     -36706.972      12857.037      2990.3456    
      1200   311.36013     -36721.884      9490.481       2990.9424    
      1300   312.92786     -36720.819      8557.385       2991.5391    
      1400   304.65065     -36729.089      12844.929      2992.1359    
      1500   259.49444     -36717.018      7347.163       2992.7326    
      1600   303.99642     -36739.566      13383.403      2993.3294    
      1700   297.98091     -36717.12       8874.8336      2993.9262    
      1800   305.42573     -36715.717      11936.274      2994.5229    
      1900   304.05619     -36712.464      8119.4914      2995.1197    
      2000   308.40707     -36724.045      7678.8925      2995.7164    
      2100   284.98437     -36724.081      15669.312      2996.3132    
      2200   287.32349     -36733.253      12647.962      2996.9099    
      2300   303.24781     -36726.055      6719.2735      2997.5067    
      2400   308.66184     -36712.766      15538.552      2998.1035    
      2500   302.93848     -36705.335      18147.042      2998.7002    
      2600   308.27016     -36710.355      12638.903      2999.297     
      2700   288.43982     -36723.34       11195.556      2999.8937    
      2800   274.93894     -36729.183      13449.995      3000.4905    
      2900   284.5523      -36719.334      6396.2444      3001.0872    
      3000   285.81822     -36701.986      12690.937      3001.684     
      3100   303.62184     -36711.355      6055.2522      3002.2808    
      3200   301.20458     -36711.41       10142.307      3002.8775    
      3300   297.23645     -36713.905      7644.1536      3003.4743    
      3400   286.36292     -36728.215      10096.074      3004.071     
      3500   261.76858     -36719.616      10403.078      3004.6678    
      3600   292.13384     -36713.814      14131.294      3005.2645    
      3700   303.54572     -36706.24       4983.2021      3005.8613    
      3800   314.83779     -36717.475      15124.159      3006.458     
      3900   308.47108     -36724.695      7630.63        3007.0548    
      4000   281.98908     -36718.51       3105.6384      3007.6516    
      4100   261.55313     -36719.896      15213.068      3008.2483    
      4200   304.26116     -36742.607      13747.77       3008.8451    
      4300   291.79151     -36702.48       342.51559      3009.4418    
      4400   305.67406     -36709.318      11052.306      3010.0386    
      4500   317.49657     -36719.455      11616.678      3010.6353    
      4600   286.20898     -36710.761      5620.7067      3011.2321    
      4700   284.72958     -36730.814      6174.4735      3011.8289    
      4800   290.14268     -36745.622      9642.498       3012.4256    
      4900   293.81655     -36717.557      4561.2182      3013.0224    
      5000   318.14097     -36716.316      8761.9013      3013.6191    
Loop time of 200.692 on 16 procs for 5000 steps with 243 atoms

Performance: 1.076 ns/day, 22.299 hours/ns, 24.914 timesteps/s, 6.054 katom-step/s
98.9% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 165.48     | 172.57     | 183.26     |  40.2 | 85.99
Bond    | 0.013393   | 0.014982   | 0.016191   |   0.6 |  0.01
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 1.4244     | 12.109     | 19.172     | 151.2 |  6.03
Output  | 0.018938   | 0.031432   | 0.071877   |  11.8 |  0.02
Modify  | 15.802     | 15.849     | 15.874     |   0.6 |  7.90
Other   |            | 0.1202     |            |       |  0.06

Nlocal:         30.375 ave          33 max          25 min
Histogram: 1 1 0 0 0 0 1 1 1 3
Nghost:        2704.62 ave        2714 max        2697 min
Histogram: 1 0 1 1 3 0 0 1 0 1
Neighs:        17557.8 ave       19050 max       14522 min
Histogram: 1 1 0 0 0 0 1 1 1 3

Total # of neighbors = 140462
Ave neighs/atom = 578.03292
Ave special neighs/atom = 0
Neighbor list builds = 0
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos1

# Delete dir to make sure it is not reused
variable dir delete
# uyy Perturbation
variable dir equal 2
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
variable len0 equal ${ly0}
variable len0 equal 12.723
variable dlen equal ly-${len0}
variable dlen equal ly-12.723
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.004 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*12.723
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.3456000000000001293, deltaxy = 0.073456
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0, deltaxz = -0
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0, deltayz = -0
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 -0.12723 yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 -0.12723 yz delta -0 remap v units box flip no
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 2 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg2.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg2.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg2 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg2 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg2 all custom/gz 100 dump/neg_deform2.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 107.4 | 107.6 | 107.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   304.60255     -36695.294      14914.362      2983.7813    
       100   323.41922     -36714.085      14346.699      2983.1845    
       200   292.84903     -36720.985      9776.6403      2982.5878    
       300   294.59192     -36729.055      13372.637      2981.991     
       400   265.22564     -36700.644      13655.907      2981.3943    
       500   303.10953     -36713.544      11626.956      2980.7975    
       600   303.35498     -36710.816      19460.13       2980.2008    
       700   315.25749     -36721.591      11232.458      2979.604     
       800   305.32045     -36718.979      13517.655      2979.0073    
       900   291.10622     -36709.91       16165.718      2978.4105    
      1000   299.29493     -36725.233      8797.148       2977.8137    
      1100   274.08817     -36722.743      8694.7908      2977.217     
      1200   285.48233     -36724.595      16128.158      2976.6202    
      1300   300.42612     -36709.373      11791.808      2976.0235    
      1400   297.35101     -36700.464      12603.794      2975.4267    
      1500   297.88973     -36709.786      14815.049      2974.83      
      1600   290.21299     -36715.42       15690.697      2974.2332    
      1700   303.25343     -36716.845      15313.78       2973.6364    
      1800   326.09679     -36717.049      16810.562      2973.0397    
      1900   328.31385     -36708.07       19795.973      2972.4429    
      2000   298.73671     -36704.402      15943.678      2971.8462    
      2100   274.85553     -36706.602      10613.289      2971.2494    
      2200   310.04931     -36732.774      18063.948      2970.6527    
      2300   299.4635      -36709.734      6918.4522      2970.0559    
      2400   319.19555     -36696.361      15159.616      2969.4592    
      2500   323.0321      -36696.968      15806.175      2968.8624    
      2600   297.89851     -36707.701      21132.693      2968.2656    
      2700   283.1854      -36701.604      18453.071      2967.6689    
      2800   298.24442     -36720.645      15789.705      2967.0721    
      2900   301.95524     -36729.925      19713.248      2966.4754    
      3000   299.53572     -36720.193      9113.2414      2965.8786    
      3100   327.9659      -36715.631      15306.463      2965.2819    
      3200   312.2093      -36700.772      18654.809      2964.6851    
      3300   306.55885     -36711.712      13324.708      2964.0883    
      3400   290.1252      -36710.165      15478.506      2963.4916    
      3500   285.12159     -36704.263      21818.821      2962.8948    
      3600   280.44696     -36693.896      15129.937      2962.2981    
      3700   320.57357     -36711.199      13626.559      2961.7013    
      3800   307.51472     -36696.258      19651.399      2961.1046    
      3900   300.15531     -36709.588      19315.282      2960.5078    
      4000   268.74042     -36703.33       10593.04       2959.9111    
      4100   316.56124     -36741.546      14319.763      2959.3143    
      4200   275.87424     -36703.57       22972.708      2958.7175    
      4300   319.18826     -36701.524      21087.248      2958.1208    
      4400   318.78014     -36694.566      20227.927      2957.524     
      4500   326.28138     -36726.1        20005.194      2956.9273    
      4600   297.34753     -36717.96       19706.122      2956.3305    
      4700   316.54195     -36729.356      18546.05       2955.7338    
      4800   292.05688     -36702.445      21136.014      2955.137     
      4900   311.66611     -36697.187      19743.991      2954.5402    
      5000   328.96566     -36712.534      23857.084      2953.9435    
Loop time of 201.286 on 16 procs for 5000 steps with 243 atoms

Performance: 1.073 ns/day, 22.365 hours/ns, 24.840 timesteps/s, 6.036 katom-step/s
98.9% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 169.84     | 176.78     | 181.67     |  35.0 | 87.83
Bond    | 0.013984   | 0.015113   | 0.016601   |   0.7 |  0.01
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 3.8059     | 8.6711     | 15.625     | 158.6 |  4.31
Output  | 0.017784   | 0.03097    | 0.074415   |  12.5 |  0.02
Modify  | 15.624     | 15.661     | 15.705     |   0.8 |  7.78
Other   |            | 0.1244     |            |       |  0.06

Nlocal:         30.375 ave          33 max          25 min
Histogram: 1 1 0 0 0 0 1 1 1 3
Nghost:        2704.62 ave        2714 max        2697 min
Histogram: 1 0 1 1 3 0 0 1 0 1
Neighs:        17557.8 ave       19050 max       14522 min
Histogram: 1 1 0 0 0 0 1 1 1 3

Total # of neighbors = 140462
Ave neighs/atom = 578.03292
Ave special neighs/atom = 0
Neighbor list builds = 0
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg2

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*12.723
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 ${delta} yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 0.12723 yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 0.12723 yz delta 0 remap v units box
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 2 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos2.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos2.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos2 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos2 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos2 all custom/gz 100 dump/pos_deform2.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 107.4 | 107.6 | 107.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   304.60255     -36695.294      14914.362      2983.7813    
       100   323.41922     -36714.085      14340.961      2984.3781    
       200   296.60424     -36724.284      12248.593      2984.9748    
       300   290.84528     -36726.671      11133.913      2985.5716    
       400   272.46049     -36706.068      13326.191      2986.1683    
       500   294.99269     -36709.983      16118.122      2986.7651    
       600   308.94975     -36712.777      13631.964      2987.3618    
       700   292.90279     -36699.016      8393.8293      2987.9586    
       800   304.41064     -36711.611      13168.938      2988.5554    
       900   283.12699     -36705.296      15127.274      2989.1521    
      1000   306.20089     -36723.788      5154.0132      2989.7489    
      1100   275.97653     -36693.018      12714.363      2990.3456    
      1200   321.96937     -36694.122      17674.46       2990.9424    
      1300   342.97908     -36713.591      14716.983      2991.5391    
      1400   304.50941     -36711.265      5397.3182      2992.1359    
      1500   291.86985     -36712.765      10973.524      2992.7326    
      1600   299.22457     -36717.289      12921.805      2993.3294    
      1700   317.00601     -36722.092      5052.7181      2993.9262    
      1800   322.50823     -36714.084      11296.661      2994.5229    
      1900   314.11929     -36702.161      15495.575      2995.1197    
      2000   305.00869     -36709.794      7152.4322      2995.7164    
      2100   302.63131     -36731.05       9624.0527      2996.3132    
      2200   280.63287     -36719.688      15553.387      2996.9099    
      2300   292.89813     -36716.502      8918.1189      2997.5067    
      2400   311.87851     -36723.5        10949.373      2998.1035    
      2500   275.54184     -36699.628      15261.438      2998.7002    
      2600   298.83857     -36710.46       12180.068      2999.297     
      2700   294.349       -36695.494      7000.3495      2999.8937    
      2800   311.8548      -36706.386      8361.9255      3000.4905    
      2900   311.2093      -36716.773      14246.234      3001.0872    
      3000   288.72292     -36715.227      4643.4017      3001.684     
      3100   280.48854     -36716.758      9975.2377      3002.2808    
      3200   296.78417     -36714.761      10112.482      3002.8775    
      3300   315.99722     -36702.07       7709.228       3003.4743    
      3400   313.97079     -36701.155      4141.5769      3004.071     
      3500   317.48255     -36721.146      8232.8213      3004.6678    
      3600   297.35961     -36709.827      14891.523      3005.2645    
      3700   301.69326     -36706.807      5328.1586      3005.8613    
      3800   312.42857     -36717.208      3422.7652      3006.458     
      3900   304.17293     -36734.59       7946.4869      3007.0548    
      4000   269.18416     -36723.546      10913.819      3007.6516    
      4100   273.6141      -36706.649      1111.5146      3008.2483    
      4200   305.66043     -36716.888      12800.764      3008.8451    
      4300   308.78324     -36714.474      5317.2529      3009.4418    
      4400   295.31019     -36712.339      2320.1858      3010.0386    
      4500   280.83176     -36719.172      7406.1027      3010.6353    
      4600   286.66157     -36727.477      14221.53       3011.2321    
      4700   309.59199     -36708.072      3239.2455      3011.8289    
      4800   310.41211     -36702.733      3041.3634      3012.4256    
      4900   311.15037     -36713.509      7157.7613      3013.0224    
      5000   287.20015     -36716.714      12907.088      3013.6191    
Loop time of 200.477 on 16 procs for 5000 steps with 243 atoms

Performance: 1.077 ns/day, 22.275 hours/ns, 24.941 timesteps/s, 6.061 katom-step/s
98.9% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 164.51     | 175.24     | 180.73     |  39.7 | 87.41
Bond    | 0.014135   | 0.015222   | 0.016384   |   0.7 |  0.01
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 3.918      | 9.4685     | 20.208     | 171.3 |  4.72
Output  | 0.01819    | 0.030513   | 0.071678   |  11.9 |  0.02
Modify  | 15.562     | 15.589     | 15.618     |   0.5 |  7.78
Other   |            | 0.1333     |            |       |  0.07

Nlocal:         30.375 ave          33 max          25 min
Histogram: 1 1 0 0 0 0 1 1 1 3
Nghost:        2704.62 ave        2714 max        2697 min
Histogram: 1 0 1 1 3 0 0 1 0 1
Neighs:        17557.8 ave       19050 max       14522 min
Histogram: 1 1 0 0 0 0 1 1 1 3

Total # of neighbors = 140462
Ave neighs/atom = 578.03292
Ave special neighs/atom = 0
Neighbor list builds = 0
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos2

# Delete dir to make sure it is not reused
variable dir delete
# uzz Perturbation
variable dir equal 3
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
variable len0 equal ${lz0}
variable len0 equal 15.9631
variable dlen equal lz-${len0}
variable dlen equal lz-15.9631
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.004 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*15.9631
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.3456000000000001293, deltaxy = 0.073456
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0, deltaxz = -0
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0, deltayz = -0
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no
fix deform_n all deform 100 z delta 0 ${delta} remap v units box flip no
fix deform_n all deform 100 z delta 0 -0.159631 remap v units box flip no
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 3 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg3.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg3.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg3 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg3 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg3 all custom/gz 100 dump/neg_deform3.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 107.4 | 107.6 | 107.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   304.60255     -36695.294      14914.362      2983.7813    
       100   323.41922     -36714.085      14346.699      2983.1845    
       200   296.73468     -36724.729      10550.639      2982.5878    
       300   292.96221     -36728.443      12708.432      2981.991     
       400   270.18994     -36703.909      9043.8755      2981.3943    
       500   294.76488     -36706.621      19621.142      2980.7975    
       600   302.09165     -36709.02       13715.154      2980.2008    
       700   302.66666     -36711.378      9347.8216      2979.604     
       800   315.3913      -36723.353      14060.464      2979.0073    
       900   299.47961     -36711.518      15047.435      2978.4105    
      1000   304.11054     -36716.76       8097.9031      2977.8137    
      1100   279.86799     -36700.584      8888.1771      2977.217     
      1200   312.35755     -36721.577      15944.482      2976.6202    
      1300   302.55856     -36709.697      12043.125      2976.0235    
      1400   296.79555     -36711.758      12661.692      2975.4267    
      1500   288.28334     -36706.119      11230.575      2974.83      
      1600   286.22315     -36701.265      10811.854      2974.2332    
      1700   296.47654     -36707.993      9235.6121      2973.6364    
      1800   303.11295     -36718.835      18349.367      2973.0397    
      1900   290.63814     -36719.088      10417.257      2972.4429    
      2000   289.72668     -36727.169      11927.578      2971.8462    
      2100   307.49025     -36729.671      19611.087      2971.2494    
      2200   312.39053     -36709.311      18587.252      2970.6527    
      2300   313.72888     -36703.205      8457.1826      2970.0559    
      2400   302.54358     -36711.353      25716.244      2969.4592    
      2500   298.80409     -36715.127      11428.45       2968.8624    
      2600   301.77053     -36714.099      11942.355      2968.2656    
      2700   301.65159     -36710.8        20933.685      2967.6689    
      2800   313.74454     -36713.634      16024.936      2967.0721    
      2900   301.92477     -36704.765      8182.6849      2966.4754    
      3000   275.29304     -36704.282      21202.118      2965.8786    
      3100   285.47198     -36721.24       19088.248      2965.2819    
      3200   290.56415     -36715.082      8949.5879      2964.6851    
      3300   313.77199     -36705.433      22260.287      2964.0883    
      3400   320.13375     -36703.916      20463.492      2963.4916    
      3500   302.26355     -36702.491      8159.2572      2962.8948    
      3600   288.59777     -36706.791      20338.15       2962.2981    
      3700   322.36624     -36730.345      21625.855      2961.7013    
      3800   307.49018     -36717.409      6673.4848      2961.1046    
      3900   307.32915     -36714.977      17767.381      2960.5078    
      4000   321.62026     -36705.339      18563.592      2959.9111    
      4100   331.65785     -36694.181      12989.989      2959.3143    
      4200   319.92395     -36703.83       20131.264      2958.7175    
      4300   309.05582     -36719.481      19674.457      2958.1208    
      4400   298.18652     -36716.464      11980.711      2957.524     
      4500   294.26327     -36709.658      24371.672      2956.9273    
      4600   316.34542     -36707.283      15983.594      2956.3305    
      4700   338.98744     -36707.517      11931.157      2955.7338    
      4800   303.75551     -36692.972      20412.077      2955.137     
      4900   274.64815     -36702.073      23431.07       2954.5402    
      5000   307.27052     -36727.016      15546.157      2953.9435    
Loop time of 200.872 on 16 procs for 5000 steps with 243 atoms

Performance: 1.075 ns/day, 22.319 hours/ns, 24.891 timesteps/s, 6.049 katom-step/s
98.9% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 167.93     | 173.04     | 178.26     |  26.4 | 86.14
Bond    | 0.014117   | 0.014992   | 0.01583    |   0.5 |  0.01
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 6.9577     | 12.172     | 17.3       |  99.5 |  6.06
Output  | 0.017138   | 0.029995   | 0.072365   |  12.4 |  0.01
Modify  | 15.483     | 15.495     | 15.511     |   0.2 |  7.71
Other   |            | 0.1195     |            |       |  0.06

Nlocal:         30.375 ave          33 max          25 min
Histogram: 1 1 0 0 0 0 1 1 1 3
Nghost:        2704.62 ave        2714 max        2697 min
Histogram: 1 0 1 1 3 0 0 1 0 1
Neighs:        17557.8 ave       19050 max       14522 min
Histogram: 1 1 0 0 0 0 1 1 1 3

Total # of neighbors = 140462
Ave neighs/atom = 578.03292
Ave special neighs/atom = 0
Neighbor list builds = 0
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg3

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.004 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*15.9631
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box
fix deform_p all deform 100 z delta 0 ${delta} remap v units box
fix deform_p all deform 100 z delta 0 0.159631 remap v units box
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 3 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos3.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos3.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos3 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos3 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos3 all custom/gz 100 dump/pos_deform3.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 107.4 | 107.6 | 107.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   304.60255     -36695.294      14914.362      2983.7813    
       100   323.41922     -36714.085      14340.961      2984.3781    
       200   296.33268     -36723.978      8667.105       2984.9748    
       300   292.79657     -36726.901      14391.117      2985.5716    
       400   274.62709     -36707.731      11350.833      2986.1683    
       500   311.36134     -36718.803      16087.683      2986.7651    
       600   294.45139     -36700.831      10920.636      2987.3618    
       700   289.59204     -36701.382      4766.7955      2987.9586    
       800   312.55116     -36722.823      19503.383      2988.5554    
       900   297.56224     -36718.099      9755.9498      2989.1521    
      1000   303.08609     -36723.662      9267.6045      2989.7489    
      1100   315.52962     -36708.255      12073.715      2990.3456    
      1200   307.2085      -36687.109      14988.329      2990.9424    
      1300   284.93868     -36691.495      16803.268      2991.5391    
      1400   296.60902     -36721.583      11354.597      2992.1359    
      1500   293.56491     -36721.698      9574.8694      2992.7326    
      1600   294.86971     -36714.419      13010.384      2993.3294    
      1700   309.21426     -36702.855      11212.057      2993.9262    
      1800   334.49335     -36697.712      12684.963      2994.5229    
      1900   327.82906     -36700.844      11917.235      2995.1197    
      2000   292.57995     -36712.831      14364.83       2995.7164    
      2100   296.41323     -36726.213      12771.515      2996.3132    
      2200   288.12592     -36727.546      14141.167      2996.9099    
      2300   293.36849     -36716.069      11689.944      2997.5067    
      2400   313.74105     -36708.51       10888.834      2998.1035    
      2500   293.70263     -36700.854      7328.0609      2998.7002    
      2600   315.15101     -36729.935      11680.039      2999.297     
      2700   281.25057     -36708.636      11630.952      2999.8937    
      2800   305.98724     -36720.001      6777.5841      3000.4905    
      2900   309.36637     -36720.106      10298.453      3001.0872    
      3000   304.84933     -36712.257      11266.174      3001.684     
      3100   297.5127      -36703.613      3676.9735      3002.2808    
      3200   311.74525     -36720.768      9126.7854      3002.8775    
      3300   288.93622     -36721.226      11391.935      3003.4743    
      3400   280.24577     -36725.782      8328.7801      3004.071     
      3500   288.17028     -36737.086      11043.549      3004.6678    
      3600   291.37532     -36720.964      20649.912      3005.2645    
      3700   306.76121     -36706.885      4530.9744      3005.8613    
      3800   315.55332     -36706.26       5382.3562      3006.458     
      3900   304.46358     -36722.218      12007.17       3007.0548    
      4000   282.30409     -36719.734      6035.7635      3007.6516    
      4100   293.1144      -36720.077      8272.8425      3008.2483    
      4200   291.23993     -36706.862      10322.5        3008.8451    
      4300   301.41354     -36704.149      6539.2582      3009.4418    
      4400   311.73845     -36714.159      3393.4265      3010.0386    
      4500   285.63562     -36703.012      6696.3065      3010.6353    
      4600   323.22824     -36732.856      14653.16       3011.2321    
      4700   288.42258     -36707.845      4465.0753      3011.8289    
      4800   282.16917     -36698.473      7193.9218      3012.4256    
      4900   309.92855     -36701.664      4089.3767      3013.0224    
      5000   327.32204     -36712.272      14389.226      3013.6191    
Loop time of 200.466 on 16 procs for 5000 steps with 243 atoms

Performance: 1.077 ns/day, 22.274 hours/ns, 24.942 timesteps/s, 6.061 katom-step/s
98.9% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 166        | 173.85     | 182.35     |  37.0 | 86.72
Bond    | 0.013746   | 0.015157   | 0.016329   |   0.7 |  0.01
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 2.2421     | 10.731     | 18.576     | 149.1 |  5.35
Output  | 0.016093   | 0.02907    | 0.071806   |  12.7 |  0.01
Modify  | 15.695     | 15.722     | 15.744     |   0.4 |  7.84
Other   |            | 0.1189     |            |       |  0.06

Nlocal:         30.375 ave          33 max          25 min
Histogram: 1 1 0 0 0 0 1 1 1 3
Nghost:        2704.62 ave        2714 max        2697 min
Histogram: 1 0 1 1 3 0 0 1 0 1
Neighs:        17557.8 ave       19050 max       14522 min
Histogram: 1 1 0 0 0 0 1 1 1 3

Total # of neighbors = 140462
Ave neighs/atom = 578.03292
Ave special neighs/atom = 0
Neighbor list builds = 0
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos3

# Delete dir to make sure it is not reused
variable dir delete
# uyz Perturbation
variable dir equal 4
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
variable len0 equal ${lx0}
variable len0 equal 14.6913
variable dlen equal 2*(yz-${yz0})
variable dlen equal 2*(yz-0)
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*14.6913
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.3456000000000001293, deltaxy = 0.073456
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0, deltaxz = -0
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0, deltayz = -0
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no
fix deform_n all deform 100 yz delta ${delta} remap v units box flip no
fix deform_n all deform 100 yz delta -0.146913 remap v units box flip no
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 4 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg4.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg4.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg4 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg4 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg4 all custom/gz 100 dump/neg_deform4.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 107.4 | 107.6 | 107.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   304.60255     -36695.294      14914.362      2983.7813    
       100   323.41922     -36714.085      14343.829      2983.7813    
       200   296.78289     -36724.284      9247.3117      2983.7813    
       300   289.63433     -36724.779      10108.921      2983.7813    
       400   271.8071      -36705.344      11274.039      2983.7813    
       500   299.0217      -36709.709      12664.204      2983.7813    
       600   303.86425     -36709.382      15679.995      2983.7813    
       700   295.49343     -36703.416      8713.1083      2983.7813    
       800   312.80387     -36722.371      13271.542      2983.7813    
       900   299.08619     -36721.091      11591.126      2983.7813    
      1000   270.2729      -36730.8        13288.125      2983.7813    
      1100   259.44274     -36725.758      11954.221      2983.7813    
      1200   289.59385     -36731.857      12434.593      2983.7813    
      1300   289.90821     -36714.786      7892.3626      2983.7813    
      1400   325.66682     -36733.361      12957.6        2983.7813    
      1500   303.98947     -36706.99       16843.248      2983.7813    
      1600   318.64221     -36696.348      14995.87       2983.7813    
      1700   329.27413     -36698.387      9267.6644      2983.7813    
      1800   299.17334     -36717.775      16559.645      2983.7813    
      1900   321.04689     -36740.125      9164.0296      2983.7813    
      2000   297.26505     -36721.22       11911.951      2983.7813    
      2100   297.92747     -36704.337      14900.562      2983.7813    
      2200   344.21396     -36725.697      17675.225      2983.7813    
      2300   306.80969     -36710.131      9690.664       2983.7813    
      2400   280.16334     -36722.1        13137.741      2983.7813    
      2500   291.70225     -36726.169      11857.865      2983.7813    
      2600   284.89207     -36701.752      12770.252      2983.7813    
      2700   326.03883     -36717.205      11879.76       2983.7813    
      2800   288.26948     -36699.295      13416.871      2983.7813    
      2900   303.48595     -36714.98       10176.536      2983.7813    
      3000   300.93893     -36712.014      13638.618      2983.7813    
      3100   325.52607     -36717.751      8708.9067      2983.7813    
      3200   299.15887     -36699.074      12640.989      2983.7813    
      3300   291.24708     -36708.189      14838.592      2983.7813    
      3400   287.0167      -36717.906      11808.125      2983.7813    
      3500   273.4594      -36710.403      7617.2802      2983.7813    
      3600   316.5614      -36720.355      16877.965      2983.7813    
      3700   304.27729     -36691.846      13019.174      2983.7813    
      3800   334.39286     -36712.809      8424.04        2983.7813    
      3900   300.81307     -36718.167      7588.9494      2983.7813    
      4000   310.82874     -36737.068      14126.759      2983.7813    
      4100   288.41568     -36715.747      17729.006      2983.7813    
      4200   284.66629     -36702.107      11670.193      2983.7813    
      4300   317.23144     -36711.021      21999.889      2983.7813    
      4400   324.65489     -36710.742      13447.253      2983.7813    
      4500   301.19595     -36724.189      10438.46       2983.7813    
      4600   288.68544     -36725.009      17784.022      2983.7813    
      4700   303.9251      -36718.201      16294.823      2983.7813    
      4800   289.10341     -36692.728      1936.075       2983.7813    
      4900   314.30017     -36708.338      12035.13       2983.7813    
      5000   304.71551     -36730.806      17848.862      2983.7813    
Loop time of 199.903 on 16 procs for 5000 steps with 243 atoms

Performance: 1.081 ns/day, 22.211 hours/ns, 25.012 timesteps/s, 6.078 katom-step/s
98.9% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 163.18     | 170.83     | 181.68     |  42.3 | 85.46
Bond    | 0.014246   | 0.015176   | 0.015884   |   0.4 |  0.01
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 2.8405     | 13.68      | 21.315     | 149.6 |  6.84
Output  | 0.021782   | 0.035286   | 0.07961    |  11.9 |  0.02
Modify  | 15.213     | 15.227     | 15.237     |   0.2 |  7.62
Other   |            | 0.1174     |            |       |  0.06

Nlocal:         30.375 ave          33 max          25 min
Histogram: 1 1 0 0 0 0 1 1 1 3
Nghost:        2704.62 ave        2714 max        2697 min
Histogram: 1 0 1 1 3 0 0 1 0 1
Neighs:        17557.8 ave       19050 max       14522 min
Histogram: 1 1 0 0 0 0 1 1 1 3

Total # of neighbors = 140462
Ave neighs/atom = 578.03292
Ave special neighs/atom = 0
Neighbor list builds = 0
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg4

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.001 seconds
  read_restart CPU = 0.004 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*14.6913
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box
fix deform_p all deform 100 yz delta ${delta} remap v units box
fix deform_p all deform 100 yz delta 0.146913 remap v units box
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 4 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos4.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos4.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos4 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos4 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos4 all custom/gz 100 dump/pos_deform4.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 107.4 | 107.6 | 107.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   304.60255     -36695.294      14914.362      2983.7813    
       100   323.41922     -36714.085      14343.829      2983.7813    
       200   297.96583     -36725.453      12345.855      2983.7813    
       300   286.23014     -36722.058      11988.458      2983.7813    
       400   270.36211     -36703.618      7748.1845      2983.7813    
       500   298.2259      -36710.401      12157.146      2983.7813    
       600   299.17238     -36705.15       18427.006      2983.7813    
       700   312.73404     -36715.566      17053.799      2983.7813    
       800   294.29584     -36708.318      12607.63       2983.7813    
       900   292.1874      -36714.406      16662.949      2983.7813    
      1000   281.20135     -36715.811      13667.951      2983.7813    
      1100   278.4662      -36728.174      14356.831      2983.7813    
      1200   279.33059     -36724.12       15917.952      2983.7813    
      1300   310.7325      -36719.668      12159.787      2983.7813    
      1400   313.23527     -36716.903      16416.094      2983.7813    
      1500   290.6692      -36708.421      10927.222      2983.7813    
      1600   272.39847     -36704.038      19286.003      2983.7813    
      1700   285.43049     -36713.722      8220.9865      2983.7813    
      1800   308.24834     -36724.468      12158.148      2983.7813    
      1900   306.17002     -36704.886      15317.891      2983.7813    
      2000   321.25694     -36704.175      15144.971      2983.7813    
      2100   295.29154     -36705.51       10173.237      2983.7813    
      2200   277.0754      -36707.122      11250.38       2983.7813    
      2300   300.88879     -36722.911      17733.76       2983.7813    
      2400   283.64928     -36711.691      10855.229      2983.7813    
      2500   293.21618     -36706.6        12847.407      2983.7813    
      2600   321.31692     -36700.407      10494.683      2983.7813    
      2700   314.79897     -36696.241      11646.788      2983.7813    
      2800   299.66077     -36705.26       18708.123      2983.7813    
      2900   306.84846     -36717.793      8579.7883      2983.7813    
      3000   295.85838     -36713.233      14057.654      2983.7813    
      3100   303.08325     -36717.871      15971.73       2983.7813    
      3200   286.97353     -36717.416      14653.071      2983.7813    
      3300   288.30395     -36723.465      12498.377      2983.7813    
      3400   295.91507     -36732.735      14365.921      2983.7813    
      3500   277.51928     -36701.415      12120.811      2983.7813    
      3600   338.33916     -36726.372      12731.387      2983.7813    
      3700   318.41063     -36718.524      13756.289      2983.7813    
      3800   295.22382     -36717.847      14952.648      2983.7813    
      3900   277.97669     -36724.675      19117.552      2983.7813    
      4000   295.94443     -36732.857      21283.899      2983.7813    
      4100   284.62408     -36715.952      11753.548      2983.7813    
      4200   306.7502      -36715.154      10786.369      2983.7813    
      4300   304.48261     -36706.01       14929.803      2983.7813    
      4400   295.4568      -36697.308      12526.841      2983.7813    
      4500   297.58524     -36724.006      11408.979      2983.7813    
      4600   274.90084     -36722.941      11289.429      2983.7813    
      4700   293.8365      -36723.701      18065.713      2983.7813    
      4800   285.93247     -36699.66       10804.877      2983.7813    
      4900   333.1009      -36727.279      12446.084      2983.7813    
      5000   304.09821     -36714.615      13211.38       2983.7813    
Loop time of 199.029 on 16 procs for 5000 steps with 243 atoms

Performance: 1.085 ns/day, 22.114 hours/ns, 25.122 timesteps/s, 6.105 katom-step/s
98.9% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 165.14     | 171.03     | 177.29     |  26.8 | 85.93
Bond    | 0.014413   | 0.015102   | 0.015967   |   0.4 |  0.01
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 6.4745     | 12.699     | 18.62      |  98.6 |  6.38
Output  | 0.018891   | 0.031515   | 0.07335    |  11.9 |  0.02
Modify  | 15.094     | 15.13      | 15.154     |   0.6 |  7.60
Other   |            | 0.1217     |            |       |  0.06

Nlocal:         30.375 ave          33 max          25 min
Histogram: 1 1 0 0 0 0 1 1 1 3
Nghost:        2704.62 ave        2714 max        2697 min
Histogram: 1 0 1 1 3 0 0 1 0 1
Neighs:        17557.8 ave       19050 max       14522 min
Histogram: 1 1 0 0 0 0 1 1 1 3

Total # of neighbors = 140462
Ave neighs/atom = 578.03292
Ave special neighs/atom = 0
Neighbor list builds = 0
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos4

# Delete dir to make sure it is not reused
variable dir delete
# uxz Perturbation
variable dir equal 5
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
variable len0 equal ${ly0}
variable len0 equal 12.723
variable dlen equal 2*(xz-${xz0})
variable dlen equal 2*(xz-0)
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*12.723
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.3456000000000001293, deltaxy = 0.073456
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0, deltaxz = -0
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0, deltayz = -0
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no
fix deform_n all deform 100 xz delta ${delta} remap v units box flip no
fix deform_n all deform 100 xz delta -0.12723 remap v units box flip no
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 5 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg5.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg5.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg5 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg5 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg5 all custom/gz 100 dump/neg_deform5.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 107.4 | 107.6 | 107.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   304.60255     -36695.294      14914.362      2983.7813    
       100   323.41922     -36714.085      14343.829      2983.7813    
       200   296.23656     -36723.965      11957.068      2983.7813    
       300   296.80128     -36730.244      14650.068      2983.7813    
       400   276.71198     -36709.456      13258.975      2983.7813    
       500   315.61457     -36722.296      11755.254      2983.7813    
       600   292.93067     -36700.547      20070.827      2983.7813    
       700   309.85292     -36711.887      6650.7092      2983.7813    
       800   307.27637     -36719.068      15709.774      2983.7813    
       900   289.94541     -36713.014      15058.658      2983.7813    
      1000   306.55981     -36730.681      13487.61       2983.7813    
      1100   272.86439     -36723.931      13733.036      2983.7813    
      1200   280.57929     -36731.269      16495.637      2983.7813    
      1300   293.16531     -36712.779      7740.7047      2983.7813    
      1400   303.0774      -36708.348      9824.0933      2983.7813    
      1500   321.89737     -36727.721      11017.066      2983.7813    
      1600   270.89379     -36706.416      16184.378      2983.7813    
      1700   290.35621     -36727.989      9605.9885      2983.7813    
      1800   290.1728      -36739.444      11960.766      2983.7813    
      1900   280.75693     -36727.086      10293.47       2983.7813    
      2000   294.7581      -36708.988      15386.351      2983.7813    
      2100   303.03331     -36705.312      11290.375      2983.7813    
      2200   309.96419     -36710.52       16197.072      2983.7813    
      2300   292.76168     -36719.895      15651.367      2983.7813    
      2400   284.47271     -36731.756      13113.509      2983.7813    
      2500   289.78577     -36727.113      15171.585      2983.7813    
      2600   287.34469     -36709.689      7896.1835      2983.7813    
      2700   280.98535     -36696.472      17228.961      2983.7813    
      2800   314.07506     -36718.673      14068.95       2983.7813    
      2900   306.51468     -36719.205      9084.0684      2983.7813    
      3000   293.45684     -36742.253      13798.397      2983.7813    
      3100   300.52813     -36748.576      9190.7222      2983.7813    
      3200   298.61888     -36727.38       8858.7514      2983.7813    
      3300   297.25583     -36714.687      16368.31       2983.7813    
      3400   308.43275     -36715.958      15594.175      2983.7813    
      3500   311.73815     -36715.223      7561.0947      2983.7813    
      3600   279.88549     -36708.152      18139.873      2983.7813    
      3700   279.09743     -36725.751      11794.504      2983.7813    
      3800   283.44442     -36728.875      11230.925      2983.7813    
      3900   322.74282     -36728.956      14586.362      2983.7813    
      4000   312.58347     -36711.554      13717.572      2983.7813    
      4100   331.88887     -36722.973      9655.9261      2983.7813    
      4200   302.99123     -36718.494      13740.589      2983.7813    
      4300   292.15842     -36732.03       11775.635      2983.7813    
      4400   275.11539     -36731.618      14254.646      2983.7813    
      4500   286.19858     -36726.278      10710.65       2983.7813    
      4600   298.85751     -36704.796      18063.904      2983.7813    
      4700   330.4826      -36712.47       10034.777      2983.7813    
      4800   307.80668     -36708.931      13511.315      2983.7813    
      4900   283.66986     -36716.208      12941.571      2983.7813    
      5000   278.52139     -36715.872      15893.727      2983.7813    
Loop time of 173.812 on 16 procs for 5000 steps with 243 atoms

Performance: 1.243 ns/day, 19.312 hours/ns, 28.767 timesteps/s, 6.990 katom-step/s
99.0% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 110.67     | 133.16     | 153.54     | 156.6 | 76.61
Bond    | 0.012568   | 0.01314    | 0.013773   |   0.3 |  0.01
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 6.2202     | 26.61      | 49.12      | 350.4 | 15.31
Output  | 0.011491   | 0.021768   | 0.055853   |  11.6 |  0.01
Modify  | 13.891     | 13.908     | 13.922     |   0.3 |  8.00
Other   |            | 0.1026     |            |       |  0.06

Nlocal:         30.375 ave          33 max          25 min
Histogram: 1 1 0 0 0 0 1 1 1 3
Nghost:        2704.62 ave        2714 max        2697 min
Histogram: 1 0 1 1 3 0 0 1 0 1
Neighs:        17557.8 ave       19050 max       14522 min
Histogram: 1 1 0 0 0 0 1 1 1 3

Total # of neighbors = 140462
Ave neighs/atom = 578.03292
Ave special neighs/atom = 0
Neighbor list builds = 0
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg5

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*12.723
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box
fix deform_p all deform 100 xz delta ${delta} remap v units box
fix deform_p all deform 100 xz delta 0.12723 remap v units box
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 5 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos5.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos5.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos5 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos5 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos5 all custom/gz 100 dump/pos_deform5.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 107.4 | 107.6 | 107.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   304.60255     -36695.294      14914.362      2983.7813    
       100   323.41922     -36714.085      14343.829      2983.7813    
       200   294.7211      -36722.865      10191.063      2983.7813    
       300   289.83939     -36725.305      12682.437      2983.7813    
       400   273.2257      -36705.177      8444.6744      2983.7813    
       500   308.52852     -36716.674      9497.7924      2983.7813    
       600   290.27164     -36701.225      17823.739      2983.7813    
       700   308.99902     -36713.441      9075.485       2983.7813    
       800   312.826       -36720.576      10157.263      2983.7813    
       900   293.93153     -36711.98       13770.054      2983.7813    
      1000   302.32375     -36724.82       12482.753      2983.7813    
      1100   297.3698      -36713.635      8700.629       2983.7813    
      1200   287.05301     -36705.518      18738.364      2983.7813    
      1300   306.71346     -36718.879      12826.869      2983.7813    
      1400   295.09323     -36716.055      16453.607      2983.7813    
      1500   292.59444     -36722.554      8697.2474      2983.7813    
      1600   293.17018     -36740.952      18659.473      2983.7813    
      1700   294.59701     -36728.027      8211.1695      2983.7813    
      1800   300.96171     -36711.427      12467.768      2983.7813    
      1900   297.34297     -36703.617      13286.421      2983.7813    
      2000   285.94773     -36702.203      7991.1417      2983.7813    
      2100   315.97923     -36713.737      9845.4152      2983.7813    
      2200   318.8271      -36693.822      22430.868      2983.7813    
      2300   313.05627     -36695.259      6194.9429      2983.7813    
      2400   309.42986     -36721.017      13146.314      2983.7813    
      2500   281.63848     -36710.869      14814.653      2983.7813    
      2600   287.22551     -36706.832      7064.1308      2983.7813    
      2700   308.75003     -36705.485      9615.5359      2983.7813    
      2800   303.62862     -36709.547      21281.185      2983.7813    
      2900   275.32392     -36716.982      7872.1838      2983.7813    
      3000   302.36689     -36729.923      8320.58        2983.7813    
      3100   315.77303     -36723.524      10312.247      2983.7813    
      3200   284.01131     -36688.672      15522.4        2983.7813    
      3300   311.55625     -36706.797      9883.1369      2983.7813    
      3400   301.52784     -36713.584      13798.789      2983.7813    
      3500   295.23311     -36713.455      10387.582      2983.7813    
      3600   301.60597     -36712.659      12390.315      2983.7813    
      3700   315.26452     -36712.277      11301.472      2983.7813    
      3800   310.34003     -36716.379      14673.329      2983.7813    
      3900   290.19947     -36723.02       14356.835      2983.7813    
      4000   309.88002     -36744.643      14053.479      2983.7813    
      4100   291.08679     -36717.12       11812.676      2983.7813    
      4200   322.43795     -36711.086      18146.378      2983.7813    
      4300   314.76397     -36703.968      11800.565      2983.7813    
      4400   310.98683     -36717.771      13979.059      2983.7813    
      4500   290.98225     -36714.675      6661.7533      2983.7813    
      4600   291.52942     -36721.835      13374.157      2983.7813    
      4700   318.65131     -36715.924      11111.072      2983.7813    
      4800   326.95957     -36704.65       11862.597      2983.7813    
      4900   323.03555     -36715.485      13981.087      2983.7813    
      5000   300.80677     -36716.29       12823.936      2983.7813    
Loop time of 118.225 on 16 procs for 5000 steps with 243 atoms

Performance: 1.827 ns/day, 13.136 hours/ns, 42.292 timesteps/s, 10.277 katom-step/s
98.7% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 100.33     | 103.34     | 106.11     |  21.1 | 87.41
Bond    | 0.011373   | 0.01239    | 0.013228   |   0.5 |  0.01
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.94708    | 3.7007     | 6.7229     | 111.2 |  3.13
Output  | 0.0084066  | 0.018426   | 0.051888   |  12.4 |  0.02
Modify  | 11.043     | 11.047     | 11.053     |   0.1 |  9.34
Other   |            | 0.106      |            |       |  0.09

Nlocal:         30.375 ave          33 max          25 min
Histogram: 1 1 0 0 0 0 1 1 1 3
Nghost:        2704.62 ave        2714 max        2697 min
Histogram: 1 0 1 1 3 0 0 1 0 1
Neighs:        17557.8 ave       19050 max       14522 min
Histogram: 1 1 0 0 0 0 1 1 1 3

Total # of neighbors = 140462
Ave neighs/atom = 578.03292
Ave special neighs/atom = 0
Neighbor list builds = 0
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos5

# Delete dir to make sure it is not reused
variable dir delete
# uxy Perturbation
variable dir equal 6
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"
variable len0 equal ${lz0}
variable len0 equal 15.9631
variable dlen equal 2*(xy-${xy0})
variable dlen equal 2*(xy--7.3456)

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*15.9631
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.3456000000000001293, deltaxy = 0.073456
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0, deltaxz = -0
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0, deltayz = -0
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no
fix deform_n all deform 100 xy delta ${delta} remap v units box flip no
fix deform_n all deform 100 xy delta -0.159631 remap v units box flip no

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 6 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg6.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg6.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg6 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg6 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg6 all custom/gz 100 dump/neg_deform6.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 107.4 | 107.6 | 107.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   304.60255     -36695.294      14914.362      2983.7813    
       100   323.41922     -36714.085      14343.829      2983.7813    
       200   295.95667     -36722.888      13040.219      2983.7813    
       300   288.95417     -36724.516      14373.564      2983.7813    
       400   274.20943     -36709.288      9062.0522      2983.7813    
       500   301.66303     -36713.647      13789.493      2983.7813    
       600   304.92262     -36709.755      17262.157      2983.7813    
       700   311.42528     -36714.04       7149.3551      2983.7813    
       800   297.16363     -36710.349      13298.46       2983.7813    
       900   289.63211     -36708.538      7421.031       2983.7813    
      1000   282.4221      -36719.022      13349.457      2983.7813    
      1100   276.24637     -36735.636      15974.239      2983.7813    
      1200   284.10524     -36722.1        21493.769      2983.7813    
      1300   299.255       -36714.557      1616.6621      2983.7813    
      1400   318.26591     -36720.047      10702.145      2983.7813    
      1500   292.36195     -36694.039      12627.686      2983.7813    
      1600   306.33888     -36714.69       8459.5513      2983.7813    
      1700   297.49714     -36734.166      7710.155       2983.7813    
      1800   282.26262     -36730.893      12255.855      2983.7813    
      1900   303.96892     -36724.827      5738.1659      2983.7813    
      2000   302.84084     -36713.703      8978.1198      2983.7813    
      2100   281.65941     -36698.704      10015.022      2983.7813    
      2200   306.27        -36719.047      12006.164      2983.7813    
      2300   298.98407     -36725.844      13993.58       2983.7813    
      2400   283.60037     -36716.06       17277.17       2983.7813    
      2500   306.06613     -36721.189      7699.7692      2983.7813    
      2600   315.01535     -36714.396      14336.147      2983.7813    
      2700   309.0486      -36701.471      12094.799      2983.7813    
      2800   314.33272     -36711.313      11589.68       2983.7813    
      2900   269.62712     -36708.819      10898.39       2983.7813    
      3000   279.07977     -36715.674      16510.83       2983.7813    
      3100   314.4289      -36723.167      8486.1509      2983.7813    
      3200   301.71755     -36706.812      13851.907      2983.7813    
      3300   323.2811      -36691.964      15723.697      2983.7813    
      3400   343.45965     -36700.63       17161.442      2983.7813    
      3500   320.38075     -36710.917      8641.0258      2983.7813    
      3600   309.10083     -36718.873      16601.134      2983.7813    
      3700   286.75626     -36709.789      18888.169      2983.7813    
      3800   281.8135      -36708.745      10344.408      2983.7813    
      3900   306.14642     -36723.008      8910.2418      2983.7813    
      4000   296.97127     -36705.913      16815.891      2983.7813    
      4100   312.83378     -36696.859      13833.548      2983.7813    
      4200   316.86794     -36707.891      7183.8085      2983.7813    
      4300   291.13002     -36716.898      13394.245      2983.7813    
      4400   326.31955     -36744.757      10138.74       2983.7813    
      4500   269.22676     -36694.116      15185.064      2983.7813    
      4600   317.22192     -36718.369      10719.453      2983.7813    
      4700   305.49198     -36695.646      17167.059      2983.7813    
      4800   357.26723     -36709.741      6084.4452      2983.7813    
      4900   319.67435     -36702.51       13263.445      2983.7813    
      5000   288.40023     -36707.608      14722.919      2983.7813    
Loop time of 109.168 on 16 procs for 5000 steps with 243 atoms

Performance: 1.979 ns/day, 12.130 hours/ns, 45.801 timesteps/s, 11.130 katom-step/s
98.7% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 91.555     | 94.412     | 97.347     |  21.9 | 86.48
Bond    | 0.010688   | 0.011469   | 0.012604   |   0.5 |  0.01
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.82641    | 3.7529     | 6.5882     | 110.1 |  3.44
Output  | 0.0081719  | 0.018129   | 0.051495   |  12.5 |  0.02
Modify  | 10.874     | 10.876     | 10.88      |   0.1 |  9.96
Other   |            | 0.09757    |            |       |  0.09

Nlocal:         30.375 ave          33 max          25 min
Histogram: 1 1 0 0 0 0 1 1 1 3
Nghost:        2704.62 ave        2714 max        2697 min
Histogram: 1 0 1 1 3 0 0 1 0 1
Neighs:        17557.8 ave       19050 max       14522 min
Histogram: 1 1 0 0 0 0 1 1 1 3

Total # of neighbors = 140462
Ave neighs/atom = 578.03292
Ave special neighs/atom = 0
Neighbor list builds = 0
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg6

# Reset box and simulation parameters
clear
  using 2 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (14.6913 12.723 15.9631) with tilt (-7.3456 0 0)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  243 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*15.9631
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box
fix deform_p all deform 100 xy delta ${delta} remap v units box
fix deform_p all deform 100 xy delta 0.159631 remap v units box

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 6 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * CHOFe.ff O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Van der Waals parameters for element AL indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
WARNING: Changed valency_val to valency_boc for X (src/REAXFF/reaxff_ffield.cpp:296)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos6.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos6.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos6 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos6 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos6 all custom/gz 100 dump/pos_deform6.lammpstrj.gz id type q x y z
run ${nrun}
run 5000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 107.4 | 107.6 | 107.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   304.60255     -36695.294      14914.362      2983.7813    
       100   323.41922     -36714.085      14343.829      2983.7813    
       200   292.476       -36721.466      12626.587      2983.7813    
       300   283.32062     -36721.043      8849.4312      2983.7813    
       400   278.3817      -36709.722      4699.678       2983.7813    
       500   313.41428     -36723.658      19109.244      2983.7813    
       600   305.57619     -36712.776      13900.315      2983.7813    
       700   304.46019     -36712.71       7742.8243      2983.7813    
       800   302.86731     -36715.121      11596.604      2983.7813    
       900   306.47069     -36722.358      17933.566      2983.7813    
      1000   323.54287     -36733.843      2071.9901      2983.7813    
      1100   294.41719     -36705.874      12333.316      2983.7813    
      1200   326.84035     -36707.799      18663.051      2983.7813    
      1300   325.59959     -36709.601      9742.3814      2983.7813    
      1400   297.19881     -36718.338      8509.2497      2983.7813    
      1500   295.20784     -36727.701      16507.159      2983.7813    
      1600   270.17423     -36702.579      15319.96       2983.7813    
      1700   322.1062      -36716.565      8833.2269      2983.7813    
      1800   336.05358     -36724.728      17754.042      2983.7813    
      1900   297.07631     -36706.871      8470.1873      2983.7813    
      2000   299.68189     -36712.834      13851.831      2983.7813    
      2100   310.91866     -36722.401      16802.431      2983.7813    
      2200   294.95244     -36708.681      9438.7689      2983.7813    
      2300   305.28921     -36722.821      4212.8007      2983.7813    
      2400   286.61872     -36717.115      17032.825      2983.7813    
      2500   298.62075     -36719.134      11709.384      2983.7813    
      2600   312.98474     -36713.584      12159.012      2983.7813    
      2700   320.87516     -36702.763      14939.016      2983.7813    
      2800   325.02387     -36714.034      8240.0302      2983.7813    
      2900   300.65619     -36726.331      12773.732      2983.7813    
      3000   300.87839     -36727.509      14015.606      2983.7813    
      3100   286.29633     -36706.883      5888.8928      2983.7813    
      3200   327.2382      -36717.448      11892.106      2983.7813    
      3300   336.35789     -36711.491      11432.583      2983.7813    
      3400   297.35667     -36710.361      13624.09       2983.7813    
      3500   279.14958     -36716.184      9807.8656      2983.7813    
      3600   306.18948     -36733.743      17281.989      2983.7813    
      3700   298.43703     -36706.907      13437.791      2983.7813    
      3800   318.05498     -36713.226      14084.623      2983.7813    
      3900   307.65802     -36711.718      11118.452      2983.7813    
      4000   296.83946     -36721.867      14300.31       2983.7813    
      4100   270.55095     -36736.008      10675.151      2983.7813    
      4200   265.89876     -36743.122      25716.094      2983.7813    
      4300   274.83785     -36721.633      5421.9462      2983.7813    
      4400   292.73394     -36714.49       15179.961      2983.7813    
      4500   324.18175     -36720.025      11854.238      2983.7813    
      4600   302.9322      -36702.425      11277.881      2983.7813    
      4700   307.05301     -36716.447      12332.035      2983.7813    
      4800   275.37477     -36716.814      18542.108      2983.7813    
      4900   287.25977     -36728.959      5691.8414      2983.7813    
      5000   298.57364     -36711.862      16240.387      2983.7813    
Loop time of 109.113 on 16 procs for 5000 steps with 243 atoms

Performance: 1.980 ns/day, 12.124 hours/ns, 45.824 timesteps/s, 11.135 katom-step/s
98.6% CPU use with 8 MPI tasks x 2 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 91.533     | 94.279     | 97.236     |  24.2 | 86.40
Bond    | 0.01057    | 0.011366   | 0.012295   |   0.5 |  0.01
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.90794    | 3.8564     | 6.5822     | 119.6 |  3.53
Output  | 0.0081869  | 0.018116   | 0.051441   |  12.5 |  0.02
Modify  | 10.848     | 10.85      | 10.855     |   0.1 |  9.94
Other   |            | 0.09865    |            |       |  0.09

Nlocal:         30.375 ave          33 max          25 min
Histogram: 1 1 0 0 0 0 1 1 1 3
Nghost:        2704.62 ave        2714 max        2697 min
Histogram: 1 0 1 1 3 0 0 1 0 1
Neighs:        17557.8 ave       19050 max       14522 min
Histogram: 1 1 0 0 0 0 1 1 1 3

Total # of neighbors = 140462
Ave neighs/atom = 578.03292
Ave special neighs/atom = 0
Neighbor list builds = 0
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos6

# Delete dir to make sure it is not reused
variable dir delete

# Calc and output
# include calc.mod.lmp

Total wall time: 0:35:16
