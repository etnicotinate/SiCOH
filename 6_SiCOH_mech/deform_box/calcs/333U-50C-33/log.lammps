LAMMPS (2 Aug 2023 - Update 2)
  using 1 OpenMP thread(s) per MPI task
# Initialization
units           real
dimension       3
boundary        p p p
# boundary        s s s
atom_style      full
timestep        0.5   # fs

# Define MD parameters
variable nevery equal 10                  # sampling interval
variable nrepeat equal 10                 # number of samples
variable nfreq equal ${nevery}*${nrepeat} # length of one average
variable nfreq equal 10*${nrepeat} 
variable nfreq equal 10*10 
variable nthermo equal ${nfreq}           # interval for thermo output
variable nthermo equal 100           
# 1 ps : 1e3 fs / 0.5 fs = 2e3 steps
# variable nequil equal 20*${nthermo}       # steps of equilibration run 10
variable nrun equal 100*${nthermo}          # stpes of equilibrated run 10
variable nrun equal 100*100          
variable temp equal 300.0                # temperature of initial sample
variable tdamp equal 50.0                 # time constant for thermostat
variable seed equal 123456                # seed for thermostat
variable ufac equal 1.01325e-4         # pressure unit conversion, from atm to Gpa
variable up equal 0.01                  # the deformation magnitude 0.1
variable FF string "SiOCHN_2018.ff C H O Si"          # force field args for pair_coeff
# pair_coeff * * CHONSSi.ff C H O Si
# pair_coeff * * CHOSiNa.ff C H O Si
# pair_coeff * * SiOCHN_2018.ff C H O Si
# pair_coeff * * PDMSDecomp.ff C H O Si
# pair_coeff * * CHONSi.ff C H O Si
# pair_coeff * * CHOFe.ff O Si

# Read the initial sctructure
# box tilt large
variable structure string 333U-50C-33

read_data       ${structure}.data
read_data       333U-50C-33.data
Reading data file ...
  triclinic box = (0 0 0) to (15.3172 13.8463 18.3222) with tilt (-7.7318 0.2463 -0.1382)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  reading atoms ...
  365 atoms
  reading velocities ...
  365 velocities
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.001 seconds
  read_data CPU = 0.009 seconds

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400

# # Energy minimization
# print "*****Minimization starts.*****"
# minimize 1.0e-6 1.0e-6 100 1000
# min_style cg
# # Save the optimized structure
# write_data ${structure}_opt.data
velocity        all create ${temp} ${seed} dist gaussian
velocity        all create 300 ${seed} dist gaussian
velocity        all create 300 123456 dist gaussian

# # Equilibration
# include ff.mod.lmp
# if "$(is_defined(fix,avgp))" then "unfix avgp"
# if "$(is_defined(fix,avgl))" then "unfix avgl"
# thermo_style custom step temp pe press density vol
# run ${nequil}
# # Save the equilibrated structure
# write_data ${structure}_eq.data

# use tmp to save initial length and tilt
variable tmp equal lx
variable lx0 equal ${tmp}
variable lx0 equal 15.3172
variable tmp equal ly
variable ly0 equal ${tmp}
variable ly0 equal 13.8463
variable tmp equal lz
variable lz0 equal ${tmp}
variable lz0 equal 18.3222

variable tmp equal yz
variable yz0 equal ${tmp}
variable yz0 equal -0.1382
variable tmp equal xz
variable xz0 equal ${tmp}
variable xz0 equal 0.2463
variable tmp equal xy
variable xy0 equal ${tmp}
variable xy0 equal -7.7318

# Write restart
write_restart equil.res
System init for write_restart ...
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 4
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none

# dir: direction
# uxx Perturbation
variable dir equal 1
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
variable len0 equal ${lx0}
variable len0 equal 15.3172
variable dlen equal lx-${len0}
variable dlen equal lx-15.3172
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.3172 13.8463 18.3222) with tilt (-7.7318 0.2463 -0.1382)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  365 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.004 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*15.3172
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.731799999999999784, deltaxy = 0.077318
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.24629999999999999116, deltaxz = -0.002463
print "yz = $(yz), deltayz = ${deltayz}"
yz = -0.13819999999999998952, deltayz = 0.001382
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.153172 xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.153172 xy delta 0.077318 xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.153172 xy delta 0.077318 xz delta -0.002463 remap v units box flip no
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 1 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg1.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg1.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg1 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg1 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg1 all custom/gz 100 dump/neg_deform1.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 10000

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Your simulation uses code contributions which should be cited:

- pair reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 number =  {4--5},
 pages =   {245--259}
}

- fix qeq/reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 pages =   {245--259}
}

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 4
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 131 | 131.4 | 131.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -37619.569      4596.5757      3885.8921    
       100   301.58997     -37626.254      4041.4614      3885.5035    
       200   283.96499     -37614.962     -2654.4208      3885.1149    
       300   265.03471     -37606.81       1476.347       3884.7264    
       400   294.10857     -37637.548      7283.4385      3884.3378    
       500   300.45702     -37616.737      5878.5359      3883.9492    
       600   342.35148     -37641.726      5639.4892      3883.5606    
       700   296.29646     -37600.313      11889.056      3883.172     
       800   289.70163     -37604.958      4825.2487      3882.7834    
       900   290.39763     -37636.919     -509.35764      3882.3948    
      1000   276.71457     -37648.557      14975.642      3882.0062    
      1100   275.85901     -37626.244      6550.5618      3881.6176    
      1200   307.13598     -37639.024      4599.2519      3881.229     
      1300   291.17782     -37606.072      7697.2734      3880.8405    
      1400   301.6757      -37601.266      8257.756       3880.4519    
      1500   285.94735     -37595.528      1721.3258      3880.0633    
      1600   294.79984     -37637.242      12082.131      3879.6747    
      1700   289.68534     -37643.799      8145.1217      3879.2861    
      1800   309.4913      -37657.768     -2217.0027      3878.8975    
      1900   301.81294     -37604.46      -18551.837      3878.5089    
      2000   306.36293     -37606.258     -5858.3435      3878.1203    
      2100   292.9599      -37604.012      8338.0486      3877.7317    
      2200   307.83373     -37644.72       8329.0209      3877.3432    
      2300   273.7927      -37621.648      15301.09       3876.9546    
      2400   301.47533     -37635.415      5081.8928      3876.566     
      2500   300.28769     -37618.345     -5929.9188      3876.1774    
      2600   296.6629      -37613.406      4684.1055      3875.7888    
      2700   311.10487     -37640.864      8461.3728      3875.4002    
      2800   275.6685      -37604.407      8139.2857      3875.0116    
      2900   313.05772     -37621.435     -15.350726      3874.623     
      3000   323.81737     -37614.378     -7026.7373      3874.2344    
      3100   301.59004     -37607.677      309.63472      3873.8459    
      3200   305.28494     -37642.544      5942.1546      3873.4573    
      3300   307.13198     -37641.914      13605.724      3873.0687    
      3400   300.39764     -37624.634      4158.0787      3872.6801    
      3500   282.16586     -37592.69      -5838.7479      3872.2915    
      3600   325.05118     -37601.308      11736.297      3871.9029    
      3700   330.83455     -37612.568      9142.5565      3871.5143    
      3800   302.7464      -37608.141      10271.615      3871.1257    
      3900   307.51567     -37630.401      8168.4008      3870.7371    
      4000   292.27225     -37624.662      15492.442      3870.3486    
      4100   286.94843     -37634.809     -1130.5589      3869.96      
      4200   289.37435     -37656.239      6303.5166      3869.5714    
      4300   290.97316     -37630.01       624.83227      3869.1828    
      4400   307.61535     -37623.711      9994.9881      3868.7942    
      4500   316.59223     -37631.881      1939.2266      3868.4056    
      4600   300.73264     -37618.226      8577.7767      3868.017     
      4700   299.32248     -37631.268     -4221.4717      3867.6284    
      4800   292.61364     -37637.322     -2291.9731      3867.2398    
      4900   279.88451     -37622.893      1467.2327      3866.8512    
      5000   300.54027     -37613.382      1664.034       3866.4627    
      5100   304.6014      -37602.412      11132.838      3866.0741    
      5200   319.73232     -37632.426      2373.2006      3865.6855    
      5300   286.19209     -37619.828      13785.903      3865.2969    
      5400   299.95392     -37632.997      5568.343       3864.9083    
      5500   290.27541     -37616.883      19718.046      3864.5197    
      5600   289.65079     -37612.519      7198.2232      3864.1311    
      5700   318.16866     -37656.701      366.25919      3863.7425    
      5800   262.692       -37618.74      -4989.9416      3863.3539    
      5900   296.96105     -37635.762     -10259.805      3862.9654    
      6000   311.43324     -37629.543     -5483.2874      3862.5768    
      6100   292.97406     -37606.945      19593.076      3862.1882    
      6200   306.2364      -37626.996      3602.6997      3861.7996    
      6300   302.79809     -37637.149      2540.5855      3861.411     
      6400   291.65955     -37649.35      -1252.3606      3861.0224    
      6500   279.76165     -37661.747      11491.664      3860.6338    
      6600   293.77904     -37649.276     -36.565545      3860.2452    
      6700   289.92169     -37626.042      308.3982       3859.8566    
      6800   309.59703     -37633.569      17147.727      3859.4681    
      6900   310.23306     -37623.742      5631.7739      3859.0795    
      7000   309.41942     -37627.624      3698.6876      3858.6909    
      7100   311.57972     -37657.784      9405.1474      3858.3023    
      7200   265.93923     -37620.823      8432.224       3857.9137    
      7300   307.06286     -37652.456     -1760.5016      3857.5251    
      7400   306.1179      -37620.037     -7487.6492      3857.1365    
      7500   294.79501     -37598.239      7205.3035      3856.7479    
      7600   319.11647     -37637.729      3657.4161      3856.3593    
      7700   303.66297     -37627.38       13755.496      3855.9708    
      7800   298.54965     -37620.614      3662.0521      3855.5822    
      7900   311.05284     -37651.911      5796.4608      3855.1936    
      8000   280.31064     -37640.532      15773.766      3854.805     
      8100   281.99965     -37637.266      10034.346      3854.4164    
      8200   304.56418     -37624.647      8267.748       3854.0278    
      8300   291.66987     -37606.025      12576.312      3853.6392    
      8400   294.3339      -37622.853      5074.9526      3853.2506    
      8500   295.0224      -37626.97       6950.1962      3852.862     
      8600   280.26032     -37608.119      17055.044      3852.4734    
      8700   303.97677     -37610.822      8175.8695      3852.0849    
      8800   326.03033     -37618.092     -4428.0151      3851.6963    
      8900   307.62574     -37624.685      6559.5649      3851.3077    
      9000   302.38421     -37637.37       9198.6291      3850.9191    
      9100   285.13939     -37613.109     -715.64849      3850.5305    
      9200   311.439       -37642.947      16159.389      3850.1419    
      9300   271.48587     -37618.418      389.11001      3849.7533    
      9400   273.60649     -37634.414      7239.6756      3849.3647    
      9500   295.2817      -37637.091      2851.9967      3848.9761    
      9600   309.32621     -37622.51      -1775.933       3848.5876    
      9700   307.67215     -37620.014      1148.035       3848.199     
      9800   300.82937     -37623.846      1070.1057      3847.8104    
      9900   289.20777     -37635.968      8563.9634      3847.4218    
     10000   286.3958      -37647.502      7892.9699      3847.0332    
Loop time of 455.983 on 8 procs for 10000 steps with 365 atoms

Performance: 0.947 ns/day, 25.332 hours/ns, 21.931 timesteps/s, 8.005 katom-step/s
98.8% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 320.66     | 366.75     | 409.17     | 154.6 | 80.43
Bond    | 0.028137   | 0.030208   | 0.033113   |   1.0 |  0.01
Neigh   | 3.9826     | 4.6187     | 5.1597     |  17.8 |  1.01
Comm    | 4.1907     | 46.6       | 92.545     | 433.4 | 10.22
Output  | 0.030607   | 0.079529   | 0.1791     |  18.6 |  0.02
Modify  | 37.115     | 37.645     | 38.336     |   6.6 |  8.26
Other   |            | 0.2633     |            |       |  0.06

Nlocal:         45.625 ave          48 max          42 min
Histogram: 1 1 0 0 0 1 2 0 1 2
Nghost:        3366.75 ave        3395 max        3340 min
Histogram: 1 1 1 0 1 0 2 0 1 1
Neighs:        30284.4 ave       31910 max       27857 min
Histogram: 1 0 1 0 0 1 2 0 1 2

Total # of neighbors = 242275
Ave neighs/atom = 663.76712
Ave special neighs/atom = 0
Neighbor list builds = 161
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg1

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.3172 13.8463 18.3222) with tilt (-7.7318 0.2463 -0.1382)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  365 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*15.3172
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.153172 xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.153172 xy delta -0.077318 xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.153172 xy delta -0.077318 xz delta 0.002463 remap v units box
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 1 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos1.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos1.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos1 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos1 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos1 all custom/gz 100 dump/pos_deform1.lammpstrj.gz id type q x y z
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 4
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 131 | 131.4 | 131.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -37619.569      4596.5757      3885.8921    
       100   301.59848     -37626.261      4041.0684      3886.2807    
       200   283.79754     -37614.943     -2832.9436      3886.6693    
       300   265.43115     -37605.935      1448.7339      3887.0579    
       400   295.29674     -37636.519      7123.5571      3887.4465    
       500   301.58334     -37616.297      5328.1733      3887.8351    
       600   344.35503     -37642.584      5006.7315      3888.2237    
       700   295.90203     -37599.732      11265.843      3888.6122    
       800   287.60732     -37603.006      6675.2314      3889.0008    
       900   294.37535     -37639.073      2778.2916      3889.3894    
      1000   273.29165     -37646.712      15162.423      3889.778     
      1100   277.34424     -37629.966      11496.218      3890.1666    
      1200   297.5283      -37626.765      2243.106       3890.5552    
      1300   279.69152     -37592.933      4974.2077      3890.9438    
      1400   319.45777     -37629.53       3407.0578      3891.3324    
      1500   283.13378     -37611.761      5821.9123      3891.721     
      1600   280.7384      -37632.94       6555.5101      3892.1095    
      1700   298.88871     -37644.447      6673.9546      3892.4981    
      1800   300.1944      -37615.803     -3359.8636      3892.8867    
      1900   287.47705     -37598.131     -11038.841      3893.2753    
      2000   313.25591     -37631.29      -12162.73       3893.6639    
      2100   305.25764     -37631.505      1235.1729      3894.0525    
      2200   298.53892     -37630.84       5325.7683      3894.4411    
      2300   287.79441     -37638.279      17536.909      3894.8297    
      2400   279.63545     -37622.873      1795.8492      3895.2183    
      2500   305.09496     -37617.385     -4999.4421      3895.6069    
      2600   318.47339     -37624.604     -6616.562       3895.9954    
      2700   296.27489     -37612.975      1170.4515      3896.384     
      2800   313.40004     -37648.408      17924.954      3896.7726    
      2900   291.68234     -37652.271      5166.2597      3897.1612    
      3000   255.53049     -37640.245      14424.884      3897.5498    
      3100   304.89157     -37671.035      18521.663      3897.9384    
      3200   278.59017     -37621.086      16292.564      3898.327     
      3300   300.89698     -37625.786      1641.7218      3898.7156    
      3400   302.5086      -37617.264      3451.4376      3899.1042    
      3500   286.37509     -37591.427      7955.0317      3899.4927    
      3600   304.7924      -37614.608     -10951.427      3899.8813    
      3700   288.59078     -37621.72      -10812.676      3900.2699    
      3800   285.18688     -37640.27       4570.7099      3900.6585    
      3900   288.76443     -37646.699     -5043.714       3901.0471    
      4000   275.04406     -37600.206      6266.7747      3901.4357    
      4100   292.50493     -37602.557      14407.401      3901.8243    
      4200   298.76151     -37613.316     -15587.297      3902.2129    
      4300   319.91967     -37644.055      6221.3351      3902.6015    
      4400   307.11968     -37650.579      19937.216      3902.99      
      4500   281.09926     -37643.296      6991.0152      3903.3786    
      4600   289.05944     -37667.483      6527.0744      3903.7672    
      4700   292.99377     -37641.064      18504.288      3904.1558    
      4800   296.55656     -37619.636      497.85956      3904.5444    
      4900   299.24224     -37612.211      9186.383       3904.933     
      5000   310.72446     -37636.686      6280.461       3905.3216    
      5100   290.78182     -37641.321      2225.6619      3905.7102    
      5200   265.49727     -37619.319     -523.07804      3906.0988    
      5300   301.19889     -37637.837      21508.885      3906.4873    
      5400   306.24408     -37611.673      13153.656      3906.8759    
      5500   321.98862     -37649.354      16564.154      3907.2645    
      5600   323.62315     -37696.197     -8040.4454      3907.6531    
      5700   275.62954     -37663.385     -1471.0044      3908.0417    
      5800   289.82675     -37694.81      -7043.8297      3908.4303    
      5900   315.13846     -37721.987      2186.9133      3908.8189    
      6000   311.46279     -37694.596      2926.2612      3909.2075    
      6100   341.54475     -37706.025      10498.157      3909.5961    
      6200   290.49825     -37649.914      18706.145      3909.9847    
      6300   309.93366     -37711.516      7352.5075      3910.3732    
      6400   291.01486     -37704.325      16589.322      3910.7618    
      6500   300.62443     -37698.754      5483.9578      3911.1504    
      6600   301.15407     -37676.963     -6166.9216      3911.539     
      6700   315.77752     -37682.292      3337.9774      3911.9276    
      6800   290.83616     -37689.384      4363.2154      3912.3162    
      6900   279.0589      -37686.565      4040.2622      3912.7048    
      7000   303.39346     -37702.008      9761.0004      3913.0934    
      7100   309.34017     -37688.046      7830.5308      3913.482     
      7200   311.62398     -37674.99       2483.2353      3913.8705    
      7300   314.32916     -37691.035     -7409.632       3914.2591    
      7400   293.87689     -37701.015      1732.4222      3914.6477    
      7500   298.84513     -37701.633      7687.9584      3915.0363    
      7600   296.10613     -37676.704      8966.7232      3915.4249    
      7700   298.58264     -37677.177      2516.2414      3915.8135    
      7800   294.89766     -37684.821      4525.4931      3916.2021    
      7900   264.04707     -37689.199      2921.847       3916.5907    
      8000   295.06994     -37718.706      16073.324      3916.9793    
      8100   310.33744     -37709.67       22071.796      3917.3678    
      8200   291.98724     -37681.807      9422.4942      3917.7564    
      8300   309.2473      -37692.048      17070.521      3918.145     
      8400   316.31983     -37691.457      9894.4083      3918.5336    
      8500   315.09551     -37690.824      10628.382      3918.9222    
      8600   293.61039     -37687.205     -6984.9716      3919.3108    
      8700   287.994       -37695.763      1261.281       3919.6994    
      8800   286.27387     -37677.867      3456.6199      3920.088     
      8900   313.68464     -37676.852      1923.8382      3920.4766    
      9000   314.37391     -37680.516     -1730.4429      3920.8651    
      9100   293.832       -37676.783      1724.9353      3921.2537    
      9200   289.66107     -37683.893     -752.70212      3921.6423    
      9300   290.20319     -37679.795      5825.4221      3922.0309    
      9400   306.25969     -37688.341      8188.0806      3922.4195    
      9500   297.83589     -37679.289      4524.7268      3922.8081    
      9600   282.99967     -37671.19      -3335.3193      3923.1967    
      9700   305.6108      -37695.47       21839.529      3923.5853    
      9800   297.76076     -37668.9        17427.531      3923.9739    
      9900   319.54239     -37666.702      4371.3637      3924.3625    
     10000   308.0639      -37665.459     -17383.911      3924.751     
Loop time of 428.809 on 8 procs for 10000 steps with 365 atoms

Performance: 1.007 ns/day, 23.823 hours/ns, 23.320 timesteps/s, 8.512 katom-step/s
98.9% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 262.36     | 340.7      | 380.77     | 227.5 | 79.45
Bond    | 0.026431   | 0.028064   | 0.029222   |   0.5 |  0.01
Neigh   | 3.52       | 4.6833     | 5.3574     |  29.3 |  1.09
Comm    | 5.8765     | 45.94      | 124.26     | 619.4 | 10.71
Output  | 0.031642   | 0.086274   | 0.19887    |  20.1 |  0.02
Modify  | 36.285     | 37.008     | 38.209     |  10.7 |  8.63
Other   |            | 0.367      |            |       |  0.09

Nlocal:         45.625 ave          51 max          37 min
Histogram: 1 0 0 1 1 0 1 1 2 1
Nghost:        3307.62 ave        3335 max        3286 min
Histogram: 2 1 1 0 0 0 2 1 0 1
Neighs:          29629 ave       33015 max       24414 min
Histogram: 1 0 0 2 0 0 1 1 2 1

Total # of neighbors = 237032
Ave neighs/atom = 649.40274
Ave special neighs/atom = 0
Neighbor list builds = 166
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos1

# Delete dir to make sure it is not reused
variable dir delete
# uyy Perturbation
variable dir equal 2
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
variable len0 equal ${ly0}
variable len0 equal 13.8463
variable dlen equal ly-${len0}
variable dlen equal ly-13.8463
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.3172 13.8463 18.3222) with tilt (-7.7318 0.2463 -0.1382)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  365 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*13.8463
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.731799999999999784, deltaxy = 0.077318
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.24629999999999999116, deltaxz = -0.002463
print "yz = $(yz), deltayz = ${deltayz}"
yz = -0.13819999999999998952, deltayz = 0.001382
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 -0.138463 yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 -0.138463 yz delta 0.001382 remap v units box flip no
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 2 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg2.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg2.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg2 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg2 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg2 all custom/gz 100 dump/neg_deform2.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 4
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 131 | 131.4 | 131.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -37619.569      4596.5757      3885.8921    
       100   301.5955      -37626.26       4041.8521      3885.5035    
       200   283.92518     -37614.979     -2618.2487      3885.1149    
       300   265.33224     -37606.364      1668.5898      3884.7264    
       400   294.46089     -37636.645      7392.8383      3884.3378    
       500   300.95432     -37616.544      6109.1495      3883.9492    
       600   342.9925      -37641.667      5750.6114      3883.5606    
       700   295.07809     -37598.178      12247.642      3883.172     
       800   289.9518      -37604.654      4874.3941      3882.7834    
       900   290.94053     -37638.129      275.68454      3882.3948    
      1000   276.26318     -37648.026      14705.797      3882.0062    
      1100   274.82625     -37625.347      8670.3384      3881.6176    
      1200   298.79458     -37627.081      4297.8538      3881.229     
      1300   291.77515     -37604.394      5786.9737      3880.8405    
      1400   304.13999     -37609.896      7343.1248      3880.4519    
      1500   279.63849     -37601.031      4602.664       3880.0633    
      1600   301.41379     -37649.635      14090.101      3879.6747    
      1700   291.48251     -37633.999      6079.3258      3879.2861    
      1800   309.32841     -37615.62       1298.8826      3878.8975    
      1900   308.16246     -37601.176     -409.48854      3878.5089    
      2000   308.271       -37621.278      850.89607      3878.1203    
      2100   284.80751     -37614.214      13285.49       3877.7317    
      2200   313.06884     -37637.091      7684.2294      3877.3432    
      2300   307.85663     -37609.725     -1460.4922      3876.9546    
      2400   314.87175     -37588.143     -6297.2615      3876.566     
      2500   320.90121     -37608.593     -2649.2326      3876.1774    
      2600   290.1215      -37604.494     -3795.54        3875.7888    
      2700   299.61614     -37628.273     -6226.8455      3875.4002    
      2800   299.06815     -37635.947      550.6728       3875.0116    
      2900   282.49663     -37616.641     -5554.7505      3874.623     
      3000   309.77481     -37615.658      10497.628      3874.2344    
      3100   324.15054     -37621.729      10510.127      3873.8459    
      3200   304.95215     -37616.175      14736.141      3873.4573    
      3300   296.64323     -37621.424      4539.9881      3873.0687    
      3400   321.22376     -37650.608      17708.467      3872.6801    
      3500   288.31939     -37616.657      2817.4317      3872.2915    
      3600   304.33298     -37634.507      12770.988      3871.9029    
      3700   285.8302      -37619.779      11300.843      3871.5143    
      3800   308.53693     -37637.266      11476.125      3871.1257    
      3900   287.95787     -37601.438      10537.082      3870.7371    
      4000   307.78875     -37597.823      7166.5205      3870.3486    
      4100   299.32457     -37602.094     -5071.6032      3869.96      
      4200   286.80938     -37609.85      -1345.3179      3869.5714    
      4300   292.99113     -37616.911      7623.9861      3869.1828    
      4400   304.11213     -37624.208      20437.036      3868.7942    
      4500   316.23836     -37640.228      1437.9601      3868.4056    
      4600   289.91346     -37620.059      4378.6256      3868.017     
      4700   285.1637      -37630.373      9520.9776      3867.6284    
      4800   296.8457      -37670.749      126.77046      3867.2398    
      4900   279.74456     -37651.22       8338.4018      3866.8512    
      5000   303.40506     -37643.361      9727.2808      3866.4627    
      5100   319.11326     -37652.893      5559.2393      3866.0741    
      5200   305.26823     -37646.198      2775.4247      3865.6855    
      5300   294.89745     -37658.47       7692.2548      3865.2969    
      5400   296.63711     -37670.321      17869.155      3864.9083    
      5500   300.87704     -37641.453     -3575.667       3864.5197    
      5600   311.73937     -37631.835      1884.6564      3864.1311    
      5700   328.84136     -37664.924      20370.456      3863.7425    
      5800   270.26671     -37628.344      10317.771      3863.3539    
      5900   302.5657      -37667.295      14431.927      3862.9654    
      6000   288.72677     -37629.029      13980.171      3862.5768    
      6100   311.36617     -37638.715      4253.15        3862.1882    
      6200   300.79057     -37647.871      5034.3931      3861.7996    
      6300   282.43092     -37662.571      18021.635      3861.411     
      6400   280.70879     -37648.736      11899.182      3861.0224    
      6500   313.43446     -37655.651     -4370.4006      3860.6338    
      6600   293.5811      -37628.576     -3511.1597      3860.2452    
      6700   309.53956     -37659.271     -2922.3518      3859.8566    
      6800   286.43521     -37662.115     -8845.5565      3859.4681    
      6900   282.11466     -37659.637     -8240.1635      3859.0795    
      7000   314.32395     -37647.179     -12702.556      3858.6909    
      7100   291.64438     -37615.074     -8657.0477      3858.3023    
      7200   310.18094     -37650.809      627.58614      3857.9137    
      7300   297.94629     -37662.811      1109.596       3857.5251    
      7400   287.76004     -37661.884      6740.5679      3857.1365    
      7500   305.27287     -37666.598     -6203.9362      3856.7479    
      7600   347.21547     -37684.624      10159.989      3856.3593    
      7700   327.20188     -37696.528      7035.61        3855.9708    
      7800   303.24945     -37708.003     -2558.678       3855.5822    
      7900   300.35472     -37734.832      4724.0299      3855.1936    
      8000   284.08133     -37738.501      21189.82       3854.805     
      8100   301.20613     -37757.544      19623.843      3854.4164    
      8200   303.94161     -37749.621      19902.505      3854.0278    
      8300   317.89597     -37746.639      7396.7765      3853.6392    
      8400   307.90844     -37715.02       5664.1488      3853.2506    
      8500   335.81464     -37723.3        10068.973      3852.862     
      8600   312.78724     -37710.561      16804.715      3852.4734    
      8700   293.1964      -37730.1        9030.4862      3852.0849    
      8800   284.40627     -37738.43      -5009.8663      3851.6963    
      8900   298.46272     -37745.071      7886.5844      3851.3077    
      9000   305.21811     -37733.018     -552.00533      3850.9191    
      9100   289.55206     -37700.759      7094.7776      3850.5305    
      9200   313.40145     -37704.551      802.4702       3850.1419    
      9300   296.6086      -37704.37       4023.4053      3849.7533    
      9400   330.38522     -37773.467      8569.019       3849.3647    
      9500   316.49675     -37781.245      13227.081      3848.9761    
      9600   299.80728     -37786.041      20683.915      3848.5876    
      9700   322.2634      -37824.535      6008.6586      3848.199     
      9800   283.13365     -37798.385      15367.925      3847.8104    
      9900   291.65689     -37819.122     -4239.6284      3847.4218    
     10000   287.56353     -37815.077     -8593.4416      3847.0332    
Loop time of 427.916 on 8 procs for 10000 steps with 365 atoms

Performance: 1.010 ns/day, 23.773 hours/ns, 23.369 timesteps/s, 8.530 katom-step/s
98.9% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 254.64     | 334.56     | 379.84     | 263.1 | 78.18
Bond    | 0.024985   | 0.027125   | 0.028836   |   0.7 |  0.01
Neigh   | 3.6728     | 4.7941     | 5.5569     |  33.3 |  1.12
Comm    | 4.7595     | 49.977     | 129.91     | 680.9 | 11.68
Output  | 0.030595   | 0.085907   | 0.2        |  20.4 |  0.02
Modify  | 37.429     | 38.226     | 39.355     |  12.0 |  8.93
Other   |            | 0.2424     |            |       |  0.06

Nlocal:         45.625 ave          55 max          41 min
Histogram: 2 0 3 1 0 1 0 0 0 1
Nghost:        3402.25 ave        3446 max        3366 min
Histogram: 1 0 3 1 0 0 1 0 1 1
Neighs:          30237 ave       36184 max       27197 min
Histogram: 2 0 2 2 1 0 0 0 0 1

Total # of neighbors = 241896
Ave neighs/atom = 662.72877
Ave special neighs/atom = 0
Neighbor list builds = 172
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg2

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.3172 13.8463 18.3222) with tilt (-7.7318 0.2463 -0.1382)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  365 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*13.8463
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 ${delta} yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 0.138463 yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 0.138463 yz delta -0.001382 remap v units box
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 2 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos2.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos2.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos2 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos2 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos2 all custom/gz 100 dump/pos_deform2.lammpstrj.gz id type q x y z
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 4
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 131 | 131.4 | 131.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -37619.569      4596.5757      3885.8921    
       100   301.59467     -37626.259      4042.3433      3886.2807    
       200   283.88478     -37614.878     -2849.2275      3886.6693    
       300   265.19272     -37606.484      1312.8488      3887.0579    
       400   294.59967     -37637.09       7104.8288      3887.4465    
       500   300.66826     -37616.328      5313.6698      3887.8351    
       600   343.93161     -37642.94       5143.0747      3888.2237    
       700   296.61829     -37600.858      10879.215      3888.6122    
       800   289.73207     -37605.153      6386.9365      3889.0008    
       900   294.23962     -37639.25       138.89094      3889.3894    
      1000   272.76501     -37645.635      13700.847      3889.778     
      1100   276.27438     -37629.11       9433.2419      3890.1666    
      1200   297.04514     -37628.07       787.70587      3890.5552    
      1300   284.3899      -37597.921      5565.9296      3890.9438    
      1400   316.59874     -37624.451      4048.6691      3891.3324    
      1500   287.02647     -37613.366      6120.7056      3891.721     
      1600   281.53794     -37635.215      5652.5637      3892.1095    
      1700   295.79029     -37649.457      8596.8893      3892.4981    
      1800   302.26072     -37614.949      3166.1113      3892.8867    
      1900   304.37225     -37610.986     -6140.9146      3893.2753    
      2000   322.74533     -37635.986     -5747.5315      3893.6639    
      2100   282.79823     -37610.771      2698.2447      3894.0525    
      2200   299.65246     -37636.311      3950.0449      3894.4411    
      2300   306.68516     -37644.118      8545.6279      3894.8297    
      2400   286.05375     -37614.411     -7546.6455      3895.2183    
      2500   314.98641     -37620.767     -1166.2238      3895.6069    
      2600   325.34797     -37624.029     -2060.135       3895.9954    
      2700   295.11323     -37614.751     -775.19081      3896.384     
      2800   290.18609     -37629.486      17734.665      3896.7726    
      2900   279.22347     -37612.251     -2649.9625      3897.1612    
      3000   303.51304     -37633.051      4836.4973      3897.5498    
      3100   328.90109     -37651.276      11296.44       3897.9384    
      3200   286.15556     -37593.247      4164.2202      3898.327     
      3300   319.41753     -37608.01       6311.9714      3898.7156    
      3400   310.60582     -37592.685      10769.708      3899.1042    
      3500   305.33664     -37620.359      14738.293      3899.4927    
      3600   301.09024     -37636.872      4888.9326      3899.8813    
      3700   299.74679     -37636.077      11555.744      3900.2699    
      3800   318.20122     -37639.699      10498.175      3900.6585    
      3900   321.0561      -37618.937      1311.7134      3901.0471    
      4000   326.60782     -37599.854      8016.2874      3901.4357    
      4100   293.05702     -37587.028     -5849.3348      3901.8243    
      4200   292.12377     -37619.65      -12047.796      3902.2129    
      4300   303.58919     -37637.483      5360.6105      3902.6015    
      4400   283.4556      -37619.13       10821.824      3902.99      
      4500   298.90013     -37621.626      10181.375      3903.3786    
      4600   304.36077     -37606.099      14603.418      3903.7672    
      4700   322.02619     -37619.861      12738.6        3904.1558    
      4800   298.00831     -37631.019      22693.119      3904.5444    
      4900   300.53016     -37649.432      17608.255      3904.933     
      5000   294.88736     -37639.001     -2072.5834      3905.3216    
      5100   304.62655     -37625.991      185.8018       3905.7102    
      5200   312.79812     -37623.272      2555.3836      3906.0988    
      5300   303.97123     -37637.448      1243.1656      3906.4873    
      5400   287.44876     -37646.394      9704.8307      3906.8759    
      5500   291.2856      -37637.448      2762.1013      3907.2645    
      5600   308.97742     -37631.86      -3309.2275      3907.6531    
      5700   299.43792     -37615.108      2478.7647      3908.0417    
      5800   308.91861     -37629.599      6921.3967      3908.4303    
      5900   276.89377     -37635.839      12474.644      3908.8189    
      6000   289.54424     -37661.744     -12833.639      3909.2075    
      6100   318.29706     -37687.934      1125.7017      3909.5961    
      6200   316.87327     -37707.896      4691.3061      3909.9847    
      6300   309.96008     -37738.678     -453.62171      3910.3732    
      6400   292.35511     -37728.106     -736.33864      3910.7618    
      6500   310.04965     -37757.796      5051.632       3911.1504    
      6600   294.22459     -37748.683      6025.3456      3911.539     
      6700   281.59393     -37752.332      2062.1717      3911.9276    
      6800   288.27343     -37759.901     -2813.8178      3912.3162    
      6900   300.1481      -37735.326      4517.0526      3912.7048    
      7000   336.80959     -37762.215      2970.4633      3913.0934    
      7100   304.88388     -37738.898     -2040.4488      3913.482     
      7200   286.79569     -37740.017      883.79596      3913.8705    
      7300   282.87944     -37748.034      8097.6208      3914.2591    
      7400   297.0539      -37763.564     -14469.869      3914.6477    
      7500   298.38753     -37750.942      913.90089      3915.0363    
      7600   322.60713     -37755.642      848.75994      3915.4249    
      7700   294.50886     -37724.303      282.00272      3915.8135    
      7800   278.67426     -37721.265     -3441.4516      3916.2021    
      7900   306.01881     -37772.838     -11577.579      3916.5907    
      8000   280.03528     -37757.109      3055.2266      3916.9793    
      8100   292.88272     -37761.068     -4432.7086      3917.3678    
      8200   295.47429     -37729.068     -2688.6556      3917.7564    
      8300   307.22509     -37726.514     -5719.8473      3918.145     
      8400   321.36823     -37741.703      2998.2417      3918.5336    
      8500   303.18229     -37756.209     -393.84942      3918.9222    
      8600   298.57999     -37759.695     -2163.7331      3919.3108    
      8700   316.16331     -37770.969     -3299.991       3919.6994    
      8800   287.13572     -37728.505     -4988.2175      3920.088     
      8900   301.48934     -37723.391     -16716.486      3920.4766    
      9000   326.17639     -37729.341     -5595.1038      3920.8651    
      9100   314.32535     -37753.725     -1889.0819      3921.2537    
      9200   316.02142     -37771.59       4034.4488      3921.6423    
      9300   310.27359     -37769.051     -580.36406      3922.0309    
      9400   292.78784     -37751.277      4861.0973      3922.4195    
      9500   298.17911     -37767.304      2232.4548      3922.8081    
      9600   284.90898     -37774.055      7725.5816      3923.1967    
      9700   290.42931     -37783.402      3360.0007      3923.5853    
      9800   299.5175      -37759.885      5426.5428      3923.9739    
      9900   295.93673     -37743.466     -3747.4722      3924.3625    
     10000   308.15912     -37756.677      4068.8103      3924.751     
Loop time of 415.872 on 8 procs for 10000 steps with 365 atoms

Performance: 1.039 ns/day, 23.104 hours/ns, 24.046 timesteps/s, 8.777 katom-step/s
98.9% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 249.11     | 316.26     | 370.54     | 287.3 | 76.05
Bond    | 0.025215   | 0.026937   | 0.028748   |   0.6 |  0.01
Neigh   | 3.413      | 4.3179     | 5.1946     |  35.9 |  1.04
Comm    | 4.2629     | 58.513     | 125.71     | 667.8 | 14.07
Output  | 0.030842   | 0.081229   | 0.18461    |  19.0 |  0.02
Modify  | 35.39      | 36.324     | 37.269     |  12.8 |  8.73
Other   |            | 0.3456     |            |       |  0.08

Nlocal:         45.625 ave          52 max          36 min
Histogram: 1 0 0 1 1 1 0 1 1 2
Nghost:        3320.88 ave        3347 max        3290 min
Histogram: 1 0 1 1 1 0 1 0 2 1
Neighs:        29630.2 ave       33580 max       23570 min
Histogram: 1 0 0 1 1 1 0 1 1 2

Total # of neighbors = 237042
Ave neighs/atom = 649.43014
Ave special neighs/atom = 0
Neighbor list builds = 162
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos2

# Delete dir to make sure it is not reused
variable dir delete
# uzz Perturbation
variable dir equal 3
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
variable len0 equal ${lz0}
variable len0 equal 18.3222
variable dlen equal lz-${len0}
variable dlen equal lz-18.3222
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.3172 13.8463 18.3222) with tilt (-7.7318 0.2463 -0.1382)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  365 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*18.3222
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.731799999999999784, deltaxy = 0.077318
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.24629999999999999116, deltaxz = -0.002463
print "yz = $(yz), deltayz = ${deltayz}"
yz = -0.13819999999999998952, deltayz = 0.001382
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no
fix deform_n all deform 100 z delta 0 ${delta} remap v units box flip no
fix deform_n all deform 100 z delta 0 -0.183222 remap v units box flip no
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 3 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg3.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg3.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg3 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg3 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg3 all custom/gz 100 dump/neg_deform3.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 4
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 131 | 131.4 | 131.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -37619.569      4596.5757      3885.8921    
       100   301.60428     -37626.256      4025.9728      3885.5035    
       200   283.8059      -37614.834     -2632.8093      3885.1149    
       300   265.513       -37606.402      1649.5901      3884.7264    
       400   294.28349     -37636.107      7605.2436      3884.3378    
       500   300.35315     -37615.966      6279.805       3883.9492    
       600   344.85636     -37643.452      5537.8135      3883.5606    
       700   295.46278     -37598.862      11570.617      3883.172     
       800   290.25542     -37605.516      5575.4021      3882.7834    
       900   292.69044     -37636.83      -113.61791      3882.3948    
      1000   271.85002     -37645.71       14173.661      3882.0062    
      1100   275.85871     -37629.307      8778.8399      3881.6176    
      1200   305.15144     -37637.962      4626.2904      3881.229     
      1300   280.08332     -37595.647      4679.2941      3880.8405    
      1400   317.56905     -37621.476      6537.6561      3880.4519    
      1500   291.75137     -37601.902      5494.7673      3880.0633    
      1600   283.81196     -37625.571      4615.3228      3879.6747    
      1700   295.37426     -37648.547      2106.8513      3879.2861    
      1800   309.03149     -37642.288      2518.0691      3878.8975    
      1900   288.46327     -37599.961      1173.661       3878.5089    
      2000   317.32516     -37631.797     -1285.8872      3878.1203    
      2100   299.12808     -37615.166     -4191.3428      3877.7317    
      2200   280.64644     -37604.73       1835.8971      3877.3432    
      2300   299.06764     -37649.186      14804.954      3876.9546    
      2400   257.26603     -37614.369      3489.2317      3876.566     
      2500   307.58776     -37636.323     -2015.7957      3876.1774    
      2600   338.44286     -37651.586     -597.99973      3875.7888    
      2700   298.55813     -37616.573      7667.8855      3875.4002    
      2800   296.10696     -37625.308      11474.561      3875.0116    
      2900   309.3747      -37640.747      14285.254      3874.623     
      3000   311.65372     -37621.936     -2152.5096      3874.2344    
      3100   292.3798      -37595.296     -81.020229      3873.8459    
      3200   307.42206     -37635.041     -1886.866       3873.4573    
      3300   293.72607     -37644.848      1919.8536      3873.0687    
      3400   295.6399      -37645.335      6553.5577      3872.6801    
      3500   298.77416     -37625.294      15965.27       3872.2915    
      3600   295.25204     -37608.158      4133.5024      3871.9029    
      3700   313.29824     -37629.17      -401.96549      3871.5143    
      3800   287.76339     -37618.134      9132.7342      3871.1257    
      3900   287.24027     -37637.325      4062.4507      3870.7371    
      4000   284.03529     -37652.528      1910.9182      3870.3486    
      4100   266.40701     -37642.361      1060.1691      3869.96      
      4200   293.28086     -37637.41       10091.523      3869.5714    
      4300   317.00491     -37636.872      12353.564      3869.1828    
      4400   296.65695     -37607.153      512.34048      3868.7942    
      4500   315.78453     -37620.448     -4151.1219      3868.4056    
      4600   309.40658     -37624.531      4920.2833      3868.017     
      4700   273.2692      -37621.033     -4449.3762      3867.6284    
      4800   276.492       -37618.299      4185.8577      3867.2398    
      4900   289.01266     -37613.469     -3375.9119      3866.8512    
      5000   290.09814     -37605.173      712.08844      3866.4627    
      5100   301.19589     -37618.65       3735.3245      3866.0741    
      5200   307.18928     -37631.55       7202.9004      3865.6855    
      5300   282.50934     -37641.746      24834.931      3865.2969    
      5400   278.72049     -37653.696      6677.4207      3864.9083    
      5500   281.00472     -37627.275      4889.4947      3864.5197    
      5600   291.42502     -37611.491     -11175.212      3864.1311    
      5700   308.11419     -37618.391     -1080.9643      3863.7425    
      5800   303.80955     -37617.283      1326.8457      3863.3539    
      5900   297.56441     -37639.201      17348.289      3862.9654    
      6000   295.09163     -37652.167      13363.421      3862.5768    
      6100   277.97373     -37622.883      2093.765       3862.1882    
      6200   302.82631     -37634.722      19554.753      3861.7996    
      6300   304.77307     -37634.8        7459.4824      3861.411     
      6400   288.43777     -37613.768      10063.557      3861.0224    
      6500   309.13586     -37638.006      22036.746      3860.6338    
      6600   305.60825     -37637.175      8442.8721      3860.2452    
      6700   291.40255     -37627.92       2138.2418      3859.8566    
      6800   309.94396     -37640.86       8023.7713      3859.4681    
      6900   295.02661     -37608.532      3501.1953      3859.0795    
      7000   292.12993     -37589.312      9859.0175      3858.6909    
      7100   320.48307     -37615.623      10064.416      3858.3023    
      7200   294.55701     -37620.339      15851.806      3857.9137    
      7300   293.39181     -37637.766      26535.637      3857.5251    
      7400   302.80552     -37642.885      11780.109      3857.1365    
      7500   306.75123     -37624.995      15584.146      3856.7479    
      7600   331.02095     -37620.837      12454.194      3856.3593    
      7700   309.83864     -37615.711      6118.1716      3855.9708    
      7800   275.53453     -37612.511      10720.954      3855.5822    
      7900   300.24697     -37636.742     -1851.6904      3855.1936    
      8000   305.18839     -37628.793      8979.6544      3854.805     
      8100   310.72605     -37620.415      10045.537      3854.4164    
      8200   311.83829     -37614.879      18073.536      3854.0278    
      8300   296.22621     -37618.78       5104.937       3853.6392    
      8400   285.6071      -37635.842     -1102.2876      3853.2506    
      8500   275.8454      -37618.684     -2208.9811      3852.862     
      8600   321.7521      -37643.337      10659.803      3852.4734    
      8700   306.6988      -37628.674     -9731.9318      3852.0849    
      8800   284.40904     -37607.202      4726.683       3851.6963    
      8900   297.64652     -37619.813      23399.454      3851.3077    
      9000   312.55932     -37631.249      9326.3337      3850.9191    
      9100   281.9636      -37614.164      5757.2801      3850.5305    
      9200   296.91642     -37655.582      13376.309      3850.1419    
      9300   289.20635     -37642.243      8225.5639      3849.7533    
      9400   285.18388     -37613.108      7150.074       3849.3647    
      9500   303.35565     -37610.428      17417.53       3848.9761    
      9600   322.31355     -37627.775      9562.2673      3848.5876    
      9700   297.67844     -37615.868     -2199.3954      3848.199     
      9800   295.18346     -37623.246      890.78063      3847.8104    
      9900   287.53855     -37617.681     -4468.4969      3847.4218    
     10000   308.88364     -37620.519      166.6942       3847.0332    
Loop time of 423.933 on 8 procs for 10000 steps with 365 atoms

Performance: 1.019 ns/day, 23.552 hours/ns, 23.589 timesteps/s, 8.610 katom-step/s
98.9% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 254.65     | 328.51     | 377.54     | 256.3 | 77.49
Bond    | 0.026467   | 0.027066   | 0.028628   |   0.4 |  0.01
Neigh   | 3.4296     | 4.4078     | 5.1731     |  32.0 |  1.04
Comm    | 4.8608     | 53.856     | 127.73     | 632.9 | 12.70
Output  | 0.028987   | 0.075499   | 0.1713     |  18.2 |  0.02
Modify  | 36.011     | 36.818     | 37.823     |  11.3 |  8.68
Other   |            | 0.2424     |            |       |  0.06

Nlocal:         45.625 ave          50 max          42 min
Histogram: 1 1 1 2 0 1 0 0 0 2
Nghost:        3377.62 ave        3407 max        3344 min
Histogram: 1 0 1 1 1 0 2 0 1 1
Neighs:        30250.9 ave       33029 max       28039 min
Histogram: 1 1 1 2 0 1 0 0 0 2

Total # of neighbors = 242007
Ave neighs/atom = 663.03288
Ave special neighs/atom = 0
Neighbor list builds = 161
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg3

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.3172 13.8463 18.3222) with tilt (-7.7318 0.2463 -0.1382)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  365 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*18.3222
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box
fix deform_p all deform 100 z delta 0 ${delta} remap v units box
fix deform_p all deform 100 z delta 0 0.183222 remap v units box
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 3 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos3.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos3.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos3 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos3 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos3 all custom/gz 100 dump/pos_deform3.lammpstrj.gz id type q x y z
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 4
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 131 | 131.4 | 131.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -37619.569      4596.5757      3885.8921    
       100   301.58575     -37626.266      4043.1733      3886.2807    
       200   284.00192     -37615.1       -2801.903       3886.6693    
       300   265.03617     -37606.579      1363.8688      3887.0579    
       400   294.65053     -37637.298      6913.9181      3887.4465    
       500   301.21367     -37616.485      5294.5313      3887.8351    
       600   340.68362     -37639.436      5476.6943      3888.2237    
       700   296.70427     -37600.691      12332.042      3888.6122    
       800   291.74943     -37607.367      4831.7432      3889.0008    
       900   285.87727     -37632.63       2013.782       3889.3894    
      1000   279.51975     -37650.583      16056.668      3889.778     
      1100   268.2046      -37616.498      10556.318      3890.1666    
      1200   296.04176     -37625.214      4954.5148      3890.5552    
      1300   294.4639      -37608.214      11643.33       3890.9438    
      1400   300.19676     -37602.64       9127.8382      3891.3324    
      1500   284.13693     -37603.413      8297.2356      3891.721     
      1600   284.55016     -37632.706      11598.344      3892.1095    
      1700   279.96194     -37623.987     -944.24693      3892.4981    
      1800   303.60625     -37630.71       264.28103      3892.8867    
      1900   302.81412     -37621.799     -11446.05       3893.2753    
      2000   308.90527     -37626.205     -7021.9384      3893.6639    
      2100   298.67462     -37620.796     -8741.9654      3894.0525    
      2200   295.25362     -37614.125      2649.9126      3894.4411    
      2300   301.71603     -37613.043      24461.208      3894.8297    
      2400   316.20775     -37629.203      10962.987      3895.2183    
      2500   309.65192     -37639.464      20909.348      3895.6069    
      2600   273.97726     -37622.178      4800.1209      3895.9954    
      2700   297.57826     -37641.784     -1514.2137      3896.384     
      2800   302.36333     -37608.862      17482.544      3896.7726    
      2900   303.92126     -37609.228      413.13977      3897.1612    
      3000   312.74865     -37638.212      8014.417       3897.5498    
      3100   284.61686     -37620.701      1449.9955      3897.9384    
      3200   285.05914     -37620.122     -6083.869       3898.327     
      3300   321.48882     -37619.787      8364.1801      3898.7156    
      3400   327.54519     -37623.055      16830.544      3899.1042    
      3500   321.12418     -37636.735     -411.34078      3899.4927    
      3600   298.49764     -37631.589     -926.21274      3899.8813    
      3700   301.95751     -37639.625     -12673.526      3900.2699    
      3800   281.29715     -37619.294      7352.3804      3900.6585    
      3900   311.66368     -37622.088     -1224.6772      3901.0471    
      4000   297.45331     -37583.054     -6693.1606      3901.4357    
      4100   308.58459     -37610.197     -5045.2034      3901.8243    
      4200   311.05871     -37640.254      1612.8958      3902.2129    
      4300   295.15918     -37632.277      7712.7402      3902.6015    
      4400   298.55156     -37632.21      -4421.2706      3902.99      
      4500   303.67834     -37625.95      -1207.375       3903.3786    
      4600   318.37199     -37606.644     -3972.0798      3903.7672    
      4700   331.66506     -37618.576      11294.638      3904.1558    
      4800   304.76195     -37620.942      8087.4192      3904.5444    
      4900   296.76351     -37619.514      288.65985      3904.933     
      5000   295.44147     -37624.885     -3097.8268      3905.3216    
      5100   289.52971     -37622.344      2748.0376      3905.7102    
      5200   289.18653     -37626.652     -5661.7467      3906.0988    
      5300   316.11109     -37642.837      1746.4234      3906.4873    
      5400   287.72422     -37601.476      9629.6542      3906.8759    
      5500   315.93638     -37627.343      20873.195      3907.2645    
      5600   308.7445      -37622.181      1110.6266      3907.6531    
      5700   284.2185      -37620.598     -4491.097       3908.0417    
      5800   310.41437     -37658.148      11763.92       3908.4303    
      5900   286.10353     -37609.122     -3033.9887      3908.8189    
      6000   294.48221     -37587.117     -1633.4058      3909.2075    
      6100   303.07159     -37599.352      8727.832       3909.5961    
      6200   282.8489      -37596.991      7702.2734      3909.9847    
      6300   317.44697     -37648.459      10167.704      3910.3732    
      6400   306.79071     -37647.583      4698.7909      3910.7618    
      6500   295.82275     -37630.994      6440.6867      3911.1504    
      6600   307.48385     -37629.202      6025.1923      3911.539     
      6700   302.65568     -37616.498      18694.521      3911.9276    
      6800   304.0802      -37603.056      3164.2572      3912.3162    
      6900   309.09472     -37606.762      4547.3986      3912.7048    
      7000   314.10238     -37642.982     -1733.6965      3913.0934    
      7100   272.9368      -37618.374      3267.0051      3913.482     
      7200   293.07609     -37631.973     -1552.332       3913.8705    
      7300   307.63989     -37628.969      11780.213      3914.2591    
      7400   298.52165     -37616.756      12495.045      3914.6477    
      7500   292.01485     -37613.784      1386.3483      3915.0363    
      7600   293.61169     -37614.482      11281.091      3915.4249    
      7700   311.91305     -37624.354      2596.4403      3915.8135    
      7800   300.20834     -37608.863      796.09049      3916.2021    
      7900   306.65369     -37630.649      7188.048       3916.5907    
      8000   302.39782     -37644.445      10084.018      3916.9793    
      8100   286.46274     -37635.363      1878.2856      3917.3678    
      8200   289.82806     -37607.189     -9807.1031      3917.7564    
      8300   311.50922     -37611.952      5534.5417      3918.145     
      8400   314.87097     -37630.427      2583.2322      3918.5336    
      8500   300.17939     -37636.475      3797.9269      3918.9222    
      8600   298.26692     -37639.574      13363.542      3919.3108    
      8700   302.50375     -37628.635      12674.666      3919.6994    
      8800   311.00263     -37617.013     -482.45392      3920.088     
      8900   333.01755     -37609.292     -4273.0678      3920.4766    
      9000   317.60161     -37579.697      8221.9798      3920.8651    
      9100   323.93213     -37625.453      821.44285      3921.2537    
      9200   306.59142     -37627.851      6402.4822      3921.6423    
      9300   292.30328     -37630.857     -6743.3523      3922.0309    
      9400   292.08999     -37635.995      2902.5726      3922.4195    
      9500   295.71772     -37636.465      1910.2561      3922.8081    
      9600   304.19873     -37622.467     -1870.4672      3923.1967    
      9700   322.12974     -37619.21       8781.844       3923.5853    
      9800   313.50635     -37614.281     -348.93823      3923.9739    
      9900   277.71139     -37613.463      7317.1205      3924.3625    
     10000   289.58144     -37636.868      20712.278      3924.751     
Loop time of 417.494 on 8 procs for 10000 steps with 365 atoms

Performance: 1.035 ns/day, 23.194 hours/ns, 23.952 timesteps/s, 8.743 katom-step/s
98.9% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 250.9      | 328.67     | 370.55     | 225.6 | 78.73
Bond    | 0.025394   | 0.026827   | 0.028581   |   0.5 |  0.01
Neigh   | 3.1749     | 4.1397     | 4.7394     |  26.3 |  0.99
Comm    | 5.7045     | 47.515     | 125.31     | 593.1 | 11.38
Output  | 0.029192   | 0.075762   | 0.17174    |  18.3 |  0.02
Modify  | 36.17      | 36.82      | 37.76      |   9.1 |  8.82
Other   |            | 0.2421     |            |       |  0.06

Nlocal:         45.625 ave          51 max          37 min
Histogram: 1 0 0 0 0 2 2 1 1 1
Nghost:        3339.75 ave        3362 max        3314 min
Histogram: 1 1 0 0 0 1 3 1 0 1
Neighs:          29631 ave       32763 max       24436 min
Histogram: 1 0 0 0 0 2 2 1 1 1

Total # of neighbors = 237048
Ave neighs/atom = 649.44658
Ave special neighs/atom = 0
Neighbor list builds = 150
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos3

# Delete dir to make sure it is not reused
variable dir delete
# uyz Perturbation
variable dir equal 4
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
variable len0 equal ${lx0}
variable len0 equal 15.3172
variable dlen equal 2*(yz-${yz0})
variable dlen equal 2*(yz--0.1382)
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.3172 13.8463 18.3222) with tilt (-7.7318 0.2463 -0.1382)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  365 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*15.3172
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.731799999999999784, deltaxy = 0.077318
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.24629999999999999116, deltaxz = -0.002463
print "yz = $(yz), deltayz = ${deltayz}"
yz = -0.13819999999999998952, deltayz = 0.001382
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no
fix deform_n all deform 100 yz delta ${delta} remap v units box flip no
fix deform_n all deform 100 yz delta -0.153172 remap v units box flip no
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 4 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg4.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg4.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg4 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg4 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg4 all custom/gz 100 dump/neg_deform4.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 4
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 131 | 131.4 | 131.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -37619.569      4596.5757      3885.8921    
       100   301.59455     -37626.259      4044.9017      3885.8921    
       200   283.88874     -37614.91      -2743.1803      3885.8921    
       300   265.40707     -37606.322      1481.1295      3885.8921    
       400   294.82435     -37636.683      7200.5518      3885.8921    
       500   301.10624     -37616.65       5720.4593      3885.8921    
       600   343.85824     -37642.411      5555.2012      3885.8921    
       700   295.79041     -37599.485      11631.673      3885.8921    
       800   291.25084     -37606.782      6037.4535      3885.8921    
       900   291.48268     -37636.432      982.27199      3885.8921    
      1000   273.97701     -37646.725      14462.763      3885.8921    
      1100   275.88426     -37628.277      11101.508      3885.8921    
      1200   297.29267     -37628.617      5645.9867      3885.8921    
      1300   280.02448     -37592.693      6835.0624      3885.8921    
      1400   312.16774     -37615.395      1713.4078      3885.8921    
      1500   285.62537     -37612.25       6864.004       3885.8921    
      1600   280.2809      -37623.014      5865.3788      3885.8921    
      1700   297.78175     -37634.169      12716.579      3885.8921    
      1800   305.95509     -37636.703     -1544.8539      3885.8921    
      1900   286.26659     -37611.415     -6802.8596      3885.8921    
      2000   325.79717     -37646.241      7844.741       3885.8921    
      2100   313.55779     -37619.71       21221.686      3885.8921    
      2200   309.98229     -37604.459      6629.7087      3885.8921    
      2300   316.03087     -37626.314      11998.612      3885.8921    
      2400   276.44221     -37608.423      6100.0678      3885.8921    
      2500   284.14087     -37617.886     -13587.778      3885.8921    
      2600   323.5357      -37634.263     -4154.3479      3885.8921    
      2700   313.19464     -37602.695      14219.778      3885.8921    
      2800   342.55688     -37616.292      2444.7285      3885.8921    
      2900   307.80909     -37601.459      5195.3719      3885.8921    
      3000   301.25338     -37632.002     -6313.8654      3885.8921    
      3100   287.3638      -37630.99       4266.0807      3885.8921    
      3200   275.85188     -37620.37      -12536.609      3885.8921    
      3300   305.38609     -37625.235      437.19613      3885.8921    
      3400   314.17947     -37624.626     -12655.27       3885.8921    
      3500   283.77788     -37603.839      2546.6137      3885.8921    
      3600   277.22322     -37632.492      752.28947      3885.8921    
      3700   288.52481     -37660.302     -2789.5302      3885.8921    
      3800   277.83267     -37634.105      9590.8588      3885.8921    
      3900   295.699       -37637.205     -10267.703      3885.8921    
      4000   293.47047     -37618.215     -26146.389      3885.8921    
      4100   314.1447      -37625.024     -5191.6791      3885.8921    
      4200   283.74432     -37597.137     -551.18653      3885.8921    
      4300   312.91681     -37671.83       16337.416      3885.8921    
      4400   282.28236     -37643.158      12410.612      3885.8921    
      4500   283.72517     -37625.283     -921.04999      3885.8921    
      4600   304.58752     -37621.976     -2405.008       3885.8921    
      4700   320.32336     -37633.522      8379.2803      3885.8921    
      4800   294.66652     -37623.328      1661.7243      3885.8921    
      4900   292.50709     -37631.468      5085.2703      3885.8921    
      5000   292.03992     -37627.85      -10522.444      3885.8921    
      5100   311.25893     -37605.947      11192.81       3885.8921    
      5200   317.06117     -37606.674      1556.152       3885.8921    
      5300   302.83706     -37619.671      11357.191      3885.8921    
      5400   301.38526     -37640.324      7675.5171      3885.8921    
      5500   294.93108     -37635.215      3668.2473      3885.8921    
      5600   308.82185     -37630.943      20271.932      3885.8921    
      5700   311.40134     -37605.061      4082.6503      3885.8921    
      5800   296.91308     -37587.252      15705.937      3885.8921    
      5900   286.92521     -37625.976      18885.286      3885.8921    
      6000   293.32023     -37643.487      14813.705      3885.8921    
      6100   302.22168     -37639.038     -10171.977      3885.8921    
      6200   315.95011     -37632.198      2234.326       3885.8921    
      6300   296.97214     -37602.473      1665.9246      3885.8921    
      6400   316.62307     -37642.294      3558.397       3885.8921    
      6500   284.91619     -37641.633      12830.901      3885.8921    
      6600   292.93307     -37645.045      21355.153      3885.8921    
      6700   304.93448     -37635.807      6513.2826      3885.8921    
      6800   291.25137     -37602.08       10814.123      3885.8921    
      6900   300.31994     -37606.247     -2204.5803      3885.8921    
      7000   309.02079     -37628.471      13518.992      3885.8921    
      7100   283.28998     -37609.536      6221.7338      3885.8921    
      7200   295.46298     -37626.183      12724.648      3885.8921    
      7300   310.36463     -37644.514     -5707.1636      3885.8921    
      7400   288.65425     -37630.432     -11470.318      3885.8921    
      7500   291.73988     -37647.177      6440.9166      3885.8921    
      7600   296.48723     -37641.703      2496.6361      3885.8921    
      7700   291.13607     -37608.553      6321.5807      3885.8921    
      7800   319.59856     -37633.423      752.7081       3885.8921    
      7900   293.96913     -37613.775      13043.931      3885.8921    
      8000   296.77388     -37661.475      293.09289      3885.8921    
      8100   283.97954     -37655.987      9459.1836      3885.8921    
      8200   329.58565     -37693.87       12881.957      3885.8921    
      8300   299.76547     -37656.196     -5496.5458      3885.8921    
      8400   317.06398     -37704.393      5362.718       3885.8921    
      8500   299.39853     -37708.678     -2512.3046      3885.8921    
      8600   293.44185     -37700.561      15623.688      3885.8921    
      8700   328.88189     -37724.662      8409.2036      3885.8921    
      8800   319.54219     -37691.043      13520.087      3885.8921    
      8900   335.87948     -37674.451      12649.796      3885.8921    
      9000   299.73921     -37649.429      11346.177      3885.8921    
      9100   306.17162     -37699.373      748.73859      3885.8921    
      9200   302.76673     -37705.763     -1730.3704      3885.8921    
      9300   300.37436     -37710.989      11851.3        3885.8921    
      9400   276.61842     -37686.296      7427.2915      3885.8921    
      9500   295.74681     -37677.747      25091.629      3885.8921    
      9600   322.95113     -37691.979      9245.865       3885.8921    
      9700   298.52092     -37675.952      11076.262      3885.8921    
      9800   305.35701     -37700.384      6913.5081      3885.8921    
      9900   298.19018     -37702.081      19569.113      3885.8921    
     10000   296.71308     -37704.071      5758.5669      3885.8921    
Loop time of 422.191 on 8 procs for 10000 steps with 365 atoms

Performance: 1.023 ns/day, 23.455 hours/ns, 23.686 timesteps/s, 8.645 katom-step/s
98.9% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 251.67     | 325.83     | 376.83     | 294.7 | 77.18
Bond    | 0.02495    | 0.026495   | 0.027553   |   0.6 |  0.01
Neigh   | 3.4695     | 4.4837     | 5.3241     |  37.1 |  1.06
Comm    | 3.8496     | 54.836     | 129.04     | 718.1 | 12.99
Output  | 0.028431   | 0.071206   | 0.15876    |  17.3 |  0.02
Modify  | 35.838     | 36.7       | 37.751     |  13.1 |  8.69
Other   |            | 0.2423     |            |       |  0.06

Nlocal:         45.625 ave          48 max          44 min
Histogram: 2 0 2 0 0 2 0 1 0 1
Nghost:        3357.25 ave        3396 max        3315 min
Histogram: 1 1 0 1 1 0 1 2 0 1
Neighs:        29945.2 ave       31274 max       28982 min
Histogram: 2 0 2 0 1 1 0 0 1 1

Total # of neighbors = 239562
Ave neighs/atom = 656.33425
Ave special neighs/atom = 0
Neighbor list builds = 163
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg4

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.3172 13.8463 18.3222) with tilt (-7.7318 0.2463 -0.1382)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  365 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*15.3172
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box
fix deform_p all deform 100 yz delta ${delta} remap v units box
fix deform_p all deform 100 yz delta 0.153172 remap v units box
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 4 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos4.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos4.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos4 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos4 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos4 all custom/gz 100 dump/pos_deform4.lammpstrj.gz id type q x y z
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 4
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 131 | 131.4 | 131.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -37619.569      4596.5757      3885.8921    
       100   301.5971      -37626.259      4039.4987      3885.8921    
       200   283.90732     -37614.985     -2718.1395      3885.8921    
       300   265.12619     -37606.488      1478.9533      3885.8921    
       400   294.20311     -37636.633      7343.5672      3885.8921    
       500   300.53847     -37616.031      5707.3594      3885.8921    
       600   341.30819     -37640.107      5330.1289      3885.8921    
       700   295.9418      -37599.533      11867.561      3885.8921    
       800   292.27383     -37608.135      4737.2179      3885.8921    
       900   286.80748     -37634.495     -526.67186      3885.8921    
      1000   277.59565     -37649.622      15572.694      3885.8921    
      1100   273.97948     -37624.685      7794.5197      3885.8921    
      1200   302.5969      -37634.243      4375.6842      3885.8921    
      1300   284.0815      -37598.673      9010.1932      3885.8921    
      1400   306.32552     -37607.288      7507.1918      3885.8921    
      1500   299.34668     -37617.242      5424.6752      3885.8921    
      1600   284.5927      -37632.718      13655.965      3885.8921    
      1700   295.28691     -37645.016      6930.7865      3885.8921    
      1800   288.22505     -37625.644      6357.659       3885.8921    
      1900   289.56471     -37611.707     -12640.753      3885.8921    
      2000   324.70134     -37637.791     -3786.1355      3885.8921    
      2100   296.91006     -37603.81       201.03206      3885.8921    
      2200   288.29054     -37619.075     -580.08229      3885.8921    
      2300   306.20404     -37661.721      14402.466      3885.8921    
      2400   279.78326     -37622.947      9867.3778      3885.8921    
      2500   299.15925     -37618.744     -11562.921      3885.8921    
      2600   316.75051     -37629.437     -1253.8933      3885.8921    
      2700   305.52486     -37621.927      6563.5311      3885.8921    
      2800   298.65271     -37630.696      14165.095      3885.8921    
      2900   283.52444     -37643.411      9081.8434      3885.8921    
      3000   278.78991     -37641.478     -5759.7442      3885.8921    
      3100   304.16525     -37624.34       3778.234       3885.8921    
      3200   300.53312     -37601.78       5380.441       3885.8921    
      3300   307.15383     -37611.525      3686.7605      3885.8921    
      3400   300.37513     -37628.501     -1216.264       3885.8921    
      3500   300.88959     -37637.474      7810.7101      3885.8921    
      3600   296.67422     -37620.786      11678.553      3885.8921    
      3700   321.06345     -37613.086      2687.8277      3885.8921    
      3800   315.91667     -37611.442      5189.0136      3885.8921    
      3900   303.50843     -37628.149      15810.06       3885.8921    
      4000   298.42689     -37627.654      2212.6704      3885.8921    
      4100   294.09406     -37626.014     -6386.0221      3885.8921    
      4200   319.94579     -37647.065      17392.689      3885.8921    
      4300   312.3288      -37630.404      20.369377      3885.8921    
      4400   307.62327     -37626.169     -8500.8833      3885.8921    
      4500   266.92857     -37593.781      4247.0322      3885.8921    
      4600   288.47097     -37622.909      1491.0556      3885.8921    
      4700   313.1392      -37635.808      6723.2792      3885.8921    
      4800   328.75108     -37628.573      6765.0359      3885.8921    
      4900   305.37397     -37602.467      7885.3866      3885.8921    
      5000   290.41769     -37624.004      13477.205      3885.8921    
      5100   303.75808     -37647.233      15570.13       3885.8921    
      5200   290.86451     -37624.321      5932.5909      3885.8921    
      5300   325.18489     -37643.936      2848.663       3885.8921    
      5400   308.95766     -37615.745     -2079.5112      3885.8921    
      5500   326.17354     -37605.392      898.54312      3885.8921    
      5600   319.25412     -37609.962      9587.9367      3885.8921    
      5700   306.7182      -37629.772      13809.562      3885.8921    
      5800   279.27379     -37615.4        14601.356      3885.8921    
      5900   296.46968     -37632.213      7965.047       3885.8921    
      6000   303.95951     -37624.967      17675.505      3885.8921    
      6100   300.6759      -37587.11       8262.5711      3885.8921    
      6200   313.07083     -37605.469     -1288.7095      3885.8921    
      6300   304.35653     -37617.778     -7722.3503      3885.8921    
      6400   293.38008     -37613.069      10912.677      3885.8921    
      6500   306.67632     -37633.508      10706.732      3885.8921    
      6600   292.03163     -37634.333      18406.264      3885.8921    
      6700   275.56043     -37638.162      5872.3185      3885.8921    
      6800   297.38559     -37653.406     -6756.1391      3885.8921    
      6900   302.39481     -37620.291      831.7094       3885.8921    
      7000   303.77081     -37613.749      7315.2801      3885.8921    
      7100   311.42832     -37626.64       10373.46       3885.8921    
      7200   312.11022     -37638.399      9980.2451      3885.8921    
      7300   280.45571     -37632.634      11588.313      3885.8921    
      7400   282.89663     -37643.804      4054.0459      3885.8921    
      7500   285.17701     -37613.504      3378.9516      3885.8921    
      7600   310.31868     -37624.284      12993.136      3885.8921    
      7700   302.7781      -37618.25      -640.28643      3885.8921    
      7800   296.91449     -37621.9        3841.3768      3885.8921    
      7900   290.74496     -37627.773      224.10563      3885.8921    
      8000   289.8661      -37631.316      12722.524      3885.8921    
      8100   306.37673     -37639.806      10955.642      3885.8921    
      8200   310.33882     -37615.721      11335.886      3885.8921    
      8300   304.38052     -37602.154      5107.4471      3885.8921    
      8400   291.652       -37608.435      17187.32       3885.8921    
      8500   298.94203     -37631.871     -9759.5548      3885.8921    
      8600   282.55937     -37611.79      -10205.097      3885.8921    
      8700   326.63637     -37651.192     -3200.7442      3885.8921    
      8800   295.27423     -37615.681     -1708.8543      3885.8921    
      8900   303.33276     -37640.013     -7774.09        3885.8921    
      9000   273.51444     -37637.09      -9429.0353      3885.8921    
      9100   281.85252     -37633.811     -3429.617       3885.8921    
      9200   302.71101     -37631.012      21430.155      3885.8921    
      9300   311.4863      -37635.591      1451.6042      3885.8921    
      9400   293.41508     -37623.832     -2092.7641      3885.8921    
      9500   300.15184     -37643.129      567.64305      3885.8921    
      9600   293.16445     -37619.543      14471.301      3885.8921    
      9700   311.51796     -37605.689      20121.385      3885.8921    
      9800   313.39494     -37609.717      10639.714      3885.8921    
      9900   296.23598     -37613.591      796.60969      3885.8921    
     10000   292.23263     -37627.014     -8710.036       3885.8921    
Loop time of 417.592 on 8 procs for 10000 steps with 365 atoms

Performance: 1.035 ns/day, 23.200 hours/ns, 23.947 timesteps/s, 8.741 katom-step/s
98.9% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 251.61     | 324.71     | 373.09     | 278.6 | 77.76
Bond    | 0.025622   | 0.026937   | 0.028089   |   0.5 |  0.01
Neigh   | 3.3481     | 4.333      | 5.1039     |  34.8 |  1.04
Comm    | 3.9141     | 52.297     | 125.43     | 694.1 | 12.52
Output  | 0.029267   | 0.074106   | 0.16694    |  17.8 |  0.02
Modify  | 34.992     | 35.81      | 36.838     |  12.4 |  8.58
Other   |            | 0.3398     |            |       |  0.08

Nlocal:         45.625 ave          53 max          38 min
Histogram: 1 0 1 0 1 3 0 0 1 1
Nghost:        3329.75 ave        3364 max        3294 min
Histogram: 1 1 0 1 1 1 0 0 2 1
Neighs:        29956.4 ave       34504 max       25235 min
Histogram: 1 0 1 0 1 3 0 0 1 1

Total # of neighbors = 239651
Ave neighs/atom = 656.57808
Ave special neighs/atom = 0
Neighbor list builds = 159
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos4

# Delete dir to make sure it is not reused
variable dir delete
# uxz Perturbation
variable dir equal 5
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
variable len0 equal ${ly0}
variable len0 equal 13.8463
variable dlen equal 2*(xz-${xz0})
variable dlen equal 2*(xz-0.2463)
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.3172 13.8463 18.3222) with tilt (-7.7318 0.2463 -0.1382)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  365 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*13.8463
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.731799999999999784, deltaxy = 0.077318
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.24629999999999999116, deltaxz = -0.002463
print "yz = $(yz), deltayz = ${deltayz}"
yz = -0.13819999999999998952, deltayz = 0.001382
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no
fix deform_n all deform 100 xz delta ${delta} remap v units box flip no
fix deform_n all deform 100 xz delta -0.138463 remap v units box flip no
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 5 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg5.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg5.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg5 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg5 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg5 all custom/gz 100 dump/neg_deform5.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 4
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 131 | 131.4 | 131.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -37619.569      4596.5757      3885.8921    
       100   301.59576     -37626.262      4041.6141      3885.8921    
       200   283.92741     -37614.958     -2745.982       3885.8921    
       300   265.2437      -37606.403      1472.4896      3885.8921    
       400   294.59099     -37636.645      7152.3525      3885.8921    
       500   300.70932     -37615.963      5635.0272      3885.8921    
       600   341.29709     -37639.737      5391.4343      3885.8921    
       700   296.88062     -37600.197      12015.76       3885.8921    
       800   292.39426     -37607.464      5167.6353      3885.8921    
       900   287.49177     -37633.922     -1473.9164      3885.8921    
      1000   280.12221     -37650.91       14464.855      3885.8921    
      1100   272.04669     -37620.652      10303.421      3885.8921    
      1200   298.11535     -37626.342      2414.4287      3885.8921    
      1300   287.81917     -37600.339      6434.1475      3885.8921    
      1400   309.42918     -37608.98      -1861.9914      3885.8921    
      1500   287.15807     -37606.276      4003.8439      3885.8921    
      1600   284.55006     -37633.583      8008.1209      3885.8921    
      1700   277.37861     -37632.426      8675.365       3885.8921    
      1800   312.67186     -37634.733      5934.2043      3885.8921    
      1900   309.45016     -37617.409     -3758.8333      3885.8921    
      2000   310.93494     -37626.159      10284.176      3885.8921    
      2100   283.2232      -37613.549      6319.3358      3885.8921    
      2200   288.38413     -37620.219      6565.1232      3885.8921    
      2300   310.13731     -37632.566      11532.509      3885.8921    
      2400   321.58664     -37613.876     -3451.4093      3885.8921    
      2500   318.65404     -37613.463     -12425.296      3885.8921    
      2600   305.96982     -37627.164     -1832.3467      3885.8921    
      2700   316.77825     -37652.458     -4079.6937      3885.8921    
      2800   299.88033     -37634.928      278.40387      3885.8921    
      2900   297.92289     -37621.762      6379.0731      3885.8921    
      3000   311.32471     -37614.04       3685.3928      3885.8921    
      3100   334.76114     -37629.72       2893.6269      3885.8921    
      3200   300.03094     -37634.335      27399.043      3885.8921    
      3300   281.77922     -37619.98       6834.4686      3885.8921    
      3400   321.68099     -37641.668      19228.304      3885.8921    
      3500   320.43088     -37632.309     -7110.0879      3885.8921    
      3600   296.24237     -37615.731      11210.982      3885.8921    
      3700   284.03748     -37634.061     -1740.7992      3885.8921    
      3800   282.74157     -37636.779     -3923.363       3885.8921    
      3900   295.18909     -37630.46       401.88919      3885.8921    
      4000   309.01002     -37611.175      4672.9935      3885.8921    
      4100   311.88051     -37613.062      17112.425      3885.8921    
      4200   283.90069     -37600.45       11583.764      3885.8921    
      4300   306.15035     -37646.276      12997.295      3885.8921    
      4400   290.44338     -37651.811      4930.5769      3885.8921    
      4500   299.23435     -37644.811      4076.6278      3885.8921    
      4600   300.61702     -37607.286     -1186.7887      3885.8921    
      4700   308.48929     -37609.9        3021.6251      3885.8921    
      4800   311.0834      -37634.53       3031.5189      3885.8921    
      4900   272.75937     -37610.048      4714.281       3885.8921    
      5000   304.82886     -37638.047      4803.1131      3885.8921    
      5100   304.46341     -37604.077      11204.851      3885.8921    
      5200   325.49889     -37613.619     -7159.8057      3885.8921    
      5300   304.1349      -37617.927     -88.465323      3885.8921    
      5400   309.32852     -37641.338      532.0913       3885.8921    
      5500   285.62933     -37626.782     -1555.3331      3885.8921    
      5600   308.6569      -37646.499      5923.9664      3885.8921    
      5700   304.60804     -37605.482      9602.8372      3885.8921    
      5800   309.22438     -37611.499      1560.5435      3885.8921    
      5900   322.8538      -37648.171     -8954.9693      3885.8921    
      6000   296.36831     -37628.53      -7952.5203      3885.8921    
      6100   295.34413     -37624.648      8401.1067      3885.8921    
      6200   308.42473     -37626.852      7119.2636      3885.8921    
      6300   312.19297     -37594.719     -1620.5551      3885.8921    
      6400   327.73119     -37612.53       9446.1072      3885.8921    
      6500   318.92248     -37630.088      7919.4044      3885.8921    
      6600   292.19778     -37610.926      10687.421      3885.8921    
      6700   292.83        -37615.135      14091.645      3885.8921    
      6800   316.36331     -37653.039      3198.0333      3885.8921    
      6900   278.78263     -37642.962     -3668.5197      3885.8921    
      7000   291.16646     -37653.578      360.27307      3885.8921    
      7100   296.18943     -37630.626     -8057.8662      3885.8921    
      7200   297.8095      -37625.117      8095.5648      3885.8921    
      7300   300.16627     -37633.357      5308.9285      3885.8921    
      7400   289.72209     -37630.272      15313.309      3885.8921    
      7500   290.67259     -37626.583      9369.1665      3885.8921    
      7600   299.59146     -37609.068      19337.832      3885.8921    
      7700   314.05448     -37614.65       12876.259      3885.8921    
      7800   299.92676     -37622.023      1975.4553      3885.8921    
      7900   292.4866      -37644.135      6640.7109      3885.8921    
      8000   286.61997     -37629.789      1275.7395      3885.8921    
      8100   308.16794     -37637.753      898.57933      3885.8921    
      8200   303.85724     -37625.155     -1844.5091      3885.8921    
      8300   304.3028      -37620.496     -11631.65       3885.8921    
      8400   303.22585     -37619.231      20491.848      3885.8921    
      8500   320.50253     -37641.612     -4560.5961      3885.8921    
      8600   278.21502     -37610.193      899.42352      3885.8921    
      8700   282.08874     -37623.784      9307.4864      3885.8921    
      8800   319.8823      -37660.546      10334.859      3885.8921    
      8900   305.50977     -37626.649      23895.544      3885.8921    
      9000   323.14672     -37626.584      43.1562        3885.8921    
      9100   311.42686     -37602.735     -2973.7344      3885.8921    
      9200   298.60154     -37624.067      7398.3609      3885.8921    
      9300   280.86761     -37621.604      7286.7536      3885.8921    
      9400   287.3082      -37617.611     -1556.013       3885.8921    
      9500   306.51477     -37627.527      953.49952      3885.8921    
      9600   301.93414     -37612.217      26584.704      3885.8921    
      9700   307.07921     -37623.306     -363.42955      3885.8921    
      9800   296.99846     -37631.547      9799.6525      3885.8921    
      9900   298.09117     -37644.898     -2300.6618      3885.8921    
     10000   301.761       -37634.676      8510.9489      3885.8921    
Loop time of 421.137 on 8 procs for 10000 steps with 365 atoms

Performance: 1.026 ns/day, 23.396 hours/ns, 23.745 timesteps/s, 8.667 katom-step/s
98.9% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 254.83     | 324.39     | 372.48     | 255.9 | 77.03
Bond    | 0.025976   | 0.027616   | 0.028883   |   0.6 |  0.01
Neigh   | 3.1971     | 4.0696     | 4.7698     |  30.6 |  0.97
Comm    | 7.7743     | 55.793     | 125.35     | 616.6 | 13.25
Output  | 0.028818   | 0.074092   | 0.16741    |  18.0 |  0.02
Modify  | 35.801     | 36.539     | 37.444     |  10.5 |  8.68
Other   |            | 0.2428     |            |       |  0.06

Nlocal:         45.625 ave          50 max          41 min
Histogram: 1 0 1 1 1 1 1 0 1 1
Nghost:           3361 ave        3394 max        3308 min
Histogram: 1 0 1 0 1 0 0 2 1 2
Neighs:        29954.4 ave       32803 max       27294 min
Histogram: 1 1 1 0 2 0 1 0 1 1

Total # of neighbors = 239635
Ave neighs/atom = 656.53425
Ave special neighs/atom = 0
Neighbor list builds = 150
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg5

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.3172 13.8463 18.3222) with tilt (-7.7318 0.2463 -0.1382)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  365 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*13.8463
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box
fix deform_p all deform 100 xz delta ${delta} remap v units box
fix deform_p all deform 100 xz delta 0.138463 remap v units box
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 5 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos5.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos5.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos5 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos5 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos5 all custom/gz 100 dump/pos_deform5.lammpstrj.gz id type q x y z
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 4
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 131 | 131.4 | 131.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -37619.569      4596.5757      3885.8921    
       100   301.59523     -37626.255      4027.0124      3885.8921    
       200   283.84236     -37614.915     -2729.2453      3885.8921    
       300   265.28741     -37606.463      1512.4678      3885.8921    
       400   294.53872     -37636.8        7359.0305      3885.8921    
       500   301.19091     -37616.747      5771.3473      3885.8921    
       600   344.39303     -37643.281      5385.8758      3885.8921    
       700   294.98517     -37598.946      11617.571      3885.8921    
       800   289.97649     -37605.655      5538.3066      3885.8921    
       900   292.25944     -37636.607      924.35072      3885.8921    
      1000   270.63883     -37643.672      14080.719      3885.8921    
      1100   279.43013     -37632.518      7788.9911      3885.8921    
      1200   302.90904     -37634.536      5652.2392      3885.8921    
      1300   285.71028     -37597.705      11297.003      3885.8921    
      1400   309.5946      -37614.094      5796.5639      3885.8921    
      1500   283.68016     -37603.325      3895.4617      3885.8921    
      1600   292.51296     -37641.622      11846.109      3885.8921    
      1700   302.60598     -37655.827      7017.0984      3885.8921    
      1800   315.49909     -37627.788     -3473.5353      3885.8921    
      1900   314.40601     -37614.048     -10324.162      3885.8921    
      2000   304.93903     -37617.654      787.1711       3885.8921    
      2100   291.71425     -37625.3        5308.4914      3885.8921    
      2200   294.8326      -37631.165      20201.065      3885.8921    
      2300   290.53849     -37618.283      10666.411      3885.8921    
      2400   316.91579     -37611.962      6090.5989      3885.8921    
      2500   313.57147     -37599.367     -7689.6594      3885.8921    
      2600   294.52048     -37603.464      64.469157      3885.8921    
      2700   299.2335      -37635.351      3649.2574      3885.8921    
      2800   286.87668     -37625.679      10172.189      3885.8921    
      2900   310.36919     -37642.387     -472.03966      3885.8921    
      3000   323.6633      -37634.266      6751.9588      3885.8921    
      3100   312.15043     -37591.076      1689.3838      3885.8921    
      3200   307.91737     -37593.26      -344.575        3885.8921    
      3300   308.80126     -37629.723      6616.8678      3885.8921    
      3400   291.30938     -37622.147      13489.261      3885.8921    
      3500   274.22572     -37605.7        10339.772      3885.8921    
      3600   313.26515     -37635.833      6234.1634      3885.8921    
      3700   308.91127     -37616.088      2837.7366      3885.8921    
      3800   324.81999     -37620.931      13445.559      3885.8921    
      3900   301.86331     -37624.641      21696.581      3885.8921    
      4000   287.85805     -37632.122      8892.5111      3885.8921    
      4100   287.47679     -37629.409      10530.997      3885.8921    
      4200   304.25521     -37627.169     -6101.0733      3885.8921    
      4300   289.83607     -37587.453     -6517.1455      3885.8921    
      4400   304.82143     -37605.106     -13076.436      3885.8921    
      4500   282.16354     -37631.876     -10310.844      3885.8921    
      4600   283.00425     -37633.44      -4832.579       3885.8921    
      4700   300.69434     -37629.259     -8781.2121      3885.8921    
      4800   308.26931     -37613.778      9110.0664      3885.8921    
      4900   302.84075     -37612.754      7235.1466      3885.8921    
      5000   325.80045     -37654.246      7072.1928      3885.8921    
      5100   276.29177     -37636.822      10721.807      3885.8921    
      5200   266.63855     -37626.371      1553.9051      3885.8921    
      5300   284.54067     -37625.179     -3661.2601      3885.8921    
      5400   308.32453     -37637.305     -3255.3165      3885.8921    
      5500   294.42691     -37612.901     -2485.8395      3885.8921    
      5600   300.19517     -37615.581     -9091.1447      3885.8921    
      5700   309.29951     -37605.602      2591.9676      3885.8921    
      5800   310.44211     -37607.56      -1894.0331      3885.8921    
      5900   310.46177     -37643.638     -3946.9038      3885.8921    
      6000   277.82813     -37622.34      -1797.5007      3885.8921    
      6100   294.74571     -37637.721      5245.9685      3885.8921    
      6200   300.35686     -37616.875      8598.9533      3885.8921    
      6300   316.26108     -37613.322      10151.648      3885.8921    
      6400   329.38036     -37633.197      11946.367      3885.8921    
      6500   295.11025     -37609.832      2670.3756      3885.8921    
      6600   296.40056     -37625.894     -5099.7345      3885.8921    
      6700   311.06751     -37641.6        2913.6697      3885.8921    
      6800   300.76217     -37623.859     -8947.4806      3885.8921    
      6900   300.14255     -37624.287     -6028.0472      3885.8921    
      7000   283.9005      -37635.811      5608.7613      3885.8921    
      7100   289.239       -37653.73      -8644.7407      3885.8921    
      7200   291.36429     -37633.224      18226.198      3885.8921    
      7300   311.78813     -37637.174      9278.8224      3885.8921    
      7400   323.3983      -37644.53       2756.8096      3885.8921    
      7500   299.90018     -37629.986      1022.4314      3885.8921    
      7600   283.84226     -37649.045     -6571.4637      3885.8921    
      7700   282.48764     -37652.089      2222.2587      3885.8921    
      7800   280.82009     -37626.208      9075.4763      3885.8921    
      7900   302.2299      -37631.495      16041.644      3885.8921    
      8000   272.53065     -37591.663      8442.6812      3885.8921    
      8100   305.22539     -37614.544      12859.983      3885.8921    
      8200   313.22574     -37623.002      5177.4543      3885.8921    
      8300   287.05102     -37622.525      5067.2049      3885.8921    
      8400   286.89363     -37639.104      26979.845      3885.8921    
      8500   295.14702     -37636.653      13345.604      3885.8921    
      8600   304.84806     -37617.897      13702.408      3885.8921    
      8700   304.97142     -37616.908      3072.5366      3885.8921    
      8800   288.1427      -37610.731      19155.296      3885.8921    
      8900   300.49699     -37625.957      4295.189       3885.8921    
      9000   316.79245     -37635.932     -3326.0791      3885.8921    
      9100   302.32869     -37638.156      429.62702      3885.8921    
      9200   287.12885     -37654.933      12427.622      3885.8921    
      9300   280.81885     -37629.309      12690.482      3885.8921    
      9400   300.59488     -37622.909     -125.93809      3885.8921    
      9500   318.45802     -37634.156      12216.786      3885.8921    
      9600   305.59        -37620.284     -1207.5566      3885.8921    
      9700   292.82352     -37625.038      1039.7743      3885.8921    
      9800   291.22814     -37642.383      15437.017      3885.8921    
      9900   300.71818     -37644.456      4.3305822      3885.8921    
     10000   314.50217     -37626.864      418.0958       3885.8921    
Loop time of 401.991 on 8 procs for 10000 steps with 365 atoms

Performance: 1.075 ns/day, 22.333 hours/ns, 24.876 timesteps/s, 9.080 katom-step/s
98.9% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 252.24     | 289.85     | 357.57     | 256.1 | 72.10
Bond    | 0.024281   | 0.026147   | 0.027737   |   0.6 |  0.01
Neigh   | 3.3564     | 3.9191     | 4.8624     |  32.8 |  0.97
Comm    | 5.2487     | 72.988     | 110.58     | 510.4 | 18.16
Output  | 0.029073   | 0.072467   | 0.16276    |  17.5 |  0.02
Modify  | 33.851     | 34.807     | 35.388     |  11.1 |  8.66
Other   |            | 0.329      |            |       |  0.08

Nlocal:         45.625 ave          48 max          43 min
Histogram: 3 0 0 0 0 0 2 0 0 3
Nghost:        3327.75 ave        3368 max        3284 min
Histogram: 1 0 1 2 0 1 0 1 0 2
Neighs:        29950.2 ave       31479 max       28163 min
Histogram: 3 0 0 0 0 1 1 0 0 3

Total # of neighbors = 239602
Ave neighs/atom = 656.44384
Ave special neighs/atom = 0
Neighbor list builds = 158
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos5

# Delete dir to make sure it is not reused
variable dir delete
# uxy Perturbation
variable dir equal 6
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"
variable len0 equal ${lz0}
variable len0 equal 18.3222
variable dlen equal 2*(xy-${xy0})
variable dlen equal 2*(xy--7.7318)

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.3172 13.8463 18.3222) with tilt (-7.7318 0.2463 -0.1382)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  365 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*18.3222
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.731799999999999784, deltaxy = 0.077318
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.24629999999999999116, deltaxz = -0.002463
print "yz = $(yz), deltayz = ${deltayz}"
yz = -0.13819999999999998952, deltayz = 0.001382
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no
fix deform_n all deform 100 xy delta ${delta} remap v units box flip no
fix deform_n all deform 100 xy delta -0.183222 remap v units box flip no

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 6 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg6.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg6.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg6 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg6 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg6 all custom/gz 100 dump/neg_deform6.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 4
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 131 | 131.4 | 131.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -37619.569      4596.5757      3885.8921    
       100   301.59318     -37626.259      4040.6339      3885.8921    
       200   283.87394     -37614.902     -2753.2495      3885.8921    
       300   265.32585     -37606.579      1518.3592      3885.8921    
       400   294.44007     -37636.897      7161.5204      3885.8921    
       500   300.51421     -37616.367      5773.4252      3885.8921    
       600   342.71748     -37641.723      5649.3989      3885.8921    
       700   298.01933     -37601.819      12039.863      3885.8921    
       800   292.14188     -37607.478      5447.0888      3885.8921    
       900   289.28019     -37635.246     -1156.2815      3885.8921    
      1000   273.70948     -37646.733      13540.195      3885.8921    
      1100   271.53765     -37624.056      8440.7914      3885.8921    
      1200   303.69247     -37636.038      288.48765      3885.8921    
      1300   278.1073      -37592.882      5549.0954      3885.8921    
      1400   305.17202     -37607.746      3060.2456      3885.8921    
      1500   287.27801     -37601.521      7967.2981      3885.8921    
      1600   290.04615     -37633.119      3198.0318      3885.8921    
      1700   289.65006     -37646.186      7443.9889      3885.8921    
      1800   292.70402     -37627.569     -378.83735      3885.8921    
      1900   294.41966     -37606.28      -13507.379      3885.8921    
      2000   314.19804     -37624.096      1559.735       3885.8921    
      2100   298.34952     -37616.36       2299.3408      3885.8921    
      2200   313.70262     -37640.539      254.07946      3885.8921    
      2300   280.63555     -37621.761      12404.084      3885.8921    
      2400   300.73355     -37641.487      9901.5066      3885.8921    
      2500   313.81127     -37623.851      1219.4742      3885.8921    
      2600   321.68873     -37620.039     -5682.828       3885.8921    
      2700   310.97645     -37629.181      7997.5464      3885.8921    
      2800   291.49823     -37615.252      13223.651      3885.8921    
      2900   307.27566     -37634.481      2635.0033      3885.8921    
      3000   293.48728     -37626.28       2239.4042      3885.8921    
      3100   295.50891     -37616.676     -4692.6551      3885.8921    
      3200   311.83978     -37608.466     -7486.5338      3885.8921    
      3300   316.2337      -37611.491      2074.5696      3885.8921    
      3400   311.36017     -37628.207      8980.4509      3885.8921    
      3500   282.579       -37620.59       13656.019      3885.8921    
      3600   303.35602     -37645.721     -6344.2474      3885.8921    
      3700   295.93531     -37627.094      11896.675      3885.8921    
      3800   300.68243     -37623.973      9688.127       3885.8921    
      3900   315.52896     -37637.717      613.24499      3885.8921    
      4000   298.89812     -37612.083      13233.747      3885.8921    
      4100   295.36484     -37620.088      8529.7231      3885.8921    
      4200   298.5428      -37654.218     -4328.3642      3885.8921    
      4300   284.86835     -37639.396      10429.741      3885.8921    
      4400   322.46435     -37645.203      23323.319      3885.8921    
      4500   308.68598     -37626.838      15083.462      3885.8921    
      4600   294.48593     -37620.048      710.28821      3885.8921    
      4700   289.29389     -37631.46       1488.12        3885.8921    
      4800   289.87396     -37630.459      10273.577      3885.8921    
      4900   320.94938     -37634.9        10873.377      3885.8921    
      5000   298.2295      -37592.673      17563.665      3885.8921    
      5100   303.85129     -37605.785      1514.4335      3885.8921    
      5200   302.08473     -37643.782      10650.399      3885.8921    
      5300   277.65246     -37623.647      1610.6694      3885.8921    
      5400   282.99174     -37612.659      3662.7938      3885.8921    
      5500   301.30368     -37610.773      9166.1429      3885.8921    
      5600   306.43181     -37608.5        5339.5401      3885.8921    
      5700   297.73697     -37621.806      10529.408      3885.8921    
      5800   282.2687      -37636.503      5019.3926      3885.8921    
      5900   274.76419     -37626.078     -109.71773      3885.8921    
      6000   283.92973     -37624.063     -2853.7958      3885.8921    
      6100   305.17609     -37625.165      5425.0517      3885.8921    
      6200   299.56609     -37618.371      8828.7737      3885.8921    
      6300   319.83135     -37645.479      4772.921       3885.8921    
      6400   297.76806     -37629.076      5192.2332      3885.8921    
      6500   289.99218     -37623.784     -2077.42        3885.8921    
      6600   285.40272     -37620.716      13037.081      3885.8921    
      6700   307.12295     -37647.952      10041.032      3885.8921    
      6800   300.25855     -37637.585     -4312.2477      3885.8921    
      6900   304.13765     -37632.258      17095.015      3885.8921    
      7000   324.60181     -37631.87      -7835.2395      3885.8921    
      7100   308.71009     -37626.601      5776.1712      3885.8921    
      7200   291.96872     -37642.418      5272.2386      3885.8921    
      7300   275.92016     -37622.415      718.90306      3885.8921    
      7400   295.50358     -37628.612      617.28565      3885.8921    
      7500   304.55094     -37632.319      11884.789      3885.8921    
      7600   314.5039      -37637.165     -1802.2224      3885.8921    
      7700   317.30704     -37634.262      4999.2393      3885.8921    
      7800   309.05264     -37629.586      528.3928       3885.8921    
      7900   307.63781     -37643.55      -1582.7036      3885.8921    
      8000   289.21817     -37645.745      12453.502      3885.8921    
      8100   285.60849     -37653.532     -2109.5805      3885.8921    
      8200   300.88493     -37643.459      20069.153      3885.8921    
      8300   306.73886     -37629.239      8190.145       3885.8921    
      8400   307.02751     -37630.56       12028.493      3885.8921    
      8500   292.61163     -37627.465      14006.069      3885.8921    
      8600   300.80441     -37655.665      7272.7428      3885.8921    
      8700   275.64114     -37651.671      1935.8122      3885.8921    
      8800   274.25346     -37640.715      6073.0392      3885.8921    
      8900   303.28858     -37633.97      -698.61006      3885.8921    
      9000   307.28501     -37628.786      2047.0871      3885.8921    
      9100   288.77012     -37610.987      2580.0427      3885.8921    
      9200   294.1783      -37638.089      24251.976      3885.8921    
      9300   278.06297     -37638.885      3795.5589      3885.8921    
      9400   281.02702     -37639.362      7555.4969      3885.8921    
      9500   302.96544     -37623.77      -5964.0542      3885.8921    
      9600   307.93921     -37626.27       1170.6765      3885.8921    
      9700   309.5536      -37645.436      6254.7297      3885.8921    
      9800   275.10927     -37627.275     -3244.5091      3885.8921    
      9900   301.79343     -37664.481      13888.586      3885.8921    
     10000   293.16274     -37656.111      6544.0156      3885.8921    
Loop time of 364.379 on 8 procs for 10000 steps with 365 atoms

Performance: 1.186 ns/day, 20.243 hours/ns, 27.444 timesteps/s, 10.017 katom-step/s
98.9% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 245.29     | 266.08     | 323.14     | 192.2 | 73.02
Bond    | 0.024355   | 0.025601   | 0.028088   |   0.7 |  0.01
Neigh   | 3.5852     | 3.9377     | 4.8447     |  26.1 |  1.08
Comm    | 5.4077     | 62.518     | 83.256     | 397.0 | 17.16
Output  | 0.025659   | 0.067449   | 0.15462    |  17.5 |  0.02
Modify  | 30.611     | 31.512     | 31.874     |   9.0 |  8.65
Other   |            | 0.2348     |            |       |  0.06

Nlocal:         45.625 ave          50 max          40 min
Histogram: 1 0 0 1 3 0 0 0 0 3
Nghost:        3371.38 ave        3405 max        3341 min
Histogram: 1 1 2 0 0 1 0 1 1 1
Neighs:        29946.1 ave       32785 max       26538 min
Histogram: 1 0 1 3 0 0 0 0 0 3

Total # of neighbors = 239569
Ave neighs/atom = 656.35342
Ave special neighs/atom = 0
Neighbor list builds = 169
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg6

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.3172 13.8463 18.3222) with tilt (-7.7318 0.2463 -0.1382)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  365 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*18.3222
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box
fix deform_p all deform 100 xy delta ${delta} remap v units box
fix deform_p all deform 100 xy delta 0.183222 remap v units box

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 6 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos6.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos6.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos6 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos6 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos6 all custom/gz 100 dump/pos_deform6.lammpstrj.gz id type q x y z
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 4
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 131 | 131.4 | 131.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -37619.569      4596.5757      3885.8921    
       100   301.59697     -37626.259      4043.4613      3885.8921    
       200   283.90227     -37614.987     -2724.408       3885.8921    
       300   265.12866     -37606.248      1466.8652      3885.8921    
       400   294.62509     -37636.65       7338.3227      3885.8921    
       500   301.23271     -37616.535      5638.1747      3885.8921    
       600   344.04048     -37642.777      5238.3312      3885.8921    
       700   294.01036     -37597.769      11728.282      3885.8921    
       800   288.55513     -37604.222      6246.1975      3885.8921    
       900   292.01202     -37638.784      269.89904      3885.8921    
      1000   270.84588     -37642.529      15386.356      3885.8921    
      1100   284.50305     -37636.534      8240.0022      3885.8921    
      1200   294.79949     -37624.717      3865.5067      3885.8921    
      1300   288.81008     -37602.15       6819.6186      3885.8921    
      1400   306.3934      -37610.07       7763.366       3885.8921    
      1500   294.44453     -37617.855      7310.6799      3885.8921    
      1600   283.02859     -37633.161      12130.538      3885.8921    
      1700   285.24677     -37631.41       5174.3036      3885.8921    
      1800   300.26272     -37632.778      6980.2203      3885.8921    
      1900   295.61225     -37614.059     -9784.4113      3885.8921    
      2000   319.1035      -37638.144     -6827.9103      3885.8921    
      2100   289.6118      -37610.92      -3400.3039      3885.8921    
      2200   322.53348     -37668.887     -1482.3767      3885.8921    
      2300   265.21601     -37626.339      11488.295      3885.8921    
      2400   289.10796     -37628.509     -2149.81        3885.8921    
      2500   301.86171     -37619.087     -5689.5936      3885.8921    
      2600   305.50796     -37625.663     -4784.9514      3885.8921    
      2700   305.98599     -37638.82       5919.6496      3885.8921    
      2800   282.14899     -37629.881      11287.965      3885.8921    
      2900   300.244       -37663.115      5704.1354      3885.8921    
      3000   279.35625     -37619.502      1611.5094      3885.8921    
      3100   305.2018      -37617.429     -1468.9302      3885.8921    
      3200   315.45299     -37629.897     -2359.9609      3885.8921    
      3300   292.25174     -37619.776      3330.3634      3885.8921    
      3400   279.04403     -37624.514      10804          3885.8921    
      3500   290.91065     -37644.408      8373.2512      3885.8921    
      3600   293.24166     -37627.2       -4399.6343      3885.8921    
      3700   304.15213     -37612.587      5627.9731      3885.8921    
      3800   304.59927     -37610.091      2367.1576      3885.8921    
      3900   285.59141     -37599.619     -1981.892       3885.8921    
      4000   272.33374     -37618.759     -5629.7491      3885.8921    
      4100   306.13626     -37655.804      3459.4566      3885.8921    
      4200   289.31274     -37621.792     -4364.0393      3885.8921    
      4300   297.54274     -37617.942      5541.6908      3885.8921    
      4400   312.33388     -37629.994      896.15856      3885.8921    
      4500   300.18824     -37614.354     -123.1735       3885.8921    
      4600   288.48528     -37617.408     -7421.5284      3885.8921    
      4700   289.99706     -37639.477     -5453.9368      3885.8921    
      4800   275.42648     -37642.151      7116.4875      3885.8921    
      4900   318.45185     -37656.468     -8879.7742      3885.8921    
      5000   299.72553     -37612.439      13407.598      3885.8921    
      5100   306.70945     -37610.089      9457.4388      3885.8921    
      5200   312.84726     -37610.08       6861.7743      3885.8921    
      5300   314.01629     -37631.51       15857.92       3885.8921    
      5400   278.34436     -37623.206     -1266.9183      3885.8921    
      5500   286.6187      -37628.01      -3849.3359      3885.8921    
      5600   302.69247     -37617.613      3474.4726      3885.8921    
      5700   298.0183      -37607.831      5247.1034      3885.8921    
      5800   315.72678     -37629.008     -2265.4256      3885.8921    
      5900   286.13396     -37606.728      11790.619      3885.8921    
      6000   266.844       -37627.021     -4445.993       3885.8921    
      6100   290.13739     -37656.197      805.416        3885.8921    
      6200   275.87176     -37617.417      10188.49       3885.8921    
      6300   314.58766     -37642.674      5730.5664      3885.8921    
      6400   312.55362     -37628.255      11092.218      3885.8921    
      6500   316.97715     -37624.186      8885.0192      3885.8921    
      6600   311.17638     -37631.526      7496.7247      3885.8921    
      6700   282.15696     -37633.477     -2742.8268      3885.8921    
      6800   289.88034     -37637.066      12872.053      3885.8921    
      6900   313.72273     -37638.55       2979.9431      3885.8921    
      7000   318.69707     -37621.699     -3864.4657      3885.8921    
      7100   312.47199     -37613.74       4635.3097      3885.8921    
      7200   311.22124     -37633.138      13820.764      3885.8921    
      7300   278.90378     -37612.833      14810.763      3885.8921    
      7400   321.44962     -37662.722      8385.0988      3885.8921    
      7500   318.23613     -37671.595     -2764.9328      3885.8921    
      7600   280.90296     -37651.084     -2004.3671      3885.8921    
      7700   301.13868     -37673.344     -2170.2027      3885.8921    
      7800   277.9371      -37638.421      8802.5703      3885.8921    
      7900   290.10259     -37640.292      6321.4551      3885.8921    
      8000   321.89566     -37661.88       11163.067      3885.8921    
      8100   317.5566      -37642.625      14502.951      3885.8921    
      8200   308.86249     -37657.887      1454.295       3885.8921    
      8300   308.84918     -37682.067      6652.3016      3885.8921    
      8400   277.5377      -37649.317     -8149.3787      3885.8921    
      8500   300.23612     -37665.68      -4124.7678      3885.8921    
      8600   300.44365     -37659.12      -15393.768      3885.8921    
      8700   317.35963     -37668.149      1636.9089      3885.8921    
      8800   302.03694     -37669.458      9621.5667      3885.8921    
      8900   261.43918     -37642.376      5989.7147      3885.8921    
      9000   305.23011     -37689.584      12050.906      3885.8921    
      9100   303.9895      -37669.91       680.97498      3885.8921    
      9200   308.53264     -37651.903      872.68835      3885.8921    
      9300   309.23162     -37654.019     -2447.3166      3885.8921    
      9400   288.90089     -37663.724     -660.43534      3885.8921    
      9500   304.08034     -37689.045     -1131.5397      3885.8921    
      9600   281.38354     -37654.374      6812.425       3885.8921    
      9700   319.82705     -37684.862      6890.3476      3885.8921    
      9800   291.94754     -37654.415      16925.65       3885.8921    
      9900   277.10199     -37647.171      2686.6868      3885.8921    
     10000   322.63822     -37717.281      2109.0023      3885.8921    
Loop time of 277.848 on 8 procs for 10000 steps with 365 atoms

Performance: 1.555 ns/day, 15.436 hours/ns, 35.991 timesteps/s, 13.137 katom-step/s
98.7% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 233.93     | 240.45     | 244.38     |  20.8 | 86.54
Bond    | 0.023529   | 0.025362   | 0.028488   |   1.0 |  0.01
Neigh   | 3.073      | 3.1432     | 3.2971     |   3.8 |  1.13
Comm    | 2.9751     | 6.9095     | 13.407     | 122.6 |  2.49
Output  | 0.020111   | 0.062265   | 0.1498     |  18.3 |  0.02
Modify  | 26.748     | 26.924     | 27.022     |   1.5 |  9.69
Other   |            | 0.3335     |            |       |  0.12

Nlocal:         45.625 ave          49 max          41 min
Histogram: 1 1 0 0 0 1 2 1 0 2
Nghost:        3353.25 ave        3367 max        3325 min
Histogram: 1 0 0 0 0 2 1 0 1 3
Neighs:        29944.5 ave       32134 max       27194 min
Histogram: 2 0 0 0 1 2 0 1 0 2

Total # of neighbors = 239556
Ave neighs/atom = 656.31781
Ave special neighs/atom = 0
Neighbor list builds = 147
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos6

# Delete dir to make sure it is not reused
variable dir delete

# Calc and output
# include calc.mod.lmp

Total wall time: 1:21:16
