LAMMPS (2 Aug 2023 - Update 2)
  using 1 OpenMP thread(s) per MPI task
# Initialization
units           real
dimension       3
boundary        p p p
# boundary        s s s
atom_style      full
timestep        0.5   # fs

# Define MD parameters
variable nevery equal 10                  # sampling interval
variable nrepeat equal 10                 # number of samples
variable nfreq equal ${nevery}*${nrepeat} # length of one average
variable nfreq equal 10*${nrepeat} 
variable nfreq equal 10*10 
variable nthermo equal ${nfreq}           # interval for thermo output
variable nthermo equal 100           
# 1 ps : 1e3 fs / 0.5 fs = 2e3 steps
# variable nequil equal 20*${nthermo}       # steps of equilibration run 10
variable nrun equal 100*${nthermo}          # stpes of equilibrated run 10
variable nrun equal 100*100          
variable temp equal 300.0                # temperature of initial sample
variable tdamp equal 50.0                 # time constant for thermostat
variable seed equal 123456                # seed for thermostat
variable ufac equal 1.01325e-4         # pressure unit conversion, from atm to Gpa
variable up equal 0.01                  # the deformation magnitude 0.1
variable FF string "SiOCHN_2018.ff C H O Si"          # force field args for pair_coeff
# pair_coeff * * CHONSSi.ff C H O Si
# pair_coeff * * CHOSiNa.ff C H O Si
# pair_coeff * * SiOCHN_2018.ff C H O Si
# pair_coeff * * PDMSDecomp.ff C H O Si
# pair_coeff * * CHONSi.ff C H O Si
# pair_coeff * * CHOFe.ff O Si

# Read the initial sctructure
# box tilt large
variable structure string 333-HD-100C-20

read_data       ${structure}.data
read_data       333-HD-100C-20.data
Reading data file ...
  triclinic box = (0 0 0) to (16.1249 13.4224 16.909) with tilt (-8.2539 0.6162 -0.6491)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  reading atoms ...
  366 atoms
  reading velocities ...
  366 velocities
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.001 seconds
  read_data CPU = 0.015 seconds

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400

# # Energy minimization
# print "*****Minimization starts.*****"
# minimize 1.0e-6 1.0e-6 100 1000
# min_style cg
# # Save the optimized structure
# write_data ${structure}_opt.data
velocity        all create ${temp} ${seed} dist gaussian
velocity        all create 300 ${seed} dist gaussian
velocity        all create 300 123456 dist gaussian

# # Equilibration
# include ff.mod.lmp
# if "$(is_defined(fix,avgp))" then "unfix avgp"
# if "$(is_defined(fix,avgl))" then "unfix avgl"
# thermo_style custom step temp pe press density vol
# run ${nequil}
# # Save the equilibrated structure
# write_data ${structure}_eq.data

# use tmp to save initial length and tilt
variable tmp equal lx
variable lx0 equal ${tmp}
variable lx0 equal 16.1249
variable tmp equal ly
variable ly0 equal ${tmp}
variable ly0 equal 13.4224
variable tmp equal lz
variable lz0 equal ${tmp}
variable lz0 equal 16.909

variable tmp equal yz
variable yz0 equal ${tmp}
variable yz0 equal -0.6491
variable tmp equal xz
variable xz0 equal ${tmp}
variable xz0 equal 0.6162
variable tmp equal xy
variable xy0 equal ${tmp}
variable xy0 equal -8.2539

# Write restart
write_restart equil.res
System init for write_restart ...
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none

# dir: direction
# uxx Perturbation
variable dir equal 1
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
variable len0 equal ${lx0}
variable len0 equal 16.1249
variable dlen equal lx-${len0}
variable dlen equal lx-16.1249
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.1249 13.4224 16.909) with tilt (-8.2539 0.6162 -0.6491)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.005 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*16.1249
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -8.2538999999999997925, deltaxy = 0.082539
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.61619999999999996998, deltaxz = -0.006162
print "yz = $(yz), deltayz = ${deltayz}"
yz = -0.6491000000000000103, deltayz = 0.006491
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.161249 xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.161249 xy delta 0.082539 xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.161249 xy delta 0.082539 xz delta -0.006162 remap v units box flip no
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 1 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg1.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg1.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg1 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg1 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg1 all custom/gz 100 dump/neg_deform1.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 10000

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Your simulation uses code contributions which should be cited:

- pair reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 number =  {4--5},
 pages =   {245--259}
}

- fix qeq/reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 pages =   {245--259}
}

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 137.1 | 139 | 140.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -41082.288     -14052.22       3659.697     
       100   301.80155     -41088.315     -185.59935      3659.331     
       200   284.48678     -41082.394      6175.9617      3658.9651    
       300   283.65922     -41099.67      -13036.018      3658.5991    
       400   278.90628     -41094.506     -3401.4323      3658.2331    
       500   306.49094     -41091.606      4318.5545      3657.8672    
       600   299.1093      -41070.549     -1251.8774      3657.5012    
       700   318.0855      -41085.302      244.72464      3657.1352    
       800   301.43615     -41084.993     -10846.9        3656.7693    
       900   286.17209     -41102.326     -2786.7602      3656.4033    
      1000   284.15458     -41088.999     -8633.3163      3656.0373    
      1100   286.86374     -41069.601      1941.9613      3655.6713    
      1200   311.99733     -41079.639      1141.7242      3655.3054    
      1300   305.11202     -41080.269     -4550.8633      3654.9394    
      1400   291.2116      -41088.73       7835.0335      3654.5734    
      1500   281.96585     -41105.263     -13108.271      3654.2075    
      1600   266.23869     -41122.616      5790.9738      3653.8415    
      1700   284.37208     -41126.842      2773.3203      3653.4755    
      1800   277.83635     -41093.399     -1455.6664      3653.1096    
      1900   289.82134     -41084.198      14086.884      3652.7436    
      2000   300.55177     -41077.871     -1478.6299      3652.3776    
      2100   304.46783     -41070.224      7649.6421      3652.0116    
      2200   305.79686     -41061.342      3112.2725      3651.6457    
      2300   314.2748      -41093.236     -4232.1732      3651.2797    
      2400   305.16958     -41112.515      5922.5029      3650.9137    
      2500   301.1883      -41102.72      -4059.8654      3650.5478    
      2600   311.84884     -41093.545      3763.083       3650.1818    
      2700   308.91094     -41077.931     -9359.7307      3649.8158    
      2800   321.70186     -41086.493     -1611.1796      3649.4499    
      2900   309.68193     -41097.227     -2246.0919      3649.0839    
      3000   286.706       -41092.136     -3266.9754      3648.7179    
      3100   305.81051     -41108.303     -12947.731      3648.3519    
      3200   296.12469     -41074.578     -7498.3335      3647.986     
      3300   316.11313     -41070.68      -12610.484      3647.62      
      3400   312.69436     -41080.415      4824.3059      3647.254     
      3500   310.43791     -41089.25      -6414.2055      3646.8881    
      3600   306.83346     -41093.523     -4665.1173      3646.5221    
      3700   284.18469     -41083.568      3579.3882      3646.1561    
      3800   300.85168     -41106.794      1722.2947      3645.7902    
      3900   298.72114     -41105.723     -9437.4763      3645.4242    
      4000   294.36796     -41081.969     -7303.1605      3645.0582    
      4100   300.8472      -41063.004     -4744.0644      3644.6923    
      4200   312.14887     -41081.296     -122.21754      3644.3263    
      4300   296.29076     -41083.709     -1327.5004      3643.9603    
      4400   292.03122     -41113.04      -7543.6415      3643.5943    
      4500   283.41318     -41108.559      5165.5996      3643.2284    
      4600   302.3366      -41114.503     -620.78869      3642.8624    
      4700   306.24509     -41100.455      2883.8988      3642.4964    
      4800   313.77126     -41099.737      3127.3239      3642.1305    
      4900   291.79305     -41081.014     -7908.6253      3641.7645    
      5000   292.03888     -41100.712      5664.7761      3641.3985    
      5100   296.384       -41120.403     -5686.515       3641.0326    
      5200   297.53719     -41101.275      1238.7961      3640.6666    
      5300   300.53928     -41077.375     -5074.5004      3640.3006    
      5400   306.76475     -41086.33       5927.3294      3639.9346    
      5500   298.14031     -41083.926      17476.384      3639.5687    
      5600   284.36655     -41085.923     -2385.3483      3639.2027    
      5700   281.24523     -41105.113     -3107.7634      3638.8367    
      5800   274.0177      -41099.827      5182.4748      3638.4708    
      5900   294.63663     -41082.668     -3276.0811      3638.1048    
      6000   293.3009      -41073.001     -8451.6836      3637.7388    
      6100   303.50211     -41083.918     -4526.1717      3637.3729    
      6200   317.67375     -41106.475      6560.848       3637.0069    
      6300   296.58852     -41104.048     -6903.3714      3636.6409    
      6400   283.94028     -41108.738     -1197.881       3636.2749    
      6500   287.71338     -41101.804     -9853.0525      3635.909     
      6600   289.55271     -41069.803      6854.7207      3635.543     
      6700   316.64369     -41098.686     -949.05922      3635.177     
      6800   289.99946     -41081.683     -5167.6022      3634.8111    
      6900   289.86696     -41094.393      2954.5719      3634.4451    
      7000   273.12696     -41098.898     -5399.6872      3634.0791    
      7100   276.95815     -41114.019     -2388.4247      3633.7132    
      7200   300.70975     -41106.401     -10293.451      3633.3472    
      7300   305.44679     -41098.205      12171.331      3632.9812    
      7400   281.97086     -41074.259     -10673.485      3632.6153    
      7500   296.33964     -41087.521     -16699.3        3632.2493    
      7600   290.02225     -41097.581     -4437.3737      3631.8833    
      7700   311.85803     -41138.287      882.82722      3631.5173    
      7800   291.0226      -41119.708     -12161.134      3631.1514    
      7900   292.15207     -41087.859     -5265.5783      3630.7854    
      8000   306.25295     -41082.395     -12376.648      3630.4194    
      8100   301.17199     -41082.179     -3609.5417      3630.0535    
      8200   290.63704     -41092.536      5450.8027      3629.6875    
      8300   280.43034     -41100.471      6697.9953      3629.3215    
      8400   280.49183     -41084.283     -4030.3928      3628.9556    
      8500   305.84621     -41094.695     -3802.2158      3628.5896    
      8600   292.19567     -41080.716     -7008.9412      3628.2236    
      8700   286.96994     -41075.322      1106.4838      3627.8576    
      8800   305.43898     -41102.792      5195.3709      3627.4917    
      8900   293.11114     -41109.321      853.09993      3627.1257    
      9000   282.22997     -41107.693      1809.3874      3626.7597    
      9100   310.09343     -41109.292      9397.6181      3626.3938    
      9200   294.63009     -41069.075      15483.643      3626.0278    
      9300   302.86479     -41083.681     -2122.9043      3625.6618    
      9400   295.54401     -41090.904     -845.37768      3625.2959    
      9500   299.13574     -41121.026     -1259.6533      3624.9299    
      9600   275.03173     -41120.793     -535.08957      3624.5639    
      9700   271.12635     -41103.605      4448.2506      3624.1979    
      9800   283.20398     -41096.493     -2540.3829      3623.832     
      9900   302.09672     -41102.469      5066.6826      3623.466     
     10000   296.91111     -41084.566     -2575.3906      3623.1       
Loop time of 522.539 on 8 procs for 10000 steps with 366 atoms

Performance: 0.827 ns/day, 29.030 hours/ns, 19.137 timesteps/s, 7.004 katom-step/s
98.8% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 428.17     | 454.9      | 469.34     |  61.6 | 87.05
Bond    | 0.027806   | 0.030498   | 0.032555   |   0.8 |  0.01
Neigh   | 3.56       | 3.7385     | 3.8147     |   4.6 |  0.72
Comm    | 6.5892     | 21.054     | 47.892     | 287.8 |  4.03
Output  | 0.032793   | 0.088563   | 0.2026     |  20.2 |  0.02
Modify  | 42.316     | 42.437     | 42.549     |   1.2 |  8.12
Other   |            | 0.2936     |            |       |  0.06

Nlocal:          45.75 ave          53 max          37 min
Histogram: 1 1 0 1 0 1 1 1 1 1
Nghost:        3595.62 ave        3627 max        3562 min
Histogram: 2 0 0 1 1 1 0 1 0 2
Neighs:        32400.2 ave       37398 max       26645 min
Histogram: 1 1 0 1 0 1 1 2 0 1

Total # of neighbors = 259202
Ave neighs/atom = 708.20219
Ave special neighs/atom = 0
Neighbor list builds = 109
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg1

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.1249 13.4224 16.909) with tilt (-8.2539 0.6162 -0.6491)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*16.1249
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.161249 xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.161249 xy delta -0.082539 xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.161249 xy delta -0.082539 xz delta 0.006162 remap v units box
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 1 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos1.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos1.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos1 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos1 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos1 all custom/gz 100 dump/pos_deform1.lammpstrj.gz id type q x y z
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 137.1 | 139 | 140.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -41082.288     -14052.22       3659.697     
       100   301.81133     -41088.317     -195.73113      3660.063     
       200   284.14346     -41082.234      5595.1738      3660.4289    
       300   283.32779     -41099.104     -11451.416      3660.7949    
       400   279.80669     -41094.051     -2883.1978      3661.1609    
       500   309.10232     -41092.718      282.75605      3661.5269    
       600   299.00278     -41069.77      -12719.965      3661.8928    
       700   308.88546     -41077.058     -185.73311      3662.2588    
       800   299.80069     -41083.023     -4831.6453      3662.6248    
       900   286.76564     -41103.044     -2806.7759      3662.9907    
      1000   288.41566     -41095.055     -12285.775      3663.3567    
      1100   284.4067      -41076.202     -4751.9349      3663.7227    
      1200   303.73988     -41081.67       6937.3602      3664.0886    
      1300   309.74734     -41074.7        1529.545       3664.4546    
      1400   301.13916     -41025.842      3115.0249      3664.8206    
      1500   318.76219     -41046.155     -12158.424      3665.1866    
      1600   300.54973     -41062.081      1327.0642      3665.5525    
      1700   297.21526     -41082.174     -1401.0506      3665.9185    
      1800   288.89898     -41085.278      1062.9936      3666.2845    
      1900   297.12994     -41092.91      -12524.085      3666.6504    
      2000   316.3073      -41081.006      1131.9191      3667.0164    
      2100   312.00278     -41071.495     -2540.1857      3667.3824    
      2200   316.84279     -41091.196      10241.24       3667.7483    
      2300   295.15923     -41077.894      2754.3806      3668.1143    
      2400   303.25859     -41084.69      -2293.1938      3668.4803    
      2500   301.15221     -41084.181     -5004.6272      3668.8463    
      2600   296.87883     -41096.856     -12409.533      3669.2122    
      2700   274.56536     -41106.161     -6968.8469      3669.5782    
      2800   283.92201     -41102.849     -9593.2124      3669.9442    
      2900   287.53902     -41084.842      14391.578      3670.3101    
      3000   305.42091     -41089.507     -429.45243      3670.6761    
      3100   309.98218     -41085.477     -7330.9636      3671.0421    
      3200   284.6988      -41069.778     -8417.6667      3671.408     
      3300   298.42191     -41097.677     -13164.849      3671.774     
      3400   289.3149      -41103.923     -7382.7965      3672.14      
      3500   295.82843     -41102.234      309.76463      3672.5059    
      3600   316.10831     -41091.168     -9861.3746      3672.8719    
      3700   304.58325     -41066.453     -7918.9719      3673.2379    
      3800   297.61242     -41062.958      1744.9507      3673.6039    
      3900   282.95764     -41068.135     -3719.3043      3673.9698    
      4000   278.19843     -41072.704      2608.0979      3674.3358    
      4100   288.24291     -41102.097     -12273.644      3674.7018    
      4200   287.76162     -41102.37      -3580.11        3675.0677    
      4300   297.22287     -41083.661      4119.3314      3675.4337    
      4400   307.43534     -41070.055     -2627.8881      3675.7997    
      4500   322.60723     -41079.757     -18589.948      3676.1656    
      4600   293.99994     -41063.45      -14690.768      3676.5316    
      4700   291.96109     -41096.546     -6008.8182      3676.8976    
      4800   307.39897     -41116.063     -12640.829      3677.2636    
      4900   285.59196     -41078.904      5443.3289      3677.6295    
      5000   311.89956     -41090.846      11074.491      3677.9955    
      5100   303.62919     -41080.871     -5330.1342      3678.3615    
      5200   301.30084     -41074.345     -7294.749       3678.7274    
      5300   294.24806     -41070.301      990.14585      3679.0934    
      5400   310.02325     -41076.882     -6535.6111      3679.4594    
      5500   325.7507      -41052.021     -6269.3416      3679.8253    
      5600   331.13056     -41054.8       -3445.4794      3680.1913    
      5700   311.89415     -41069.925     -13891.741      3680.5573    
      5800   283.85628     -41060.102     -2493.5752      3680.9233    
      5900   303.9451      -41083.774     -8565.7547      3681.2892    
      6000   308.00405     -41081.228      2337.5752      3681.6552    
      6100   311.95014     -41072.734     -702.38416      3682.0212    
      6200   311.34699     -41079.486     -5052.5801      3682.3871    
      6300   289.35138     -41077.769     -3532.2568      3682.7531    
      6400   292.40543     -41095.244     -8529.0702      3683.1191    
      6500   311.47405     -41114.533     -1692.0987      3683.485     
      6600   299.57989     -41070.335     -5447.7879      3683.851     
      6700   318.08482     -41072.188     -12207.806      3684.217     
      6800   322.96923     -41086.839     -8524.7837      3684.5829    
      6900   298.72806     -41083.436      21966.008      3684.9489    
      7000   291.46427     -41099.703     -6673.2997      3685.3149    
      7100   269.78097     -41101.586     -8879.0953      3685.6809    
      7200   284.68709     -41090.317     -11449.239      3686.0468    
      7300   299.50024     -41075.178     -7161.2436      3686.4128    
      7400   310.01423     -41078.821     -11277.437      3686.7788    
      7500   304.62667     -41073.074     -3469.9345      3687.1447    
      7600   299.81715     -41068.687     -4716.8698      3687.5107    
      7700   292.88484     -41069.727     -5221.0152      3687.8767    
      7800   279.88136     -41076.663     -3362.41        3688.2426    
      7900   276.02343     -41081.707     -15892.795      3688.6086    
      8000   294.63497     -41078.375      101.89242      3688.9746    
      8100   305.81765     -41060.374      2674.1056      3689.3406    
      8200   312.86032     -41059.413     -13653.421      3689.7065    
      8300   296.07493     -41054.399     -12307.877      3690.0725    
      8400   288.66232     -41074.112     -8733.8483      3690.4385    
      8500   290.07393     -41089.163      255.72858      3690.8044    
      8600   293.28601     -41084.995     -7385.7962      3691.1704    
      8700   284.0012      -41058.792     -14273.42       3691.5364    
      8800   304.01991     -41060.895     -5962.0449      3691.9023    
      8900   307.22099     -41058.141     -2712.7908      3692.2683    
      9000   292.16465     -41068.583     -6313.2366      3692.6343    
      9100   272.72427     -41073.861      1368.1017      3693.0003    
      9200   309.52044     -41100.291      1393.4881      3693.3662    
      9300   296.09346     -41073.207     -512.81793      3693.7322    
      9400   316.94972     -41081.995     -14370.217      3694.0982    
      9500   315.99816     -41061.247     -3813.1316      3694.4641    
      9600   315.16477     -41055.272     -1236.3559      3694.8301    
      9700   318.65872     -41079.234     -16389.852      3695.1961    
      9800   286.67718     -41077.698     -10020.765      3695.562     
      9900   285.50009     -41073.801     -10202.274      3695.928     
     10000   300.18133     -41063.39      -242.13645      3696.294     
Loop time of 515.409 on 8 procs for 10000 steps with 366 atoms

Performance: 0.838 ns/day, 28.634 hours/ns, 19.402 timesteps/s, 7.101 katom-step/s
98.8% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 440.32     | 452.39     | 463.04     |  31.8 | 87.77
Bond    | 0.028808   | 0.030204   | 0.032117   |   0.7 |  0.01
Neigh   | 3.8135     | 3.8925     | 3.9681     |   2.4 |  0.76
Comm    | 5.8866     | 16.488     | 28.618     | 167.2 |  3.20
Output  | 0.033843   | 0.090767   | 0.20796    |  20.4 |  0.02
Modify  | 41.976     | 42.107     | 42.197     |   1.2 |  8.17
Other   |            | 0.4094     |            |       |  0.08

Nlocal:          45.75 ave          53 max          37 min
Histogram: 1 0 0 2 1 0 2 0 1 1
Nghost:        3515.38 ave        3549 max        3485 min
Histogram: 2 0 0 2 1 0 1 0 1 1
Neighs:        31724.8 ave       36639 max       25948 min
Histogram: 1 0 0 2 1 0 2 1 0 1

Total # of neighbors = 253798
Ave neighs/atom = 693.43716
Ave special neighs/atom = 0
Neighbor list builds = 114
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos1

# Delete dir to make sure it is not reused
variable dir delete
# uyy Perturbation
variable dir equal 2
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
variable len0 equal ${ly0}
variable len0 equal 13.4224
variable dlen equal ly-${len0}
variable dlen equal ly-13.4224
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.1249 13.4224 16.909) with tilt (-8.2539 0.6162 -0.6491)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.004 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*13.4224
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -8.2538999999999997925, deltaxy = 0.082539
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.61619999999999996998, deltaxz = -0.006162
print "yz = $(yz), deltayz = ${deltayz}"
yz = -0.6491000000000000103, deltayz = 0.006491
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 -0.134224 yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 -0.134224 yz delta 0.006491 remap v units box flip no
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 2 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg2.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg2.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg2 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg2 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg2 all custom/gz 100 dump/neg_deform2.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 137.1 | 139 | 140.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -41082.288     -14052.22       3659.697     
       100   301.80611     -41088.316     -190.92731      3659.331     
       200   284.12992     -41082.249      5854.0051      3658.9651    
       300   283.1609      -41099.086     -11545.871      3658.5991    
       400   279.38697     -41093.848     -2711.4133      3658.2331    
       500   307.93912     -41092.339      2774.405       3657.8672    
       600   299.91703     -41070.379     -1899.8041      3657.5012    
       700   310.29021     -41077.813      8663.8334      3657.1352    
       800   304.64803     -41085.516     -293.2263       3656.7693    
       900   285.27795     -41103.936     -2401.4855      3656.4033    
      1000   288.32049     -41099.421      13596.943      3656.0373    
      1100   283.33612     -41074.237     -3297.8267      3655.6713    
      1200   305.62387     -41081.987      3651.9606      3655.3054    
      1300   323.55041     -41096.396     -4016.9094      3654.9394    
      1400   288.94573     -41084.616     -2604.6646      3654.5734    
      1500   287.39576     -41111.575     -6194.1234      3654.2075    
      1600   298.3334      -41118.471     -541.71791      3653.8415    
      1700   316.81709     -41111.798      10391.228      3653.4755    
      1800   306.3947      -41086.264     -3156.0879      3653.1096    
      1900   307.28132     -41088.3       -2414.0192      3652.7436    
      2000   299.27625     -41086.205     -1154.7134      3652.3776    
      2100   300.10338     -41091.328      440.64115      3652.0116    
      2200   296.33494     -41091.236     -6671.9672      3651.6457    
      2300   294.8738      -41095.937      6732.4602      3651.2797    
      2400   308.86411     -41103.962     -2513.0016      3650.9137    
      2500   298.14251     -41067.152     -7805.0402      3650.5478    
      2600   308.52179     -41064.709     -15306.593      3650.1818    
      2700   289.09661     -41059.256     -6367.5489      3649.8158    
      2800   308.8707      -41122.517      4247.786       3649.4499    
      2900   281.62163     -41102.044      5372.1524      3649.0839    
      3000   295.6693      -41105.073     -14730.731      3648.7179    
      3100   291.78036     -41073.643      1482.6601      3648.3519    
      3200   312.51134     -41078.636     -993.30499      3647.986     
      3300   287.00599     -41061.851      564.83564      3647.62      
      3400   302.03609     -41090.315     -6933.2941      3647.254     
      3500   292.11567     -41092.918     -3453.1458      3646.8881    
      3600   268.27928     -41086.696     -16845.269      3646.5221    
      3700   285.63833     -41100.696     -1810.5734      3646.1561    
      3800   292.51493     -41078.06       352.64519      3645.7902    
      3900   308.73055     -41081.493     -8271.0973      3645.4242    
      4000   289.80029     -41064.406     -6017.5669      3645.0582    
      4100   297.70313     -41078.139     -12966.156      3644.6923    
      4200   293.8364      -41107.344      1791.5317      3644.3263    
      4300   290.79108     -41112.687     -174.9657       3643.9603    
      4400   281.38338     -41075.333     -3448.5867      3643.5943    
      4500   301.73976     -41080.128     -4312.0332      3643.2284    
      4600   299.42605     -41076.413      3250.8657      3642.8624    
      4700   306.56321     -41087.608     -1228.525       3642.4964    
      4800   287.13667     -41081.534      7563.8819      3642.1305    
      4900   281.57276     -41095.981      7374.7374      3641.7645    
      5000   297.69107     -41115.921      11730.811      3641.3985    
      5100   305.48106     -41089.987     -7086.8855      3641.0326    
      5200   309.92917     -41080.254     -12108.363      3640.6666    
      5300   305.60278     -41083.054      10666.507      3640.3006    
      5400   303.62572     -41099.459     -3432.9501      3639.9346    
      5500   283.61892     -41107.058      812.54631      3639.5687    
      5600   267.22355     -41094.058     -1489.717       3639.2027    
      5700   291.41981     -41092.017      10312.224      3638.8367    
      5800   309.44087     -41103.207     -5590.1513      3638.4708    
      5900   304.53545     -41088.974     -3037.0522      3638.1048    
      6000   303.16378     -41075.9       -1148.838       3637.7388    
      6100   302.06624     -41072.02       7576.4222      3637.3729    
      6200   295.80752     -41076.279      4142.7425      3637.0069    
      6300   295.47679     -41099.672      7322.7087      3636.6409    
      6400   274.45975     -41088.073      8298.592       3636.2749    
      6500   297.91994     -41093.164      1380.7471      3635.909     
      6600   317.21205     -41084.364     -11459.199      3635.543     
      6700   303.1154      -41076.527      4450.8846      3635.177     
      6800   291.95979     -41084.848      12382.118      3634.8111    
      6900   276.8369      -41075.506      4145.9838      3634.4451    
      7000   308.64461     -41092.658     -2665.5         3634.0791    
      7100   309.59528     -41056.867      532.20274      3633.7132    
      7200   314.28096     -41073.069      7475.0087      3633.3472    
      7300   296.31        -41080.454      761.45803      3632.9812    
      7400   304.87651     -41096.447     -921.20778      3632.6153    
      7500   300.84102     -41096.873     -2410.9744      3632.2493    
      7600   286.78061     -41092.345     -3997.8394      3631.8833    
      7700   267.86842     -41080.207      2494.1509      3631.5173    
      7800   294.28258     -41089.959     -7821.9418      3631.1514    
      7900   323.35308     -41096.041     -3880.38        3630.7854    
      8000   304.87039     -41075.092     -3194.7059      3630.4194    
      8100   301.37608     -41096.86      -5043.2842      3630.0535    
      8200   274.4611      -41098.837     -5096.8858      3629.6875    
      8300   300.01037     -41113.038     -623.07508      3629.3215    
      8400   312.15665     -41107.019      5835.7         3628.9556    
      8500   305.75302     -41089.535     -670.44966      3628.5896    
      8600   299.08802     -41088.459      9966.8194      3628.2236    
      8700   294.27426     -41075.299      13613.803      3627.8576    
      8800   324.90065     -41089.144     -4452.5822      3627.4917    
      8900   311.57432     -41085.677      4635.3754      3627.1257    
      9000   295.09037     -41098.19       7818.494       3626.7597    
      9100   286.75188     -41092.395     -7211.4951      3626.3938    
      9200   312.06867     -41107.265     -1303.4521      3626.0278    
      9300   307.81036     -41068.789     -5468.7292      3625.6618    
      9400   310.76129     -41063.911      1359.9399      3625.2959    
      9500   309.53722     -41073.521      1962.4938      3624.9299    
      9600   318.99763     -41100.319      9494.4773      3624.5639    
      9700   314.58293     -41109.633      15255.402      3624.1979    
      9800   289.40577     -41089.845      27579.748      3623.832     
      9900   308.76661     -41112.969      4890.9391      3623.466     
     10000   295.25832     -41095.288      6172.7706      3623.1       
Loop time of 520.573 on 8 procs for 10000 steps with 366 atoms

Performance: 0.830 ns/day, 28.921 hours/ns, 19.210 timesteps/s, 7.031 katom-step/s
98.9% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 351.94     | 425.99     | 467.56     | 184.2 | 81.83
Bond    | 0.027867   | 0.030045   | 0.031856   |   0.7 |  0.01
Neigh   | 2.9432     | 3.5097     | 3.8871     |  17.0 |  0.67
Comm    | 7.4431     | 49.033     | 123.18     | 543.9 |  9.42
Output  | 0.032358   | 0.087577   | 0.2011     |  20.2 |  0.02
Modify  | 41.243     | 41.65      | 42.188     |   4.8 |  8.00
Other   |            | 0.2758     |            |       |  0.05

Nlocal:          45.75 ave          53 max          37 min
Histogram: 1 0 0 2 0 0 3 1 0 1
Nghost:        3617.25 ave        3652 max        3581 min
Histogram: 1 1 1 1 0 0 1 1 0 2
Neighs:        32399.2 ave       37220 max       26563 min
Histogram: 1 0 0 2 0 0 3 1 0 1

Total # of neighbors = 259194
Ave neighs/atom = 708.18033
Ave special neighs/atom = 0
Neighbor list builds = 109
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg2

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.1249 13.4224 16.909) with tilt (-8.2539 0.6162 -0.6491)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*13.4224
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 ${delta} yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 0.134224 yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 0.134224 yz delta -0.006491 remap v units box
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 2 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos2.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos2.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos2 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos2 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos2 all custom/gz 100 dump/pos_deform2.lammpstrj.gz id type q x y z
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 137.1 | 139 | 140.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -41082.288     -14052.22       3659.697     
       100   301.80676     -41088.316     -190.387        3660.063     
       200   284.12893     -41082.361      5919.0345      3660.4289    
       300   284.16506     -41100.251     -13580.901      3660.7949    
       400   279.04138     -41093.804     -2942.4201      3661.1609    
       500   304.0028      -41087.91       431.09458      3661.5269    
       600   300.67749     -41071.798     -717.6649       3661.8928    
       700   312.0426      -41079.884     -2873.3835      3662.2588    
       800   302.65472     -41081.212     -7792.1824      3662.6248    
       900   270.70608     -41085.896     -6326.1111      3662.9907    
      1000   297.23023     -41106.344     -101.89772      3663.3567    
      1100   289.50834     -41078.055     -14308.507      3663.7227    
      1200   305.81615     -41078.451      2121.582       3664.0886    
      1300   309.14256     -41077.738     -6005.0133      3664.4546    
      1400   304.32951     -41079.764     -8209.2904      3664.8206    
      1500   301.83344     -41084.817     -8333.4017      3665.1866    
      1600   303.61907     -41093.989     -20798.18       3665.5525    
      1700   285.66494     -41080.869     -2311.2605      3665.9185    
      1800   304.87426     -41089.948     -958.58745      3666.2845    
      1900   325.62284     -41079.918     -623.36904      3666.6504    
      2000   301.18116     -41054.896     -2876.632       3667.0164    
      2100   303.51185     -41082.55      -6639.8704      3667.3824    
      2200   286.41557     -41078.729     -4863.9939      3667.7483    
      2300   317.04416     -41110.302     -5683.3731      3668.1143    
      2400   295.00066     -41091.2       -13945.323      3668.4803    
      2500   283.82721     -41084.35      -3022.2938      3668.8463    
      2600   311.13383     -41080.613      1903.0995      3669.2122    
      2700   314.8343      -41070.618     -211.68179      3669.5782    
      2800   311.67225     -41081.968     -5480.4108      3669.9442    
      2900   310.8188      -41100.136     -25728.621      3670.3101    
      3000   292.43322     -41085.753     -6710.5999      3670.6761    
      3100   295.42074     -41081.854      3064.6261      3671.0421    
      3200   302.02365     -41077.274     -2700.842       3671.408     
      3300   325.0794      -41064.91      -8091.7949      3671.774     
      3400   309.96254     -41052.112     -12834.903      3672.14      
      3500   318.19287     -41093.312     -3835.2825      3672.5059    
      3600   306.96943     -41092.095     -12585.78       3672.8719    
      3700   304.26046     -41088.552      3072.6663      3673.2379    
      3800   282.79573     -41065.313     -1152.6226      3673.6039    
      3900   290.39288     -41081.075     -10756.948      3673.9698    
      4000   290.65232     -41090.317     -3148.3337      3674.3358    
      4100   302.73364     -41094.011     -2680.6471      3674.7018    
      4200   304.36137     -41074.466     -871.69619      3675.0677    
      4300   319.08114     -41071.307      3228.6149      3675.4337    
      4400   305.75298     -41062.47       1202.4236      3675.7997    
      4500   291.25758     -41085.281     -10956.013      3676.1656    
      4600   310.08131     -41110.268     -5003.4583      3676.5316    
      4700   291.71607     -41083.933     -5705.9648      3676.8976    
      4800   294.34197     -41065.125      4763.2925      3677.2636    
      4900   316.23159     -41056.303      6862.0369      3677.6295    
      5000   309.65859     -41048.311     -9524.9047      3677.9955    
      5100   288.35268     -41045.918      68.404964      3678.3615    
      5200   311.8207      -41081.046     -1869.9002      3678.7274    
      5300   296.27039     -41079.268      4249.7036      3679.0934    
      5400   280.64074     -41074.575     -11305.52       3679.4594    
      5500   300.40554     -41086.109     -13614.333      3679.8253    
      5600   328.46163     -41085.178      5812.997       3680.1913    
      5700   323.58702     -41079.336     -6957.6426      3680.5573    
      5800   298.54807     -41089.136      9421.9928      3680.9233    
      5900   285.3292      -41088.898     -12209.04       3681.2892    
      6000   287.33242     -41082.283     -14965.572      3681.6552    
      6100   312.65492     -41100.949     -4929.8616      3682.0212    
      6200   302.67563     -41081.835     -5543.82        3682.3871    
      6300   311.50427     -41064.988     -6720.9744      3682.7531    
      6400   327.77119     -41077.474     -11090.366      3683.1191    
      6500   297.9429      -41076.942     -6200.3049      3683.485     
      6600   284.64341     -41082.131     -6940.0294      3683.851     
      6700   300.57463     -41097.76      -9381.4452      3684.217     
      6800   301.79071     -41080.983     -14262.472      3684.5829    
      6900   308.23995     -41069.165     -6001.711       3684.9489    
      7000   318.19984     -41047.809     -2795.1793      3685.3149    
      7100   344.83904     -41063.427     -13125.795      3685.6809    
      7200   293.09062     -41051.536     -11681.237      3686.0468    
      7300   295.58264     -41071.072     -11803.606      3686.4128    
      7400   297.60032     -41090.112     -5655.0223      3686.7788    
      7500   301.71836     -41092.698     -6055.0169      3687.1447    
      7600   300.10968     -41071.297     -3834.5688      3687.5107    
      7700   335.34341     -41083.94      -9099.8368      3687.8767    
      7800   308.51278     -41072.151     -3545.11        3688.2426    
      7900   299.28561     -41091.803     -4535.1782      3688.6086    
      8000   304.38405     -41092.539     -6709.181       3688.9746    
      8100   291.30126     -41071.861     -5014.7986      3689.3406    
      8200   315.50615     -41080.182     -3362.787       3689.7065    
      8300   303.47668     -41055.304     -10311.593      3690.0725    
      8400   292.72151     -41065.322     -1658.2633      3690.4385    
      8500   291.25292     -41086.025     -9908.1337      3690.8044    
      8600   311.60791     -41104.671     -13697.692      3691.1704    
      8700   317.09128     -41089.003     -11788.482      3691.5364    
      8800   318.0827      -41064.997      556.09891      3691.9023    
      8900   318.08251     -41089.606     -19714.173      3692.2683    
      9000   289.66563     -41090.644     -10453.609      3692.6343    
      9100   290.0791      -41085.21       5835.3884      3693.0003    
      9200   320.47853     -41099.04      -11923.767      3693.3662    
      9300   305.09918     -41068.094     -11144.175      3693.7322    
      9400   292.93369     -41048.11      -5707.1599      3694.0982    
      9500   307.91826     -41084.812     -563.61741      3694.4641    
      9600   293.84641     -41095.868     -1432.4888      3694.8301    
      9700   290.68979     -41101.693     -6256.7438      3695.1961    
      9800   285.97834     -41083.365     -3788.9361      3695.562     
      9900   301.1561      -41061.504     -634.97818      3695.928     
     10000   299.03157     -41058.419     -22461.231      3696.294     
Loop time of 513.463 on 8 procs for 10000 steps with 366 atoms

Performance: 0.841 ns/day, 28.526 hours/ns, 19.476 timesteps/s, 7.128 katom-step/s
98.7% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 320.6      | 418.67     | 457.47     | 205.9 | 81.54
Bond    | 0.027959   | 0.029501   | 0.031297   |   0.7 |  0.01
Neigh   | 2.8254     | 3.6543     | 3.9833     |  18.3 |  0.71
Comm    | 9.8292     | 48.641     | 146.6      | 603.5 |  9.47
Output  | 0.035202   | 0.091135   | 0.20602    |  20.0 |  0.02
Modify  | 41.5       | 41.975     | 42.955     |   6.6 |  8.17
Other   |            | 0.4043     |            |       |  0.08

Nlocal:          45.75 ave          53 max          40 min
Histogram: 2 0 0 1 2 0 2 0 0 1
Nghost:        3513.75 ave        3538 max        3493 min
Histogram: 1 0 0 4 0 0 2 0 0 1
Neighs:        31727.4 ave       36380 max       27715 min
Histogram: 2 0 0 1 2 0 1 1 0 1

Total # of neighbors = 253819
Ave neighs/atom = 693.49454
Ave special neighs/atom = 0
Neighbor list builds = 114
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos2

# Delete dir to make sure it is not reused
variable dir delete
# uzz Perturbation
variable dir equal 3
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
variable len0 equal ${lz0}
variable len0 equal 16.909
variable dlen equal lz-${len0}
variable dlen equal lz-16.909
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.1249 13.4224 16.909) with tilt (-8.2539 0.6162 -0.6491)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.004 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*16.909
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -8.2538999999999997925, deltaxy = 0.082539
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.61619999999999996998, deltaxz = -0.006162
print "yz = $(yz), deltayz = ${deltayz}"
yz = -0.6491000000000000103, deltayz = 0.006491
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no
fix deform_n all deform 100 z delta 0 ${delta} remap v units box flip no
fix deform_n all deform 100 z delta 0 -0.16909 remap v units box flip no
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 3 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg3.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg3.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg3 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg3 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg3 all custom/gz 100 dump/neg_deform3.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 137.1 | 139 | 140.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -41082.288     -14052.22       3659.697     
       100   301.80516     -41088.311     -185.43208      3659.331     
       200   284.16859     -41082.512      6011.7461      3658.9651    
       300   284.08193     -41100.099     -12551.681      3658.5991    
       400   279.89822     -41094.768     -3595.9933      3658.2331    
       500   308.35721     -41092.472      3699.4829      3657.8672    
       600   301.26362     -41072.403     -3069.9987      3657.5012    
       700   311.17613     -41079.194      2834.1531      3657.1352    
       800   302.833       -41086.95      -5547.2647      3656.7693    
       900   280.85382     -41098.919     -2237.1811      3656.4033    
      1000   293.98886     -41103.393     -9835.8201      3656.0373    
      1100   283.72233     -41071.523     -10237.153      3655.6713    
      1200   308.68819     -41082.169      20004.969      3655.3054    
      1300   317.04656     -41083.7       -597.03014      3654.9394    
      1400   293.95826     -41071.715     -4509.2972      3654.5734    
      1500   284.95332     -41093.968     -1305.7211      3654.2075    
      1600   282.12169     -41120.107     -2545.6747      3653.8415    
      1700   292.56583     -41115.11      -3574.9116      3653.4755    
      1800   299.82883     -41093.196     -5123.0571      3653.1096    
      1900   302.61544     -41085.853     -2089.6756      3652.7436    
      2000   282.42284     -41058.404     -5620.1506      3652.3776    
      2100   300.21172     -41063.932     -1620.8917      3652.0116    
      2200   319.78736     -41072.585      569.9965       3651.6457    
      2300   295.49816     -41065.886     -2248.6813      3651.2797    
      2400   284.13963     -41078.001     -6267.9961      3650.9137    
      2500   305.55385     -41103.617      5692.8562      3650.5478    
      2600   300.34001     -41093.738      1370.3339      3650.1818    
      2700   311.40151     -41081.213      5100.2963      3649.8158    
      2800   332.46933     -41082.251     -10000.283      3649.4499    
      2900   306.00494     -41070.85      -9414.6777      3649.0839    
      3000   291.93823     -41084.747     -4773.2627      3648.7179    
      3100   317.49198     -41112.78       2941.2192      3648.3519    
      3200   309.29063     -41110.509     -9798.975       3647.986     
      3300   295.54287     -41108.931     -8600.1191      3647.62      
      3400   272.30185     -41096.566     -9486.267       3647.254     
      3500   285.31111     -41087.344      676.08979      3646.8881    
      3600   312.54168     -41091.299     -3279.2614      3646.5221    
      3700   301.68996     -41081.555      1854.6508      3646.1561    
      3800   304.56022     -41100.797     -18591.622      3645.7902    
      3900   282.54672     -41101.888      571.08967      3645.4242    
      4000   285.11491     -41108.516     -4995.3158      3645.0582    
      4100   291.21726     -41074.596     -8481.3614      3644.6923    
      4200   305.90933     -41075.244     -15484.495      3644.3263    
      4300   299.24474     -41085.862     -6867.098       3643.9603    
      4400   274.34899     -41076.648      5545.0273      3643.5943    
      4500   305.34728     -41106.59      -499.29404      3643.2284    
      4600   325.89683     -41088.139     -5001.7104      3642.8624    
      4700   308.29118     -41060.953     -129.34748      3642.4964    
      4800   321.11633     -41092.862     -5426.6852      3642.1305    
      4900   302.18038     -41098.196      11672.449      3641.7645    
      5000   294.27353     -41091.276      976.10189      3641.3985    
      5100   291.4163      -41081.649     -2046.4927      3641.0326    
      5200   309.65511     -41081.194     -5952.5753      3640.6666    
      5300   321.37762     -41069.932     -10350.471      3640.3006    
      5400   293.80446     -41058.327      1785.7056      3639.9346    
      5500   314.99979     -41110.188      1132.9636      3639.5687    
      5600   285.07854     -41084.719     -6245.9889      3639.2027    
      5700   293.9658      -41084.349      3855.2187      3638.8367    
      5800   320.83408     -41101.01       2687.1524      3638.4708    
      5900   315.68324     -41085.184      2196.7189      3638.1048    
      6000   298.69647     -41074.785      3777.8551      3637.7388    
      6100   293.42494     -41104.797      6341.6539      3637.3729    
      6200   296.18294     -41107.171      7663.6239      3637.0069    
      6300   300.92076     -41092.022     -7602.9936      3636.6409    
      6400   297.5105      -41073.852      1630.3618      3636.2749    
      6500   315.90266     -41081.258     -4100.8696      3635.909     
      6600   307.61697     -41082.431      10971.501      3635.543     
      6700   289.36043     -41089.465     -3526.3785      3635.177     
      6800   296.38957     -41107.091     -234.21959      3634.8111    
      6900   302.21107     -41106.675     -4311.2186      3634.4451    
      7000   308.18314     -41076.761     -8566.0684      3634.0791    
      7100   311.76554     -41067.351      1474.3567      3633.7132    
      7200   299.49417     -41065.682     -11554.492      3633.3472    
      7300   307.02417     -41104.099      5926.7281      3632.9812    
      7400   290.7681      -41095.513      4774.7279      3632.6153    
      7500   290.32354     -41084.646      1042.7243      3632.2493    
      7600   293.16711     -41069.983      11385.053      3631.8833    
      7700   290.24286     -41055.968     -2232.2657      3631.5173    
      7800   297.80366     -41059.482      4036.1508      3631.1514    
      7900   301.82556     -41083.292     -6291.4041      3630.7854    
      8000   308.28523     -41112.681     -774.79962      3630.4194    
      8100   301.51172     -41112.574     -1757.3841      3630.0535    
      8200   294.43232     -41083.633     -83.400634      3629.6875    
      8300   303.85514     -41065.17      -8566.756       3629.3215    
      8400   313.70586     -41082.353      911.50368      3628.9556    
      8500   298.44842     -41084.822      1486.6071      3628.5896    
      8600   295.48539     -41087.426      4314.3582      3628.2236    
      8700   286.18752     -41068.479      437.49042      3627.8576    
      8800   316.49225     -41074.25      -5857.6483      3627.4917    
      8900   320.96175     -41074.347     -2100.8622      3627.1257    
      9000   289.43422     -41089.333     -12.207283      3626.7597    
      9100   293.41859     -41093.391     -4095.3806      3626.3938    
      9200   308.29477     -41089.064      15692.359      3626.0278    
      9300   321.621       -41092.17       9165.2655      3625.6618    
      9400   295.61254     -41066.922      3938.8137      3625.2959    
      9500   276.77862     -41076.044     -10171.822      3624.9299    
      9600   273.86947     -41086.481      5001.9367      3624.5639    
      9700   293.9459      -41093.084     -479.81547      3624.1979    
      9800   315.65994     -41081.417     -9068.9705      3623.832     
      9900   301.30305     -41054.516      7188.1916      3623.466     
     10000   291.03791     -41044.121     -932.75741      3623.1       
Loop time of 517.505 on 8 procs for 10000 steps with 366 atoms

Performance: 0.835 ns/day, 28.750 hours/ns, 19.323 timesteps/s, 7.072 katom-step/s
98.9% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 334.48     | 424.13     | 464.23     | 236.0 | 81.96
Bond    | 0.026861   | 0.029679   | 0.031467   |   0.8 |  0.01
Neigh   | 2.7902     | 3.574      | 3.9564     |  22.1 |  0.69
Comm    | 8.161      | 48.152     | 137.68     | 699.4 |  9.30
Output  | 0.032171   | 0.087231   | 0.19924    |  19.9 |  0.02
Modify  | 40.799     | 41.259     | 42.135     |   7.5 |  7.97
Other   |            | 0.2774     |            |       |  0.05

Nlocal:          45.75 ave          52 max          37 min
Histogram: 1 1 0 0 1 0 1 1 2 1
Nghost:           3596 ave        3639 max        3553 min
Histogram: 2 0 1 1 0 0 1 1 0 2
Neighs:        32381.6 ave       36561 max       26659 min
Histogram: 1 1 0 0 1 1 0 1 2 1

Total # of neighbors = 259053
Ave neighs/atom = 707.79508
Ave special neighs/atom = 0
Neighbor list builds = 112
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg3

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.1249 13.4224 16.909) with tilt (-8.2539 0.6162 -0.6491)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*16.909
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box
fix deform_p all deform 100 z delta 0 ${delta} remap v units box
fix deform_p all deform 100 z delta 0 0.16909 remap v units box
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 3 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos3.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos3.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos3 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos3 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos3 all custom/gz 100 dump/pos_deform3.lammpstrj.gz id type q x y z
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 137.1 | 139 | 140.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -41082.288     -14052.22       3659.697     
       100   301.80785     -41088.321     -195.85172      3660.063     
       200   284.06074     -41082.101      5689.492       3660.4289    
       300   282.9917      -41099.068     -11562.705      3660.7949    
       400   281.0693      -41095.438     -3574.6064      3661.1609    
       500   307.22145     -41091.332      1997.5434      3661.5269    
       600   305.24047     -41076.582     -1829.5952      3661.8928    
       700   313.32012     -41080.66      -2611.2362      3662.2588    
       800   302.02388     -41087.446     -7619.6882      3662.6248    
       900   282.33927     -41097.53      -1892.8379      3662.9907    
      1000   295.41219     -41103.214     -3981.5606      3663.3567    
      1100   296.5395      -41085.466     -10303.143      3663.7227    
      1200   301.59086     -41078.407      5282.3372      3664.0886    
      1300   307.07398     -41076.165     -3797.3848      3664.4546    
      1400   297.50745     -41055.732      8303.1434      3664.8206    
      1500   309.10513     -41059.02      -8608.7133      3665.1866    
      1600   322.21929     -41097.04      -1703.8257      3665.5525    
      1700   273.15107     -41070.817     -9043.471       3665.9185    
      1800   289.16931     -41081.864      6453.3041      3666.2845    
      1900   314.78062     -41093.91       2062.3167      3666.6504    
      2000   302.40981     -41069.979     -6838.0219      3667.0164    
      2100   300.92239     -41052.643      11681.856      3667.3824    
      2200   317.35119     -41062.942      148.42965      3667.7483    
      2300   290.48178     -41062.77       4555.0305      3668.1143    
      2400   303.84424     -41093.42       4735.652       3668.4803    
      2500   293.01553     -41075.71       1378.7369      3668.8463    
      2600   299.97104     -41066.577     -4757.0171      3669.2122    
      2700   323.52209     -41057.524     -13217.506      3669.5782    
      2800   320.66383     -41050.466      898.22208      3669.9442    
      2900   301.52571     -41062.781     -697.71309      3670.3101    
      3000   318.87249     -41095.086     -4710.3826      3670.6761    
      3100   307.15322     -41084.889      1688.4756      3671.0421    
      3200   287.07853     -41071.576     -9628.0357      3671.408     
      3300   295.4612      -41090.978     -7553.5947      3671.774     
      3400   286.82436     -41084.208     -2215.2931      3672.14      
      3500   304.61258     -41079.546      1601.1239      3672.5059    
      3600   328.50887     -41094.784      9960.1143      3672.8719    
      3700   298.00556     -41083.71       3051.3957      3673.2379    
      3800   289.32558     -41100.426     -9577.1926      3673.6039    
      3900   280.35147     -41091.247      3737.3475      3673.9698    
      4000   318.13363     -41114.94       65.188462      3674.3358    
      4100   289.69732     -41075.201      628.22933      3674.7018    
      4200   312.37049     -41090.275     -3081.5919      3675.0677    
      4300   306.12006     -41068.783     -9060.4342      3675.4337    
      4400   321.55932     -41067.725     -3143.0757      3675.7997    
      4500   325.89652     -41078.41      -1913.7298      3676.1656    
      4600   298.58386     -41085.67       3371.6622      3676.5316    
      4700   287.87041     -41090.201     -1797.4135      3676.8976    
      4800   300.91191     -41094.552     -17616.678      3677.2636    
      4900   303.29041     -41071.705     -10010.356      3677.6295    
      5000   317.1517      -41067.686     -250.31289      3677.9955    
      5100   313.48711     -41074.094     -6587.1003      3678.3615    
      5200   302.47913     -41080.783      6464.2765      3678.7274    
      5300   305.20232     -41086.558     -7554.6851      3679.0934    
      5400   288.48228     -41079.234     -2658.5474      3679.4594    
      5500   309.64088     -41106.212     -1248.8746      3679.8253    
      5600   295.90595     -41085.865      6939.8873      3680.1913    
      5700   307.10675     -41070.134     -2319.0384      3680.5573    
      5800   324.84874     -41078.952     -4145.0311      3680.9233    
      5900   313.03091     -41085.778     -12222.932      3681.2892    
      6000   291.00244     -41094.474     -8289.8448      3681.6552    
      6100   283.34909     -41086.555      5217.7174      3682.0212    
      6200   291.35863     -41079.685     -2338.8323      3682.3871    
      6300   290.5278      -41056.17      -8906.8671      3682.7531    
      6400   323.08251     -41078.471     -5601.5341      3683.1191    
      6500   311.69095     -41067.354     -11930.695      3683.485     
      6600   292.83575     -41091.566     -15069.676      3683.851     
      6700   298.55199     -41112.013     -7955.2574      3684.217     
      6800   300.671       -41100.442     -7444.8961      3684.5829    
      6900   289.23448     -41060.059     -20328.127      3684.9489    
      7000   306.4769      -41066.257     -287.54801      3685.3149    
      7100   297.77827     -41064.742      7136.3172      3685.6809    
      7200   282.76472     -41080.19      -1631.3189      3686.0468    
      7300   296.97512     -41112.181     -10940.797      3686.4128    
      7400   286.97983     -41089.338     -13916.913      3686.7788    
      7500   285.00301     -41068.32      -740.50611      3687.1447    
      7600   317.68425     -41096.012     -9493.4474      3687.5107    
      7700   285.04        -41066.111     -2300.507       3687.8767    
      7800   307.32988     -41090.573     -15124.741      3688.2426    
      7900   316.08799     -41096.481     -4709.6808      3688.6086    
      8000   292.65761     -41070.281     -60.300283      3688.9746    
      8100   303.27134     -41071.198      1794.4056      3689.3406    
      8200   307.52512     -41065.93       7271.5523      3689.7065    
      8300   291.44002     -41066.702     -8573.6024      3690.0725    
      8400   283.93561     -41082.793     -14831.334      3690.4385    
      8500   291.11206     -41087.426     -14555.729      3690.8044    
      8600   310.88141     -41090.257     -10575.605      3691.1704    
      8700   306.31939     -41065.264     -28100.936      3691.5364    
      8800   335.9921      -41074.708     -8419.8569      3691.9023    
      8900   312.78337     -41042.615      4624.0967      3692.2683    
      9000   302.32516     -41058.783     -4788.0407      3692.6343    
      9100   302.87179     -41087.84      -11463.657      3693.0003    
      9200   312.665       -41110.5       -10492.739      3693.3662    
      9300   283.22771     -41080.845      5323.0002      3693.7322    
      9400   296.73158     -41062.488     -4815.907       3694.0982    
      9500   299.23377     -41055.941      729.22326      3694.4641    
      9600   297.71005     -41058.977     -10178.16       3694.8301    
      9700   311.97924     -41090.762     -1286.9492      3695.1961    
      9800   307.7942      -41096.812     -11665.321      3695.562     
      9900   308.91304     -41095.603     -5890.3646      3695.928     
     10000   313.24166     -41091.243     -5226.3771      3696.294     
Loop time of 514.54 on 8 procs for 10000 steps with 366 atoms

Performance: 0.840 ns/day, 28.586 hours/ns, 19.435 timesteps/s, 7.113 katom-step/s
98.9% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 363.99     | 424.95     | 460.96     | 165.1 | 82.59
Bond    | 0.026899   | 0.029847   | 0.031108   |   0.7 |  0.01
Neigh   | 3.1358     | 3.6773     | 4.0243     |  15.8 |  0.71
Comm    | 7.8757     | 43.908     | 104.76     | 513.2 |  8.53
Output  | 0.032536   | 0.088052   | 0.20138    |  20.1 |  0.02
Modify  | 41.185     | 41.609     | 42.248     |   5.4 |  8.09
Other   |            | 0.2769     |            |       |  0.05

Nlocal:          45.75 ave          52 max          38 min
Histogram: 1 0 2 0 0 1 0 2 0 2
Nghost:        3559.62 ave        3590 max        3528 min
Histogram: 2 0 0 1 1 1 0 1 0 2
Neighs:        31718.9 ave       35930 max       26769 min
Histogram: 1 0 2 0 1 0 1 1 0 2

Total # of neighbors = 253751
Ave neighs/atom = 693.30874
Ave special neighs/atom = 0
Neighbor list builds = 114
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos3

# Delete dir to make sure it is not reused
variable dir delete
# uyz Perturbation
variable dir equal 4
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
variable len0 equal ${lx0}
variable len0 equal 16.1249
variable dlen equal 2*(yz-${yz0})
variable dlen equal 2*(yz--0.6491)
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.1249 13.4224 16.909) with tilt (-8.2539 0.6162 -0.6491)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*16.1249
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -8.2538999999999997925, deltaxy = 0.082539
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.61619999999999996998, deltaxz = -0.006162
print "yz = $(yz), deltayz = ${deltayz}"
yz = -0.6491000000000000103, deltayz = 0.006491
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no
fix deform_n all deform 100 yz delta ${delta} remap v units box flip no
fix deform_n all deform 100 yz delta -0.161249 remap v units box flip no
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 4 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg4.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg4.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg4 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg4 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg4 all custom/gz 100 dump/neg_deform4.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 137.1 | 139 | 140.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -41082.288     -14052.22       3659.697     
       100   301.81507     -41088.313     -184.93418      3659.697     
       200   284.08197     -41082.403      5829.5838      3659.697     
       300   283.52672     -41099.579     -12292.551      3659.697     
       400   280.74183     -41095.483     -3780.2559      3659.697     
       500   307.64117     -41091.767      2646.3478      3659.697     
       600   301.06732     -41072.116     -698.8166       3659.697     
       700   313.31564     -41080.275      2836.2151      3659.697     
       800   309.28812     -41091.389     -8489.0322      3659.697     
       900   281.48976     -41097.469     -3264.6239      3659.697     
      1000   289.1793      -41098.144     -12743.359      3659.697     
      1100   289.73459     -41079.24       3344.8131      3659.697     
      1200   306.09788     -41079.225      6729.6511      3659.697     
      1300   317.41662     -41090.006     -8386.8736      3659.697     
      1400   304.36642     -41084.296     -2278.5874      3659.697     
      1500   298.98454     -41089.774      4626.9527      3659.697     
      1600   295.25474     -41090.365      771.03093      3659.697     
      1700   279.23548     -41072.284     -7645.9647      3659.697     
      1800   308.06169     -41091.404      4533.5781      3659.697     
      1900   304.9393      -41076.627     -12383.236      3659.697     
      2000   292.62961     -41072.662     -6546.8637      3659.697     
      2100   281.55748     -41077.325     -11637.489      3659.697     
      2200   291.6725      -41106.154     -11403.871      3659.697     
      2300   290.46239     -41107.042     -8614.7199      3659.697     
      2400   318.44783     -41102.9       -12439.46       3659.697     
      2500   300.08045     -41070.522      1504.0989      3659.697     
      2600   307.56974     -41079.75       2267.4507      3659.697     
      2700   288.64328     -41086.56      -7367.6902      3659.697     
      2800   280.52359     -41095.264     -5950.0285      3659.697     
      2900   288.61981     -41099.016     -965.59455      3659.697     
      3000   281.99857     -41081.82       5028.9393      3659.697     
      3100   322.39452     -41112.889     -6513.074       3659.697     
      3200   295.14867     -41081.5       -4570.5883      3659.697     
      3300   295.77327     -41080.706      1281.2356      3659.697     
      3400   309.84446     -41088.815     -5314.4304      3659.697     
      3500   323.06905     -41105.463     -12458.421      3659.697     
      3600   299.69172     -41099.908      1682.4611      3659.697     
      3700   284.81454     -41098.783     -2482.8003      3659.697     
      3800   279.02719     -41085.565     -1424.9364      3659.697     
      3900   314.18097     -41085.828      5177.2963      3659.697     
      4000   300.6426      -41069.62      -3540.5768      3659.697     
      4100   297.95027     -41080.734      3735.9044      3659.697     
      4200   288.6772      -41089.089     -4703.0898      3659.697     
      4300   288.62662     -41093.058     -10302.978      3659.697     
      4400   299.86888     -41082.486      8510.9432      3659.697     
      4500   298.58346     -41067.705     -11337.638      3659.697     
      4600   311.84355     -41082.333     -11140.363      3659.697     
      4700   294.12744     -41082.887     -934.52446      3659.697     
      4800   289.65108     -41105.103      3832.4937      3659.697     
      4900   292.90068     -41109.45      -5711.2786      3659.697     
      5000   305.39384     -41088.967      12026.596      3659.697     
      5100   285.04514     -41055.371      670.26531      3659.697     
      5200   319.24102     -41088.99      -2074.1776      3659.697     
      5300   310.68341     -41097.73       10497.015      3659.697     
      5400   287.88976     -41095.061     -6857.8629      3659.697     
      5500   290.21133     -41099.521     -4976.8356      3659.697     
      5600   303.92734     -41076.839     -8965.1755      3659.697     
      5700   317.0037      -41075.822     -5770.1288      3659.697     
      5800   294.72759     -41070.48       3889.8017      3659.697     
      5900   279.54982     -41071.563      8998.923       3659.697     
      6000   294.74722     -41092.827     -10345.548      3659.697     
      6100   298.80951     -41095.233      7041.9971      3659.697     
      6200   309.46547     -41086.835      7846.2975      3659.697     
      6300   320.46768     -41088.429     -1797.7403      3659.697     
      6400   293.4105      -41075.93       1430.8335      3659.697     
      6500   285.70072     -41095.052     -8961.8683      3659.697     
      6600   286.23373     -41099.277      1214.2696      3659.697     
      6700   292.52123     -41093.718     -17935.17       3659.697     
      6800   313.32193     -41107.409     -687.71545      3659.697     
      6900   290.42074     -41086.977     -8311.7292      3659.697     
      7000   293.45712     -41081.313      5533.7023      3659.697     
      7100   310.46869     -41072.751      12544.711      3659.697     
      7200   305.39027     -41059.451     -5956.5767      3659.697     
      7300   293.13511     -41079.98      -6611.7525      3659.697     
      7400   287.20293     -41099.755      2163.4564      3659.697     
      7500   304.0052      -41107.269     -8071.8398      3659.697     
      7600   322.4715      -41104.586      5784.1064      3659.697     
      7700   303.02908     -41071.937      9025.8009      3659.697     
      7800   284.83781     -41062.091      7419.4852      3659.697     
      7900   297.39166     -41110.909     -4015.2428      3659.697     
      8000   304.05085     -41120.979      7501.8636      3659.697     
      8100   294.9268      -41098.414     -8095.7791      3659.697     
      8200   287.77194     -41068.376     -11222.361      3659.697     
      8300   308.2341      -41073.137      2538.0639      3659.697     
      8400   317.7929      -41089.173      3375.2195      3659.697     
      8500   288.76864     -41087.297     -6025.3245      3659.697     
      8600   292.55006     -41115.249     -8167.8506      3659.697     
      8700   293.02301     -41112.267     -12863.105      3659.697     
      8800   281.3363      -41085.331     -2107.8868      3659.697     
      8900   295.02004     -41083.011      5408.2383      3659.697     
      9000   294.77052     -41072.19      -9748.4323      3659.697     
      9100   328.69989     -41106.953      3828.3954      3659.697     
      9200   296.19877     -41092.39       4010.2227      3659.697     
      9300   284.70149     -41097.968     -568.95137      3659.697     
      9400   293.37965     -41099.224     -2568.8603      3659.697     
      9500   308.46197     -41080.356      3319.8888      3659.697     
      9600   315.56645     -41077.506      4561.3021      3659.697     
      9700   297.06463     -41065.967     -3649.6205      3659.697     
      9800   286.25961     -41072.83      -6127.3423      3659.697     
      9900   292.9307      -41092.945     -8142.7239      3659.697     
     10000   278.43062     -41103.891      630.61937      3659.697     
Loop time of 551.385 on 8 procs for 10000 steps with 366 atoms

Performance: 0.783 ns/day, 30.633 hours/ns, 18.136 timesteps/s, 6.638 katom-step/s
98.8% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 464.75     | 478.5      | 488.68     |  40.8 | 86.78
Bond    | 0.030644   | 0.033035   | 0.034798   |   0.8 |  0.01
Neigh   | 3.5971     | 3.7832     | 3.9311     |   5.8 |  0.69
Comm    | 15.797     | 26.033     | 39.963     | 175.7 |  4.72
Output  | 0.040529   | 0.097833   | 0.2139     |  19.7 |  0.02
Modify  | 42.427     | 42.636     | 42.895     |   2.3 |  7.73
Other   |            | 0.299      |            |       |  0.05

Nlocal:          45.75 ave          52 max          37 min
Histogram: 1 1 0 0 1 0 1 1 1 2
Nghost:        3568.88 ave        3604 max        3544 min
Histogram: 1 1 2 0 1 0 1 1 0 1
Neighs:        32064.4 ave       36332 max       26379 min
Histogram: 1 1 0 1 0 1 0 1 1 2

Total # of neighbors = 256515
Ave neighs/atom = 700.86066
Ave special neighs/atom = 0
Neighbor list builds = 111
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg4

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.1249 13.4224 16.909) with tilt (-8.2539 0.6162 -0.6491)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.004 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*16.1249
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box
fix deform_p all deform 100 yz delta ${delta} remap v units box
fix deform_p all deform 100 yz delta 0.161249 remap v units box
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 4 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos4.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos4.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos4 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos4 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos4 all custom/gz 100 dump/pos_deform4.lammpstrj.gz id type q x y z
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 137.1 | 139 | 140.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -41082.288     -14052.22       3659.697     
       100   301.79853     -41088.319     -196.11153      3659.697     
       200   284.0771      -41082.339      5876.6345      3659.697     
       300   283.86713     -41099.727     -11853.11       3659.697     
       400   280.4511      -41095.211     -3898.736       3659.697     
       500   307.96818     -41092.607      3027.6187      3659.697     
       600   300.55314     -41071.834     -1496.2802      3659.697     
       700   312.84675     -41080.657      2317.773       3659.697     
       800   302.58935     -41087.327      4259.7814      3659.697     
       900   276.98619     -41094.712     -7301.8736      3659.697     
      1000   297.87045     -41107.462     -4993.7385      3659.697     
      1100   280.64424     -41070.273     -4726.9756      3659.697     
      1200   313.95093     -41088.954      6953.9734      3659.697     
      1300   313.27424     -41086.222     -7631.1369      3659.697     
      1400   298.54978     -41093.286      7875.4841      3659.697     
      1500   270.95891     -41092.239     -16604.827      3659.697     
      1600   304.82034     -41117.392      89.962561      3659.697     
      1700   293.24321     -41084.263     -1309.6926      3659.697     
      1800   318.73051     -41091.752      8174.5612      3659.697     
      1900   290.62578     -41063.677      186.03663      3659.697     
      2000   315.45418     -41091.331     -1839.4579      3659.697     
      2100   292.31408     -41082.921     -3230.4163      3659.697     
      2200   278.97242     -41092.65      -303.66588      3659.697     
      2300   291.2471      -41119.365     -2948.4809      3659.697     
      2400   276.52972     -41097.261     -9849.567       3659.697     
      2500   300.02053     -41089.391     -952.5346       3659.697     
      2600   306.66922     -41076.855     -4188.1745      3659.697     
      2700   311.06896     -41088.044     -1180.8996      3659.697     
      2800   286.68958     -41085.081     -7899.2657      3659.697     
      2900   291.90269     -41106.718     -1792.4305      3659.697     
      3000   300.46534     -41111.2       -11092.353      3659.697     
      3100   325.92921     -41090.171     -10930.467      3659.697     
      3200   312.61672     -41070.298      603.69741      3659.697     
      3300   308.84984     -41084.33      -6758.3069      3659.697     
      3400   295.08304     -41088.846      444.8751       3659.697     
      3500   288.95338     -41100.168     -1449.9696      3659.697     
      3600   291.59657     -41104.148     -5773.5183      3659.697     
      3700   306.23426     -41081.69      -5747.2487      3659.697     
      3800   317.08264     -41080.969      5885.6055      3659.697     
      3900   314.47854     -41079.109     -10832.214      3659.697     
      4000   298.04098     -41084.053     -6406.3284      3659.697     
      4100   293.84251     -41110.248      2671.596       3659.697     
      4200   292.22314     -41104.535     -5489.1681      3659.697     
      4300   281.30614     -41073.699      4906.2864      3659.697     
      4400   302.59953     -41076.438     -2198.3278      3659.697     
      4500   316.34292     -41094.066     -7224.5796      3659.697     
      4600   309.25374     -41099.867      848.28829      3659.697     
      4700   305.55216     -41105.157      9857.9829      3659.697     
      4800   289.41702     -41091.354     -4654.213       3659.697     
      4900   281.55142     -41079.019     -5704.1659      3659.697     
      5000   306.49191     -41084.043     -4019.7204      3659.697     
      5100   312.44131     -41076.835     -13617.254      3659.697     
      5200   303.82809     -41075.525     -3281.6146      3659.697     
      5300   285.76267     -41083.883      6575.7798      3659.697     
      5400   282.89237     -41095.443     -11378.346      3659.697     
      5500   275.28048     -41067.963     -7577.3469      3659.697     
      5600   294.12457     -41076.528      935.37896      3659.697     
      5700   304.88227     -41083.709     -3830.3134      3659.697     
      5800   318.85636     -41087.784     -12807.994      3659.697     
      5900   321.55326     -41078.249      2669.4346      3659.697     
      6000   300.59804     -41064.04      -7077.8131      3659.697     
      6100   285.34456     -41079.14       1521.6825      3659.697     
      6200   291.28099     -41098.1        4340.2042      3659.697     
      6300   293.87673     -41090.501     -7124.3133      3659.697     
      6400   313.09644     -41079.99       4717.5174      3659.697     
      6500   303.42659     -41060.355      903.74343      3659.697     
      6600   322.19173     -41086.117      4342.0492      3659.697     
      6700   276.00676     -41058.677      829.80653      3659.697     
      6800   285.65976     -41077.869      10574.523      3659.697     
      6900   295.98172     -41082.017     -12314.976      3659.697     
      7000   327.90229     -41076.458     -14103.355      3659.697     
      7100   294.88312     -41039.559      9407.9728      3659.697     
      7200   308.64918     -41079.656     -3881.9908      3659.697     
      7300   289.09846     -41080.619     -4881.2527      3659.697     
      7400   292.28578     -41088.109     -10092.786      3659.697     
      7500   289.22022     -41080.21       7086.1544      3659.697     
      7600   305.07303     -41078.822     -1579.1482      3659.697     
      7700   317.9334      -41065.069     -6769.1317      3659.697     
      7800   304.14307     -41052.999     -8410.2732      3659.697     
      7900   283.06788     -41074.039      1346.9601      3659.697     
      8000   284.67303     -41081.538     -1033.5136      3659.697     
      8100   310.97808     -41095.14      -11141.85       3659.697     
      8200   295.89712     -41065.721     -1303.3282      3659.697     
      8300   322.15367     -41074.743      2379.5128      3659.697     
      8400   304.7512      -41061.1       -4416.1458      3659.697     
      8500   293.33104     -41081.339      1993.5529      3659.697     
      8600   284.97423     -41085.161     -5101.2773      3659.697     
      8700   306.82286     -41104.139      6615.1716      3659.697     
      8800   315.97713     -41090.522     -10513.891      3659.697     
      8900   322.09932     -41075.452     -4322.3913      3659.697     
      9000   300.79562     -41073.91       897.76543      3659.697     
      9100   299.72462     -41084.454     -465.66366      3659.697     
      9200   290.09205     -41074.446     -12137.319      3659.697     
      9300   320.59758     -41097.334      2162.0379      3659.697     
      9400   302.8512      -41063.922      2480.0597      3659.697     
      9500   329.72472     -41071.053     -11585.318      3659.697     
      9600   318.08635     -41072.746      6696.1816      3659.697     
      9700   287.7001      -41062.954      50.184218      3659.697     
      9800   295.7902      -41077.395     -2307.8896      3659.697     
      9900   313.26173     -41094.972     -3759.7523      3659.697     
     10000   286.55863     -41073.837      9046.5228      3659.697     
Loop time of 554.902 on 8 procs for 10000 steps with 366 atoms

Performance: 0.779 ns/day, 30.828 hours/ns, 18.021 timesteps/s, 6.596 katom-step/s
98.9% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 487.97     | 494.89     | 499.96     |  21.3 | 89.18
Bond    | 0.030515   | 0.033795   | 0.036206   |   1.0 |  0.01
Neigh   | 3.8168     | 3.8838     | 3.935      |   1.6 |  0.70
Comm    | 8.4985     | 13.559     | 20.548     | 129.7 |  2.44
Output  | 0.041971   | 0.099799   | 0.218      |  19.7 |  0.02
Modify  | 41.881     | 41.999     | 42.077     |   1.0 |  7.57
Other   |            | 0.4407     |            |       |  0.08

Nlocal:          45.75 ave          52 max          40 min
Histogram: 2 0 0 1 1 1 1 1 0 1
Nghost:        3542.38 ave        3566 max        3519 min
Histogram: 1 1 1 0 1 1 1 0 1 1
Neighs:        32073.9 ave       36417 max       28122 min
Histogram: 2 0 0 1 1 1 1 1 0 1

Total # of neighbors = 256591
Ave neighs/atom = 701.06831
Ave special neighs/atom = 0
Neighbor list builds = 113
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos4

# Delete dir to make sure it is not reused
variable dir delete
# uxz Perturbation
variable dir equal 5
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
variable len0 equal ${ly0}
variable len0 equal 13.4224
variable dlen equal 2*(xz-${xz0})
variable dlen equal 2*(xz-0.6162)
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.1249 13.4224 16.909) with tilt (-8.2539 0.6162 -0.6491)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.001 seconds
  read_restart CPU = 0.004 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*13.4224
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -8.2538999999999997925, deltaxy = 0.082539
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.61619999999999996998, deltaxz = -0.006162
print "yz = $(yz), deltayz = ${deltayz}"
yz = -0.6491000000000000103, deltayz = 0.006491
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no
fix deform_n all deform 100 xz delta ${delta} remap v units box flip no
fix deform_n all deform 100 xz delta -0.134224 remap v units box flip no
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 5 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg5.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg5.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg5 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg5 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg5 all custom/gz 100 dump/neg_deform5.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 137.1 | 139 | 140.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -41082.288     -14052.22       3659.697     
       100   301.81828     -41088.317     -193.88997      3659.697     
       200   283.99032     -41082.254      5946.2022      3659.697     
       300   283.80138     -41099.859     -12427.228      3659.697     
       400   280.84286     -41095.828     -4063.1541      3659.697     
       500   306.72365     -41091.187      3570.475       3659.697     
       600   300.80813     -41071.863      517.25999      3659.697     
       700   315.0362      -41081.925     -1121.4656      3659.697     
       800   311.70796     -41095.357     -7765.9778      3659.697     
       900   278.3834      -41093.964     -9638.6651      3659.697     
      1000   299.61612     -41106.935     -11668.06       3659.697     
      1100   295.58897     -41081.713      1305.2214      3659.697     
      1200   310.46465     -41082.324      4351.964       3659.697     
      1300   306.91781     -41077.566     -7920.2088      3659.697     
      1400   288.16924     -41085.236     -1955.1716      3659.697     
      1500   285.11303     -41107.974     -11240.762      3659.697     
      1600   297.05046     -41112.078     -9513.8567      3659.697     
      1700   298.23674     -41095.576     -476.81731      3659.697     
      1800   314.12904     -41099.58      -15743.219      3659.697     
      1900   283.45186     -41063.429      392.21295      3659.697     
      2000   301.08175     -41081.869     -10236.152      3659.697     
      2100   332.38016     -41111.116      19281.43       3659.697     
      2200   328.26284     -41093.467     -5043.8949      3659.697     
      2300   314.93488     -41086.183      1643.9775      3659.697     
      2400   295.29439     -41094.344     -7253.7318      3659.697     
      2500   285.67163     -41092.243      6825.8923      3659.697     
      2600   304.41428     -41101.672     -6056.3454      3659.697     
      2700   315.27542     -41081.794     -9166.4364      3659.697     
      2800   318.7303      -41064.307      3766.9035      3659.697     
      2900   303.03318     -41056.1       -10748.824      3659.697     
      3000   323.33602     -41096.357     -6492.4882      3659.697     
      3100   286.89861     -41068.241      11917.864      3659.697     
      3200   307.17582     -41087.772      2866.3292      3659.697     
      3300   279.21855     -41071.225      3643.7894      3659.697     
      3400   280.56286     -41109.013     -3922.4726      3659.697     
      3500   269.51198     -41100.529     -6837.8044      3659.697     
      3600   278.72183     -41084.603     -8315.4372      3659.697     
      3700   296.83432     -41089.41       6647.6817      3659.697     
      3800   295.4397      -41072.411      73.466924      3659.697     
      3900   316.29804     -41080.769     -13601.121      3659.697     
      4000   297.38968     -41074.403      2032.1347      3659.697     
      4100   295.51365     -41107.519      11138.72       3659.697     
      4200   284.55689     -41103.007     -1913.8505      3659.697     
      4300   289.26782     -41094.142     -1272.1131      3659.697     
      4400   285.17707     -41075.736      2480.3823      3659.697     
      4500   297.86891     -41081.355      4313.0948      3659.697     
      4600   298.40947     -41081.284      2824.9982      3659.697     
      4700   294.92239     -41075.926     -1675.0784      3659.697     
      4800   308.69412     -41070.831      10358.099      3659.697     
      4900   315.11234     -41068.625     -166.97479      3659.697     
      5000   318.27298     -41093.424     -4472.6843      3659.697     
      5100   305.77477     -41107.981      5128.0938      3659.697     
      5200   299.72874     -41106.75      -55.438155      3659.697     
      5300   283.71184     -41084.012      10380.349      3659.697     
      5400   296.7833      -41065.806      1747.4534      3659.697     
      5500   305.89008     -41058.016     -7989.8129      3659.697     
      5600   300.35088     -41067.491     -10562.876      3659.697     
      5700   290.87759     -41075.604     -4498.2121      3659.697     
      5800   294.11053     -41095.157      17516.028      3659.697     
      5900   295.70574     -41099.48       1226.999       3659.697     
      6000   279.73368     -41074.969     -4609.2805      3659.697     
      6100   300.15239     -41089.638      10320.957      3659.697     
      6200   301.37026     -41080.591      4921.3726      3659.697     
      6300   317.85904     -41083.268     -9529.4225      3659.697     
      6400   286.19256     -41061.352     -2005.707       3659.697     
      6500   278.52001     -41091.509      15158.461      3659.697     
      6600   278.93295     -41092.167      1600.6023      3659.697     
      6700   298.67734     -41090.869     -2116.6516      3659.697     
      6800   295.71927     -41074.751     -3175.4596      3659.697     
      6900   288.14471     -41061.64      -16487.434      3659.697     
      7000   297.77853     -41076.066     -9974.5474      3659.697     
      7100   287.23265     -41094.823     -7636.7216      3659.697     
      7200   280.28027     -41108.37      -7504.2608      3659.697     
      7300   274.85825     -41088.836      4619.904       3659.697     
      7400   304.39155     -41098.715      1335.1525      3659.697     
      7500   316.67651     -41101.706      2354.111       3659.697     
      7600   303.79685     -41089.765     -12664.08       3659.697     
      7700   293.76991     -41071.024     -8006.9708      3659.697     
      7800   326.60526     -41077.42       1748.3757      3659.697     
      7900   326.31286     -41077.421     -18469.895      3659.697     
      8000   287.95473     -41070.994      9478.9085      3659.697     
      8100   301.99383     -41094.052     -1372.76        3659.697     
      8200   305.64516     -41094.556     -5168.8561      3659.697     
      8300   297.04354     -41078.701     -6268.4017      3659.697     
      8400   338.1811      -41097.395     -9994.3719      3659.697     
      8500   333.8847      -41080.425      4763.3186      3659.697     
      8600   292.21749     -41065.782     -1561.1268      3659.697     
      8700   305.5114      -41095.582     -3971.4915      3659.697     
      8800   287.91736     -41080.68      -1870.4607      3659.697     
      8900   309.37236     -41097.647     -3982.448       3659.697     
      9000   293.48158     -41077.362     -2653.7987      3659.697     
      9100   315.82741     -41078.291     -14006.366      3659.697     
      9200   327.67614     -41061.272     -16757.368      3659.697     
      9300   310.31623     -41066.517      2051.6577      3659.697     
      9400   299.28188     -41079.977      7807.7657      3659.697     
      9500   298.83295     -41084.884     -3431.5385      3659.697     
      9600   304.36613     -41083.117     -2626.7469      3659.697     
      9700   292.5401      -41069.417     -7544.9511      3659.697     
      9800   306.69301     -41098.87      -17224.583      3659.697     
      9900   281.37659     -41088.037     -848.29651      3659.697     
     10000   295.98424     -41089.092     -54.00071       3659.697     
Loop time of 560.883 on 8 procs for 10000 steps with 366 atoms

Performance: 0.770 ns/day, 31.160 hours/ns, 17.829 timesteps/s, 6.525 katom-step/s
98.8% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 485.32     | 495.21     | 506.59     |  30.6 | 88.29
Bond    | 0.03058    | 0.033249   | 0.035834   |   0.9 |  0.01
Neigh   | 3.7709     | 3.8794     | 3.9744     |   2.6 |  0.69
Comm    | 6.8696     | 18.315     | 28.131     | 159.4 |  3.27
Output  | 0.039724   | 0.097461   | 0.21474    |  19.9 |  0.02
Modify  | 42.889     | 43.042     | 43.195     |   1.6 |  7.67
Other   |            | 0.306      |            |       |  0.05

Nlocal:          45.75 ave          52 max          35 min
Histogram: 1 0 0 0 2 1 0 1 1 2
Nghost:        3562.12 ave        3591 max        3533 min
Histogram: 1 0 2 1 0 0 1 2 0 1
Neighs:        32026.6 ave       36355 max       24962 min
Histogram: 1 0 0 1 1 1 1 0 1 2

Total # of neighbors = 256213
Ave neighs/atom = 700.03552
Ave special neighs/atom = 0
Neighbor list builds = 112
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg5

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.1249 13.4224 16.909) with tilt (-8.2539 0.6162 -0.6491)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.004 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*13.4224
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box
fix deform_p all deform 100 xz delta ${delta} remap v units box
fix deform_p all deform 100 xz delta 0.134224 remap v units box
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 5 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos5.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos5.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos5 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos5 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos5 all custom/gz 100 dump/pos_deform5.lammpstrj.gz id type q x y z
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 137.1 | 139 | 140.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -41082.288     -14052.22       3659.697     
       100   301.79467     -41088.315     -187.41088      3659.697     
       200   284.17942     -41082.474      5735.7348      3659.697     
       300   283.56072     -41099.358     -11858.993      3659.697     
       400   280.20207     -41095.01      -3491.0959      3659.697     
       500   308.96281     -41093.423      2483.1101      3659.697     
       600   300.23705     -41071.205      1998.6621      3659.697     
       700   314.71172     -41083.483      6585.7526      3659.697     
       800   296.68535     -41083.732      149.42075      3659.697     
       900   281.29602     -41098.838     -8443.6742      3659.697     
      1000   298.44315     -41108.955     -6115.9539      3659.697     
      1100   288.9363      -41082.86       1575.7399      3659.697     
      1200   309.11429     -41084.985      7961.1405      3659.697     
      1300   331.66473     -41098.538     -12282.938      3659.697     
      1400   284.70858     -41054.945      4942.0661      3659.697     
      1500   296.92664     -41096.429     -3544.4593      3659.697     
      1600   297.77709     -41107.661      9513.6309      3659.697     
      1700   289.25015     -41091.935      10969.28       3659.697     
      1800   299.82079     -41071.492     -343.14676      3659.697     
      1900   308.07291     -41064.796     -1869.2037      3659.697     
      2000   302.87719     -41070.788     -22945.728      3659.697     
      2100   307.87143     -41092.371     -7183.9294      3659.697     
      2200   298.07763     -41092.178     -11502.95       3659.697     
      2300   296.32928     -41089.181     -8651.2024      3659.697     
      2400   281.46599     -41075.069     -3957.0249      3659.697     
      2500   295.57558     -41083.571      873.19557      3659.697     
      2600   298.74261     -41074.174     -5294.7685      3659.697     
      2700   328.21985     -41071.315      5488.6963      3659.697     
      2800   307.38684     -41051.898     -2313.9421      3659.697     
      2900   322.64301     -41090.414     -13052.138      3659.697     
      3000   310.89647     -41095.052     -4494.4418      3659.697     
      3100   268.62144     -41058.634      16058.318      3659.697     
      3200   292.98056     -41084.724     -2897.0677      3659.697     
      3300   312.66361     -41080.404     -3553.157       3659.697     
      3400   311.98841     -41062.204     -1577.8232      3659.697     
      3500   310.3365      -41076.005      12200.565      3659.697     
      3600   287.43632     -41085.515      5016.4784      3659.697     
      3700   284.11806     -41082.942      13189.56       3659.697     
      3800   309.13933     -41094.273     -4598.3977      3659.697     
      3900   301.02894     -41068.206     -5513.6437      3659.697     
      4000   313.78102     -41081.639      3142.6552      3659.697     
      4100   291.99004     -41095.615     -8109.9851      3659.697     
      4200   293.33286     -41106.624     -8959.0926      3659.697     
      4300   299.30026     -41093.65      -3356.4201      3659.697     
      4400   286.34507     -41060.454     -1656.631       3659.697     
      4500   302.36602     -41074.525      491.27699      3659.697     
      4600   308.11316     -41083.924      440.83081      3659.697     
      4700   297.15515     -41074.838     -11897.42       3659.697     
      4800   292.91501     -41076.119     -402.53216      3659.697     
      4900   302.34055     -41105.599     -4762.9608      3659.697     
      5000   288.70585     -41098.551      2023.3633      3659.697     
      5100   290.49854     -41084.954     -12394.152      3659.697     
      5200   299.24809     -41066.644     -3547.1043      3659.697     
      5300   283.84424     -41050.399     -8410.8807      3659.697     
      5400   307.59151     -41093.436     -5438.6748      3659.697     
      5500   284.04411     -41074.806      7945           3659.697     
      5600   318.07418     -41109.19       594.47639      3659.697     
      5700   303.66368     -41091.2       -9781.7187      3659.697     
      5800   296.56488     -41085.788     -7765.4814      3659.697     
      5900   282.74552     -41084.518     -2782.4994      3659.697     
      6000   279.85356     -41096.224     -7153.9891      3659.697     
      6100   299.20696     -41114.494      5626.5215      3659.697     
      6200   271.46404     -41055.266     -5887.7797      3659.697     
      6300   332.64902     -41098.636     -7090.7528      3659.697     
      6400   314.14494     -41083.885     -1808.4404      3659.697     
      6500   290.52722     -41081.621     -5830.0246      3659.697     
      6600   294.57568     -41096.985     -7295.6237      3659.697     
      6700   290.30739     -41089.039     -6149.416       3659.697     
      6800   306.4675      -41093.799     -180.72828      3659.697     
      6900   300.34826     -41082.563     -957.54569      3659.697     
      7000   302.97768     -41083.61      -5695.2813      3659.697     
      7100   307.47652     -41090.002     -3119.005       3659.697     
      7200   283.8851      -41079.616      6297.8336      3659.697     
      7300   288.96368     -41106.347      5531.5101      3659.697     
      7400   274.72977     -41096.725      1025.899       3659.697     
      7500   297.34087     -41080.908     -4889.9531      3659.697     
      7600   304.13297     -41077.122     -3156.3751      3659.697     
      7700   289.91916     -41060.132     -8288.0143      3659.697     
      7800   303.45757     -41086.161     -14640.768      3659.697     
      7900   294.40244     -41102.586     -6553.362       3659.697     
      8000   289.70906     -41112.38      -11063.437      3659.697     
      8100   300.83073     -41104.059     -7354.188       3659.697     
      8200   300.52365     -41067.803     -15161.291      3659.697     
      8300   317.10232     -41090.932     -9476.3382      3659.697     
      8400   303.40463     -41095.276     -7779.0842      3659.697     
      8500   290.77695     -41099.444     -8836.5259      3659.697     
      8600   283.24767     -41099.102     -4054.544       3659.697     
      8700   312.62085     -41101.584     -857.68862      3659.697     
      8800   311.64631     -41072.236     -1288.0673      3659.697     
      8900   318.04761     -41077.272     -6269.6199      3659.697     
      9000   291.64798     -41073.879      2164.189       3659.697     
      9100   295.2544      -41097.333     -6522.8172      3659.697     
      9200   274.8815      -41069.624     -1508.1187      3659.697     
      9300   304.27662     -41088.348      8296.8418      3659.697     
      9400   312.57075     -41097.532      5908.0133      3659.697     
      9500   302.44024     -41088.282     -1256.637       3659.697     
      9600   305.5132      -41098.798     -380.60592      3659.697     
      9700   277.16372     -41102.605      4019.4025      3659.697     
      9800   283.5477      -41120.906      2501.6776      3659.697     
      9900   280.77341     -41098.944      6222.1249      3659.697     
     10000   277.82129     -41077.353      3729.3879      3659.697     
Loop time of 509.273 on 8 procs for 10000 steps with 366 atoms

Performance: 0.848 ns/day, 28.293 hours/ns, 19.636 timesteps/s, 7.187 katom-step/s
98.9% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 385.85     | 434.39     | 458.94     | 104.3 | 85.30
Bond    | 0.026699   | 0.029121   | 0.030745   |   0.7 |  0.01
Neigh   | 3.3211     | 3.7201     | 3.8654     |   9.1 |  0.73
Comm    | 4.8385     | 29.323     | 77.79      | 401.1 |  5.76
Output  | 0.032516   | 0.088375   | 0.20265    |  20.3 |  0.02
Modify  | 41.112     | 41.322     | 41.798     |   3.3 |  8.11
Other   |            | 0.3975     |            |       |  0.08

Nlocal:          45.75 ave          53 max          40 min
Histogram: 2 0 1 1 1 0 1 1 0 1
Nghost:        3566.12 ave        3575 max        3553 min
Histogram: 1 0 0 1 0 2 2 0 0 2
Neighs:        32051.2 ave       37028 max       28194 min
Histogram: 2 0 2 0 1 0 1 1 0 1

Total # of neighbors = 256410
Ave neighs/atom = 700.57377
Ave special neighs/atom = 0
Neighbor list builds = 112
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos5

# Delete dir to make sure it is not reused
variable dir delete
# uxy Perturbation
variable dir equal 6
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"
variable len0 equal ${lz0}
variable len0 equal 16.909
variable dlen equal 2*(xy-${xy0})
variable dlen equal 2*(xy--8.2539)

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.1249 13.4224 16.909) with tilt (-8.2539 0.6162 -0.6491)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*16.909
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -8.2538999999999997925, deltaxy = 0.082539
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = 0.61619999999999996998, deltaxz = -0.006162
print "yz = $(yz), deltayz = ${deltayz}"
yz = -0.6491000000000000103, deltayz = 0.006491
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no
fix deform_n all deform 100 xy delta ${delta} remap v units box flip no
fix deform_n all deform 100 xy delta -0.16909 remap v units box flip no

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 6 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg6.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg6.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg6 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg6 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg6 all custom/gz 100 dump/neg_deform6.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 137.1 | 139 | 140.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -41082.288     -14052.22       3659.697     
       100   301.80644     -41088.316     -190.63105      3659.697     
       200   284.19425     -41082.538      5937.0109      3659.697     
       300   283.20789     -41099.257     -13224.424      3659.697     
       400   280.01528     -41094.116     -1983.7058      3659.697     
       500   305.30687     -41089.014      2044.5612      3659.697     
       600   301.14722     -41071.258      1646.7065      3659.697     
       700   309.43439     -41076.528      7955.2788      3659.697     
       800   298.51003     -41080.545     -776.94473      3659.697     
       900   266.28526     -41081.696     -6629.7669      3659.697     
      1000   293.31435     -41102.571     -4071.9464      3659.697     
      1100   283.71733     -41073.793     -926.75554      3659.697     
      1200   298.57677     -41072.968     -537.91496      3659.697     
      1300   324.18912     -41093.126      1332.04        3659.697     
      1400   294.94905     -41077.949      11.949362      3659.697     
      1500   267.27917     -41090.083      205.50682      3659.697     
      1600   300.70946     -41117.106      765.25975      3659.697     
      1700   308.22753     -41103.663      4346.3238      3659.697     
      1800   298.38247     -41075.415     -4170.7173      3659.697     
      1900   282.33007     -41049.299      2691.0306      3659.697     
      2000   309.03818     -41082.494     -10086.404      3659.697     
      2100   278.27728     -41095.727      3017.2003      3659.697     
      2200   275.94968     -41097.271      1112.9579      3659.697     
      2300   288.16289     -41090.06      -12702.734      3659.697     
      2400   297.1622      -41077.891     -8814.3939      3659.697     
      2500   300.53765     -41074.839     -1720.22        3659.697     
      2600   316.40019     -41089.499     -9335.8123      3659.697     
      2700   296.53282     -41096.356      143.62063      3659.697     
      2800   276.19262     -41098.379      11205.678      3659.697     
      2900   290.51483     -41095.901      4372.9805      3659.697     
      3000   310.50202     -41099.07      -3757.9518      3659.697     
      3100   299.05497     -41072.935      617.88577      3659.697     
      3200   311.59163     -41090.214     -5820.0373      3659.697     
      3300   300.45373     -41088.267     -10910.463      3659.697     
      3400   294.97738     -41099.383     -13587.286      3659.697     
      3500   274.00993     -41114.552      1379.622       3659.697     
      3600   279.12189     -41118.956     -6393.0607      3659.697     
      3700   294.04025     -41108.217      9316.0184      3659.697     
      3800   302.16317     -41101.541     -8389.0453      3659.697     
      3900   291.2159      -41084.249     -10358.601      3659.697     
      4000   305.72461     -41089.984     -3102.3701      3659.697     
      4100   315.64842     -41074.316     -8651.5527      3659.697     
      4200   324.83785     -41067.507     -272.89235      3659.697     
      4300   303.83566     -41078.137     -5360.2196      3659.697     
      4400   299.71615     -41089.638      3751.9043      3659.697     
      4500   298.59089     -41085.043     -843.64295      3659.697     
      4600   308.7801      -41084.702      5520.3127      3659.697     
      4700   327.96846     -41098.118      274.6916       3659.697     
      4800   304.51302     -41082.911     -23652.534      3659.697     
      4900   292.28873     -41096.1        4038.092       3659.697     
      5000   293.76591     -41100.575     -7947.2904      3659.697     
      5100   327.78331     -41108.487     -2765.2227      3659.697     
      5200   307.84104     -41076.052     -6709.8532      3659.697     
      5300   308.14031     -41082.823     -3113.6619      3659.697     
      5400   285.04018     -41061.082     -3062.017       3659.697     
      5500   309.85814     -41090.675     -7136.3671      3659.697     
      5600   311.02035     -41113.077      6475.1777      3659.697     
      5700   289.06414     -41106.779     -10064.674      3659.697     
      5800   299.30816     -41102.781     -1619.2385      3659.697     
      5900   287.00689     -41047.786     -13726.173      3659.697     
      6000   313.50567     -41075.267     -12771.891      3659.697     
      6100   304.02437     -41086.414     -954.12337      3659.697     
      6200   301.85337     -41099.72       106.73049      3659.697     
      6300   288.16059     -41091.626      1853.1178      3659.697     
      6400   297.10543     -41089.853     -4394.3182      3659.697     
      6500   329.38371     -41091.744     -7062.8084      3659.697     
      6600   312.8187      -41076.086     -10075.892      3659.697     
      6700   299.64608     -41089.464      925.43333      3659.697     
      6800   288.0478      -41083.856     -4577.0224      3659.697     
      6900   286.68779     -41076.862     -3825.8329      3659.697     
      7000   312.58663     -41073.05       5239.7559      3659.697     
      7100   315.95182     -41050.325      14.838431      3659.697     
      7200   310.88339     -41062.59      -3601.2808      3659.697     
      7300   287.23221     -41054.233      3288.9387      3659.697     
      7400   304.23637     -41092.034     -2819.4191      3659.697     
      7500   304.20413     -41108.33      -1615.038       3659.697     
      7600   290.11395     -41095.761     -2200.1303      3659.697     
      7700   303.55152     -41069.022     -12106.845      3659.697     
      7800   317.51487     -41074.539     -7039.5815      3659.697     
      7900   303.21418     -41079.451     -3407.9343      3659.697     
      8000   276.44047     -41068.618      1347.8993      3659.697     
      8100   306.87279     -41103.769     -6814.4237      3659.697     
      8200   296.15162     -41089.795      8597.9897      3659.697     
      8300   299.78018     -41073.603     -4639.6159      3659.697     
      8400   333.45864     -41072.774      12739.85       3659.697     
      8500   313.59633     -41069.961      145.04994      3659.697     
      8600   298.66036     -41084.441      770.6895       3659.697     
      8700   303.8224      -41098.562     -11069.62       3659.697     
      8800   289.7456      -41088.416     -4759.8276      3659.697     
      8900   289.04728     -41080.549     -4055.2925      3659.697     
      9000   331.46827     -41096.588     -4761.9041      3659.697     
      9100   312.30105     -41070.646     -2723.6455      3659.697     
      9200   301.31665     -41083.128     -7862.5306      3659.697     
      9300   274.1675      -41073.384     -16710.839      3659.697     
      9400   299.69892     -41092.173     -2923.6252      3659.697     
      9500   293.65305     -41074.341      13570.013      3659.697     
      9600   300.15513     -41070.225      5739.7821      3659.697     
      9700   314.87223     -41072.276     -10043.737      3659.697     
      9800   302.77894     -41039.553     -13685.752      3659.697     
      9900   309.06897     -41051.932     -13058.431      3659.697     
     10000   319.54357     -41098.66      -3760.4916      3659.697     
Loop time of 340.824 on 8 procs for 10000 steps with 366 atoms

Performance: 1.268 ns/day, 18.935 hours/ns, 29.341 timesteps/s, 10.739 katom-step/s
98.8% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 268.91     | 284.53     | 298.05     |  62.0 | 83.48
Bond    | 0.022299   | 0.023852   | 0.025603   |   0.7 |  0.01
Neigh   | 2.7278     | 2.8793     | 3.0067     |   5.3 |  0.84
Comm    | 8.215      | 21.651     | 37.291     | 225.0 |  6.35
Output  | 0.021339   | 0.064484   | 0.15433    |  18.4 |  0.02
Modify  | 31.274     | 31.439     | 31.599     |   1.9 |  9.22
Other   |            | 0.2411     |            |       |  0.07

Nlocal:          45.75 ave          56 max          36 min
Histogram: 1 0 1 1 1 2 0 1 0 1
Nghost:        3601.38 ave        3661 max        3543 min
Histogram: 1 1 1 1 0 0 1 1 0 2
Neighs:        32016.8 ave       38931 max       25678 min
Histogram: 1 0 1 1 1 2 0 1 0 1

Total # of neighbors = 256134
Ave neighs/atom = 699.81967
Ave special neighs/atom = 0
Neighbor list builds = 113
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg6

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (16.1249 13.4224 16.909) with tilt (-8.2539 0.6162 -0.6491)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  366 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*16.909
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box
fix deform_p all deform 100 xy delta ${delta} remap v units box
fix deform_p all deform 100 xy delta 0.16909 remap v units box

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 6 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos6.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos6.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos6 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos6 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos6 all custom/gz 100 dump/pos_deform6.lammpstrj.gz id type q x y z
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 5 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 137.1 | 139 | 140.6 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -41082.288     -14052.22       3659.697     
       100   301.80644     -41088.316     -190.63105      3659.697     
       200   283.96675     -41082.152      5848.0897      3659.697     
       300   283.66416     -41099.5       -11893.295      3659.697     
       400   280.06162     -41094.926     -3657.1669      3659.697     
       500   306.51437     -41091.003      4628.9087      3659.697     
       600   300.2799      -41071.313     -2205.093       3659.697     
       700   316.7606      -41085.297      1219.0241      3659.697     
       800   303.71807     -41088.984     -3561.3031      3659.697     
       900   279.76422     -41095.973     -4321.3071      3659.697     
      1000   290.96796     -41097.866     -7826.1293      3659.697     
      1100   286.40933     -41075.734     -2551.0263      3659.697     
      1200   294.20974     -41065.75       4262.4675      3659.697     
      1300   312.23268     -41073.107     -1206.7332      3659.697     
      1400   294.28674     -41061.22      -5954.0323      3659.697     
      1500   294.63579     -41068.847     -4128.4855      3659.697     
      1600   308.39708     -41091.716     -1617.925       3659.697     
      1700   282.59088     -41088.915     -2982.0175      3659.697     
      1800   283.20147     -41091.098     -1591.1015      3659.697     
      1900   298.43805     -41065.386     -334.92767      3659.697     
      2000   305.72127     -41057.101     -2054.3382      3659.697     
      2100   309.79808     -41078.46      -155.6498       3659.697     
      2200   289.80643     -41082.412      1820.8525      3659.697     
      2300   281.92017     -41084.852     -6146.7005      3659.697     
      2400   298.76867     -41105.459     -213.15118      3659.697     
      2500   305.29139     -41084.194     -17299.268      3659.697     
      2600   308.30584     -41062.869      6274.3307      3659.697     
      2700   304.23839     -41071.612     -6607.3133      3659.697     
      2800   297.56031     -41087.949     -288.32249      3659.697     
      2900   289.60611     -41096.151     -10632.94       3659.697     
      3000   283.07574     -41086.904      2837.6506      3659.697     
      3100   276.07668     -41069.651     -3757.6677      3659.697     
      3200   284.82945     -41075.424      1111.3352      3659.697     
      3300   315.57965     -41094.118      7622.1625      3659.697     
      3400   302.17285     -41081.003      6067.2021      3659.697     
      3500   288.15178     -41094.139     -2714.5908      3659.697     
      3600   264.49078     -41087.888     -14604.65       3659.697     
      3700   299.60762     -41104.157     -7907.8383      3659.697     
      3800   304.95083     -41095.131     -4387.5435      3659.697     
      3900   293.24022     -41079.195     -39.488809      3659.697     
      4000   302.33573     -41085.666      1733.7857      3659.697     
      4100   312.89705     -41068.687     -4494.1684      3659.697     
      4200   327.29395     -41073.479     -12566.261      3659.697     
      4300   305.25879     -41079.723     -5626.64        3659.697     
      4400   294.47745     -41085.437     -15206.221      3659.697     
      4500   287.2061      -41078.579     -1135.6341      3659.697     
      4600   293.82058     -41082.474     -564.07997      3659.697     
      4700   307.98247     -41075.364     -4016.2255      3659.697     
      4800   312.51096     -41057.451      12580.46       3659.697     
      4900   319.63801     -41081.817      1753.7774      3659.697     
      5000   298.80627     -41089.206     -7413.4171      3659.697     
      5100   285.09394     -41077.455      3127.6595      3659.697     
      5200   283.91592     -41078.427     -1772.6576      3659.697     
      5300   299.43804     -41107.84      -3861.7493      3659.697     
      5400   280.88467     -41097.602     -5349.6508      3659.697     
      5500   294.59778     -41099.583     -3386.2584      3659.697     
      5600   299.14055     -41071.037      556.05186      3659.697     
      5700   299.85051     -41066.254      1144.1589      3659.697     
      5800   311.05605     -41084.674      2809.6179      3659.697     
      5900   310.05551     -41104.933     -8385.0373      3659.697     
      6000   284.3043      -41103.144     -9696.6879      3659.697     
      6100   281.39347     -41089.908      84.665691      3659.697     
      6200   300.29225     -41080.621     -17019.865      3659.697     
      6300   295.93767     -41068.639     -5280.9637      3659.697     
      6400   300.22462     -41078.004      1335.724       3659.697     
      6500   301.87526     -41103.178     -1247.5223      3659.697     
      6600   276.97575     -41088.569     -6389.6326      3659.697     
      6700   296.00081     -41090.33      -2194.4471      3659.697     
      6800   298.7733      -41061.18      -6733.9423      3659.697     
      6900   296.68459     -41057.078     -9134.2446      3659.697     
      7000   289.82079     -41064.758     -9049.7744      3659.697     
      7100   305.52947     -41103.086     -633.91877      3659.697     
      7200   276.72856     -41098.198     -5980.2729      3659.697     
      7300   278.04141     -41114.827     -1833.0131      3659.697     
      7400   295.01951     -41097.476     -2386.9449      3659.697     
      7500   287.76572     -41064.786     -6890.3213      3659.697     
      7600   301.18655     -41066.812      9262.144       3659.697     
      7700   293.90488     -41048.785      5588.6931      3659.697     
      7800   308.21375     -41064.081     -6612.2121      3659.697     
      7900   303.92273     -41084.647      3035.0304      3659.697     
      8000   290.76775     -41094.081     -2788.272       3659.697     
      8100   280.52269     -41086.431      4981.266       3659.697     
      8200   305.50637     -41087.582     -5814.8853      3659.697     
      8300   315.43562     -41090.262     -1215.4158      3659.697     
      8400   286.86098     -41067.36       1028.7472      3659.697     
      8500   297.29056     -41081.632     -8199.5646      3659.697     
      8600   287.23084     -41067.739      1160.6711      3659.697     
      8700   310.74438     -41059.811      2344.4521      3659.697     
      8800   338.02542     -41079.656      4699.6475      3659.697     
      8900   292.25346     -41055.669      4867.4166      3659.697     
      9000   313.41998     -41089.946     -11121.874      3659.697     
      9100   304.66859     -41092.463     -151.03705      3659.697     
      9200   305.83125     -41103.977     -376.34411      3659.697     
      9300   278.0871      -41077.407      1274.7607      3659.697     
      9400   290.91659     -41069.561      4147.6632      3659.697     
      9500   295.37633     -41047.959      8016.1789      3659.697     
      9600   302.43682     -41057.953     -2635.2948      3659.697     
      9700   291.03774     -41074.585     -8912.2859      3659.697     
      9800   297.03014     -41094.624     -2045.4092      3659.697     
      9900   300.30148     -41097.251     -7817.5604      3659.697     
     10000   293.27106     -41084.277     -7546.0549      3659.697     
Loop time of 292.523 on 8 procs for 10000 steps with 366 atoms

Performance: 1.477 ns/day, 16.251 hours/ns, 34.185 timesteps/s, 12.512 katom-step/s
98.7% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 247.42     | 252.46     | 256.64     |  20.7 | 86.31
Bond    | 0.019323   | 0.021468   | 0.024128   |   0.9 |  0.01
Neigh   | 2.6892     | 2.7234     | 2.8293     |   2.5 |  0.93
Comm    | 3.2834     | 7.491      | 12.569     | 121.2 |  2.56
Output  | 0.019743   | 0.061641   | 0.14899    |  18.3 |  0.02
Modify  | 29.286     | 29.438     | 29.514     |   1.2 | 10.06
Other   |            | 0.3241     |            |       |  0.11

Nlocal:          45.75 ave          51 max          38 min
Histogram: 1 0 0 1 0 2 1 1 0 2
Nghost:        3561.12 ave        3585 max        3534 min
Histogram: 1 0 2 0 1 0 1 1 0 2
Neighs:        32050.9 ave       35714 max       26844 min
Histogram: 1 0 1 0 0 2 1 1 0 2

Total # of neighbors = 256407
Ave neighs/atom = 700.56557
Ave special neighs/atom = 0
Neighbor list builds = 113
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos6

# Delete dir to make sure it is not reused
variable dir delete

# Calc and output
# include calc.mod.lmp

Total wall time: 1:38:35
