LAMMPS (2 Aug 2023 - Update 2)
  using 1 OpenMP thread(s) per MPI task
# Initialization
units           real
dimension       3
boundary        p p p
# boundary        s s s
atom_style      full
timestep        0.5   # fs

# Define MD parameters
variable nevery equal 10                  # sampling interval
variable nrepeat equal 10                 # number of samples
variable nfreq equal ${nevery}*${nrepeat} # length of one average
variable nfreq equal 10*${nrepeat} 
variable nfreq equal 10*10 
variable nthermo equal ${nfreq}           # interval for thermo output
variable nthermo equal 100           
# 1 ps : 1e3 fs / 0.5 fs = 2e3 steps
# variable nequil equal 20*${nthermo}       # steps of equilibration run 10
variable nrun equal 100*${nthermo}          # stpes of equilibrated run 10
variable nrun equal 100*100          
variable temp equal 300.0                # temperature of initial sample
variable tdamp equal 50.0                 # time constant for thermostat
variable seed equal 123456                # seed for thermostat
variable ufac equal 1.01325e-4         # pressure unit conversion, from atm to Gpa
variable up equal 0.01                  # the deformation magnitude 0.1
variable FF string "SiOCHN_2018.ff C H O Si"          # force field args for pair_coeff
# pair_coeff * * CHONSSi.ff C H O Si
# pair_coeff * * CHOSiNa.ff C H O Si
# pair_coeff * * SiOCHN_2018.ff C H O Si
# pair_coeff * * PDMSDecomp.ff C H O Si
# pair_coeff * * CHONSi.ff C H O Si
# pair_coeff * * CHOFe.ff O Si

# Read the initial sctructure
# box tilt large
variable structure string 333-EXP-27

read_data       ${structure}.data
read_data       333-EXP-27.data
Reading data file ...
  triclinic box = (0 0 0) to (15.1447 13.6088 16.498) with tilt (-7.6974 -0.6366 0.5805)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  reading atoms ...
  295 atoms
  reading velocities ...
  295 velocities
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.001 seconds
  read_data CPU = 0.009 seconds

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)
# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400

# # Energy minimization
# print "*****Minimization starts.*****"
# minimize 1.0e-6 1.0e-6 100 1000
# min_style cg
# # Save the optimized structure
# write_data ${structure}_opt.data
velocity        all create ${temp} ${seed} dist gaussian
velocity        all create 300 ${seed} dist gaussian
velocity        all create 300 123456 dist gaussian

# # Equilibration
# include ff.mod.lmp
# if "$(is_defined(fix,avgp))" then "unfix avgp"
# if "$(is_defined(fix,avgl))" then "unfix avgl"
# thermo_style custom step temp pe press density vol
# run ${nequil}
# # Save the equilibrated structure
# write_data ${structure}_eq.data

# use tmp to save initial length and tilt
variable tmp equal lx
variable lx0 equal ${tmp}
variable lx0 equal 15.1447
variable tmp equal ly
variable ly0 equal ${tmp}
variable ly0 equal 13.6088
variable tmp equal lz
variable lz0 equal ${tmp}
variable lz0 equal 16.498

variable tmp equal yz
variable yz0 equal ${tmp}
variable yz0 equal 0.5805
variable tmp equal xz
variable xz0 equal ${tmp}
variable xz0 equal -0.6366
variable tmp equal xy
variable xy0 equal ${tmp}
variable xy0 equal -7.6974

# Write restart
write_restart equil.res
System init for write_restart ...
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none

# dir: direction
# uxx Perturbation
variable dir equal 1
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
variable len0 equal ${lx0}
variable len0 equal 15.1447
variable dlen equal lx-${len0}
variable dlen equal lx-15.1447
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.1447 13.6088 16.498) with tilt (-7.6974 -0.6366 0.5805)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  295 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.004 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*15.1447
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.6974000000000000199, deltaxy = 0.076974
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = -0.63660000000000005471, deltaxz = 0.006366
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0.58050000000000001599, deltayz = -0.005805
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.151447 xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.151447 xy delta 0.076974 xz delta ${deltaxz} remap v units box flip no
fix deform_n all deform 100 x delta 0 -0.151447 xy delta 0.076974 xz delta 0.006366 remap v units box flip no
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 1 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg1.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg1.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg1 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg1 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg1 all custom/gz 100 dump/neg_deform1.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 10000

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Your simulation uses code contributions which should be cited:

- pair reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 number =  {4--5},
 pages =   {245--259}
}

- fix qeq/reaxff command: doi:10.1016/j.parco.2011.08.005

@Article{Aktulga12,
 author = {H. M. Aktulga and J. C. Fogarty and S. A. Pandit and A. Y. Grama},
 title = {Parallel Reactive Molecular Dynamics: {N}umerical Methods and Algorithmic Techniques},
 journal = {Parallel Computing},
 year =    2012,
 volume =  38,
 pages =   {245--259}
}

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 114.2 | 116.3 | 117.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -30124.188     -2803.6199      3400.2575    
       100   296.94663     -30107.961      1574.4265      3399.9175    
       200   284.27288     -30070.766     -12820.381      3399.5774    
       300   315.60464     -30100.251     -16051.589      3399.2374    
       400   293.00879     -30092.75      -2449.7861      3398.8974    
       500   330.15469     -30131.296     -5003.4859      3398.5574    
       600   301.11938     -30130.224      431.71094      3398.2173    
       700   297.39336     -30133.106     -5811.1671      3397.8773    
       800   295.62172     -30118.056      1302.7995      3397.5373    
       900   303.15426     -30096.936     -6278.871       3397.1973    
      1000   301.8507      -30090.186     -7602.9977      3396.8572    
      1100   324.67965     -30117.65      -2790.0202      3396.5172    
      1200   315.28886     -30133.873     -11163.958      3396.1772    
      1300   293.15448     -30134.871      5018.3191      3395.8372    
      1400   281.4119      -30123.178      1213.5218      3395.4971    
      1500   308.73318     -30136.659     -8465.6788      3395.1571    
      1600   305.00957     -30111.906     -5589.1164      3394.8171    
      1700   337.78717     -30120.191     -7144.7632      3394.4771    
      1800   310.32015     -30115.128      6232.6122      3394.137     
      1900   313.83452     -30152.164      547.8483       3393.797     
      2000   283.2261      -30128.753      7482.4917      3393.457     
      2100   303.38307     -30130.621      4883.9144      3393.1169    
      2200   300.24125     -30112.27      -136.73883      3392.7769    
      2300   326.79148     -30130.773     -4169.4652      3392.4369    
      2400   294.2567      -30139.201     -7472.2712      3392.0969    
      2500   299.00995     -30150.264      874.04177      3391.7568    
      2600   301.90778     -30141.833      5402.2653      3391.4168    
      2700   325.37804     -30145.879     -10329.097      3391.0768    
      2800   301.21594     -30133.336      4318.8529      3390.7368    
      2900   278.20137     -30148.491      6491.1241      3390.3967    
      3000   284.95983     -30150.972      4336.3252      3390.0567    
      3100   304.05859     -30149.822     -7178.8802      3389.7167    
      3200   306.31573     -30145.549     -625.17732      3389.3767    
      3300   299.94184     -30136.174     -2109.1783      3389.0366    
      3400   302.2071      -30134.427     -5834.5588      3388.6966    
      3500   315.35117     -30126.882     -871.99235      3388.3566    
      3600   315.24124     -30121.704      6726.533       3388.0166    
      3700   303.64293     -30137.997      5429.8073      3387.6765    
      3800   310.38974     -30166.181      3940.7062      3387.3365    
      3900   316.32957     -30191.825     -3629.8182      3386.9965    
      4000   292.79207     -30193.184     -3181.995       3386.6565    
      4100   291.81606     -30203.246     -9960.6837      3386.3164    
      4200   295.9128      -30208.978     -2763.1631      3385.9764    
      4300   308.90629     -30192.421      5348.4534      3385.6364    
      4400   313.03151     -30177.118     -5037.834       3385.2964    
      4500   297.17219     -30172.057     -2222.6357      3384.9563    
      4600   295.92877     -30187.923      1016.216       3384.6163    
      4700   290.21939     -30195.996      5736.7427      3384.2763    
      4800   299.73928     -30207.332     -8768.648       3383.9363    
      4900   307.7807      -30214.164     -15190.646      3383.5962    
      5000   308.33089     -30208.256     -5487.0592      3383.2562    
      5100   305.39411     -30194.083      8720.1064      3382.9162    
      5200   300.71139     -30170.796      4373.8126      3382.5761    
      5300   328.12406     -30198.029     -5117.8891      3382.2361    
      5400   293.91391     -30198.82      -13287.389      3381.8961    
      5500   308.92187     -30220.357     -3606.1285      3381.5561    
      5600   289.10494     -30202.548      1607.2965      3381.216     
      5700   297.53723     -30186.266     -1314.3891      3380.876     
      5800   291.80291     -30179.801     -9839.6017      3380.536     
      5900   280.39647     -30206.088     -8494.3121      3380.196     
      6000   281.28517     -30216.444     -15911.031      3379.8559    
      6100   293.79726     -30215.398      698.69146      3379.5159    
      6200   298.05364     -30205.945     -2123.5283      3379.1759    
      6300   325.482       -30222.726     -6731.8099      3378.8359    
      6400   295.08905     -30203.658     -11768.818      3378.4958    
      6500   291.09176     -30222.364     -6567.4317      3378.1558    
      6600   274.63887     -30213.78       62.602459      3377.8158    
      6700   316.81055     -30228.988      1748.1521      3377.4758    
      6800   320.24866     -30218.258     -8338.636       3377.1357    
      6900   301.32261     -30207.566      4885.7352      3376.7957    
      7000   282.86222     -30225.667      4959.6853      3376.4557    
      7100   275.96171     -30220.576      4719.5939      3376.1157    
      7200   305.73549     -30222.389     -4132.8508      3375.7756    
      7300   314.85824     -30225.108     -2747.9225      3375.4356    
      7400   302.1957      -30223.721     -7045.168       3375.0956    
      7500   298.52324     -30225.55      -11468.848      3374.7556    
      7600   282.52964     -30212.953     -9354.5416      3374.4155    
      7700   300.54587     -30209.636      1936.1856      3374.0755    
      7800   316.24902     -30192.638     -1902.7179      3373.7355    
      7900   314.54984     -30216.167     -1425.6768      3373.3955    
      8000   306.76766     -30233.002     -1663.032       3373.0554    
      8100   281.97019     -30214.54      -9766.8482      3372.7154    
      8200   317.6344      -30235.52      -7849.2018      3372.3754    
      8300   320.73533     -30222.619      9203.6832      3372.0354    
      8400   322.68244     -30208.269      1523.9161      3371.6953    
      8500   307.05377     -30223.327      1317.3768      3371.3553    
      8600   291.71427     -30228.842     -2509.5338      3371.0153    
      8700   300.38617     -30234.251     -1259.1488      3370.6752    
      8800   303.98892     -30229.123      7626.0406      3370.3352    
      8900   299.99912     -30210.285     -11823.894      3369.9952    
      9000   327.15392     -30207.052      8204.817       3369.6552    
      9100   323.76776     -30204.899     -10555.025      3369.3151    
      9200   293.47041     -30212.652     -1544.5907      3368.9751    
      9300   309.76245     -30234.075      2811.6243      3368.6351    
      9400   293.59764     -30231.615      3786.7418      3368.2951    
      9500   312.40462     -30256.798     -4962.6165      3367.955     
      9600   289.44445     -30236.917     -4301.913       3367.615     
      9700   299.67185     -30218.817      952.20869      3367.275     
      9800   333.89236     -30232.789      172.48083      3366.935     
      9900   298.42694     -30214.489      8465.1469      3366.5949    
     10000   293.45194     -30234.015     -7687.6146      3366.2549    
Loop time of 382.138 on 8 procs for 10000 steps with 295 atoms

Performance: 1.130 ns/day, 21.230 hours/ns, 26.169 timesteps/s, 7.720 katom-step/s
98.8% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 267.12     | 301.09     | 340.21     | 143.1 | 78.79
Bond    | 0.027096   | 0.030353   | 0.034384   |   1.2 |  0.01
Neigh   | 3.4739     | 4.0383     | 4.5372     |  18.0 |  1.06
Comm    | 4.7975     | 44.098     | 78.02      | 374.5 | 11.54
Output  | 0.030616   | 0.072054   | 0.17359    |  20.3 |  0.02
Modify  | 32.141     | 32.57      | 33.143     |   6.6 |  8.52
Other   |            | 0.2423     |            |       |  0.06

Nlocal:         36.875 ave          45 max          32 min
Histogram: 2 0 1 3 0 0 1 0 0 1
Nghost:        3032.62 ave        3074 max        2980 min
Histogram: 1 1 0 0 1 1 1 1 0 2
Neighs:        22680.1 ave       27380 max       19973 min
Histogram: 2 0 2 2 0 0 1 0 0 1

Total # of neighbors = 181441
Ave neighs/atom = 615.05424
Ave special neighs/atom = 0
Neighbor list builds = 155
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg1

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.1447 13.6088 16.498) with tilt (-7.6974 -0.6366 0.5805)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  295 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*15.1447
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.151447 xy delta ${deltaxy} xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.151447 xy delta -0.076974 xz delta ${deltaxz} remap v units box
fix deform_p all deform 100 x delta 0 0.151447 xy delta -0.076974 xz delta -0.006366 remap v units box
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 1 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos1.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos1.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos1 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos1 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos1 all custom/gz 100 dump/pos_deform1.lammpstrj.gz id type q x y z
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 114.2 | 116.3 | 117.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -30124.188     -2803.6199      3400.2575    
       100   296.94959     -30107.964      1576.0341      3400.5975    
       200   283.96522     -30070.625     -12998.072      3400.9375    
       300   315.32481     -30099.984     -16219.266      3401.2776    
       400   293.14258     -30092.845     -2875.9444      3401.6176    
       500   329.86908     -30130.852     -4892.6939      3401.9576    
       600   301.09556     -30129.786     -1263.2945      3402.2976    
       700   295.9664      -30131.627     -6952.5737      3402.6377    
       800   292.70662     -30114.224      676.08469      3402.9777    
       900   299.28926     -30094.381     -7028.7094      3403.3177    
      1000   307.36167     -30096.379     -11267.311      3403.6577    
      1100   312.78216     -30138.849     -4379.1644      3403.9978    
      1200   297.00158     -30150.255     -7237.3843      3404.3378    
      1300   290.30116     -30141.238      641.01855      3404.6778    
      1400   291.01123     -30120.442     -9065.7796      3405.0178    
      1500   316.09873     -30131.771     -3430.1349      3405.3579    
      1600   333.36595     -30148.217     -4740.5753      3405.6979    
      1700   316.10607     -30160.882     -1795.0088      3406.0379    
      1800   294.17157     -30162.421     -454.62842      3406.378     
      1900   294.39357     -30168.354     -6114.4505      3406.718     
      2000   294.03884     -30171.405      8355.0421      3407.058     
      2100   290.80176     -30171.944      2050.6099      3407.398     
      2200   294.41966     -30180.356      4492.9358      3407.7381    
      2300   296.0919      -30183.015      3697.014       3408.0781    
      2400   299.39213     -30187.332      4469.0874      3408.4181    
      2500   289.33262     -30191.695     -10037.066      3408.7581    
      2600   297.66555     -30209.944      10610.684      3409.0982    
      2700   283.35076     -30189.994     -3063.4244      3409.4382    
      2800   306.01198     -30178.509     -2277.2783      3409.7782    
      2900   302.11947     -30172.062     -5848.612       3410.1182    
      3000   302.64782     -30183.529     -5205.0103      3410.4583    
      3100   302.08329     -30227.73      -13401.558      3410.7983    
      3200   289.10785     -30239.232      7352.8088      3411.1383    
      3300   300.10268     -30271.333     -435.02289      3411.4783    
      3400   279.91289     -30268.43      -6894.4859      3411.8184    
      3500   288.52392     -30262.78      -8594.2819      3412.1584    
      3600   308.38399     -30256.392      273.99231      3412.4984    
      3700   281.8043      -30224.889     -7248.2615      3412.8384    
      3800   323.33411     -30260.782     -2332.0052      3413.1785    
      3900   274.10109     -30239.465      11171.884      3413.5185    
      4000   280.59066     -30275.894      4264.0647      3413.8585    
      4100   277.9519      -30264.829      2440.7731      3414.1985    
      4200   303.5827      -30264.811      5317.3437      3414.5386    
      4300   305.06447     -30247.02      -6403.994       3414.8786    
      4400   299.05508     -30238.395     -17153.425      3415.2186    
      4500   309.53546     -30260.066     -18301.933      3415.5586    
      4600   273.77871     -30263.658     -7116.0972      3415.8987    
      4700   287.02164     -30281.6       -508.76441      3416.2387    
      4800   292.02179     -30267.252     -8558.4906      3416.5787    
      4900   300.36712     -30262.076     -12094.897      3416.9187    
      5000   282.8508      -30243.236     -4079.8658      3417.2588    
      5100   333.7804      -30264.308     -6548.8465      3417.5988    
      5200   330.67095     -30239.732      6498.4543      3417.9388    
      5300   317.17925     -30247.273     -743.99647      3418.2789    
      5400   284.72646     -30239.168      6553.1018      3418.6189    
      5500   311.40129     -30272.016     -14394.274      3418.9589    
      5600   289.22889     -30254.061      1789.6557      3419.2989    
      5700   290.31976     -30252.882     -3880.619       3419.639     
      5800   298.67029     -30252.276      2679.1908      3419.979     
      5900   324.18675     -30257.665      3314.1299      3420.319     
      6000   301.05366     -30247.724     -8144.3268      3420.659     
      6100   285.87791     -30260.392     -1719.6278      3420.9991    
      6200   302.91059     -30270.267     -592.57931      3421.3391    
      6300   325.69848     -30282.481     -5801.8895      3421.6791    
      6400   307.3337      -30294.846      6620.982       3422.0191    
      6500   272.63521     -30287.023      10839.657      3422.3592    
      6600   291.61413     -30292.957      17039.677      3422.6992    
      6700   309.86636     -30284.434      5210.7035      3423.0392    
      6800   330.86261     -30298.107     -7357.8566      3423.3792    
      6900   263.72198     -30262.904     -10942.739      3423.7193    
      7000   275.83953     -30276.563     -10168.855      3424.0593    
      7100   305.02528     -30293.462      7902.6372      3424.3993    
      7200   281.36658     -30267.533     -6309.3179      3424.7393    
      7300   300.47989     -30281.953      626.20652      3425.0794    
      7400   312.91812     -30279.069      5052.3998      3425.4194    
      7500   322.50529     -30287.023      10319.039      3425.7594    
      7600   286.60396     -30293.448      1897.4777      3426.0994    
      7700   302.90428     -30312.242     -7120.708       3426.4395    
      7800   277.81727     -30272.909     -14688.918      3426.7795    
      7900   313.55618     -30283.772     -7706.5618      3427.1195    
      8000   290.96241     -30264.663     -5710.9483      3427.4595    
      8100   307.66701     -30292.836      1421.3636      3427.7996    
      8200   292.09953     -30288.181      6785.6197      3428.1396    
      8300   286.78589     -30312.684     -1773.2287      3428.4796    
      8400   270.48081     -30306.3       -10396.34       3428.8197    
      8500   274.91014     -30283.663     -1994.4283      3429.1597    
      8600   293.52289     -30281.551     -2476.2013      3429.4997    
      8700   302.85946     -30276.338      783.23377      3429.8397    
      8800   302.45188     -30263.391     -8972.7481      3430.1798    
      8900   312.88755     -30280.355     -4725.1313      3430.5198    
      9000   283.83855     -30290.518     -9385.9451      3430.8598    
      9100   296.13704     -30300.517      7133.0205      3431.1998    
      9200   330.29919     -30316.022      4310.3583      3431.5399    
      9300   304.15257     -30273.8       -6349.6878      3431.8799    
      9400   325.10156     -30272.827     -5438.4614      3432.2199    
      9500   328.28319     -30287.831     -6662.9599      3432.5599    
      9600   304.47011     -30304.331     -12475.636      3432.9       
      9700   305.98174     -30314.693     -358.08477      3433.24      
      9800   307.906       -30307.634     -2816.2187      3433.58      
      9900   304.18188     -30280.617      1931.5524      3433.92      
     10000   324.07395     -30295.189     -2616.0712      3434.2601    
Loop time of 373.691 on 8 procs for 10000 steps with 295 atoms

Performance: 1.156 ns/day, 20.761 hours/ns, 26.760 timesteps/s, 7.894 katom-step/s
98.8% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 274.81     | 305.08     | 330.72     | 121.9 | 81.64
Bond    | 0.028029   | 0.030121   | 0.033873   |   1.0 |  0.01
Neigh   | 4.2035     | 4.6409     | 4.9366     |  13.1 |  1.24
Comm    | 5.2726     | 30.911     | 61.199     | 383.1 |  8.27
Output  | 0.0311     | 0.073512   | 0.17655    |  20.5 |  0.02
Modify  | 32.252     | 32.591     | 33         |   4.9 |  8.72
Other   |            | 0.3628     |            |       |  0.10

Nlocal:         36.875 ave          45 max          31 min
Histogram: 2 1 0 0 2 1 0 1 0 1
Nghost:           2941 ave        2965 max        2907 min
Histogram: 1 0 1 0 2 0 0 1 1 2
Neighs:        22207.4 ave       26773 max       18851 min
Histogram: 2 1 0 0 2 1 0 1 0 1

Total # of neighbors = 177659
Ave neighs/atom = 602.2339
Ave special neighs/atom = 0
Neighbor list builds = 175
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos1

# Delete dir to make sure it is not reused
variable dir delete
# uyy Perturbation
variable dir equal 2
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
variable len0 equal ${ly0}
variable len0 equal 13.6088
variable dlen equal ly-${len0}
variable dlen equal ly-13.6088
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.1447 13.6088 16.498) with tilt (-7.6974 -0.6366 0.5805)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  295 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*13.6088
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.6974000000000000199, deltaxy = 0.076974
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = -0.63660000000000005471, deltaxz = 0.006366
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0.58050000000000001599, deltayz = -0.005805
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 -0.136088 yz delta ${deltayz} remap v units box flip no
fix deform_n all deform 100 y delta 0 -0.136088 yz delta -0.005805 remap v units box flip no
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 2 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg2.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg2.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg2 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg2 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg2 all custom/gz 100 dump/neg_deform2.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 114.2 | 116.3 | 117.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -30124.188     -2803.6199      3400.2575    
       100   296.94949     -30107.958      1573.0985      3399.9175    
       200   284.21292     -30070.684     -12876.412      3399.5774    
       300   316.07676     -30100.654     -16016.561      3399.2374    
       400   290.98602     -30091.113     -2239.2534      3398.8974    
       500   325.7121      -30127.419     -6155.9631      3398.5574    
       600   298.27925     -30127.6       -2443.0871      3398.2173    
       700   298.76441     -30134.356     -6443.2147      3397.8773    
       800   297.82303     -30119.188     -210.36796      3397.5373    
       900   303.95017     -30098.042     -5894.9136      3397.1973    
      1000   306.17233     -30094.904     -8724.1641      3396.8572    
      1100   338.44673     -30132.368     -2904.0217      3396.5172    
      1200   318.8132      -30136.643     -8673.065       3396.1772    
      1300   303.2912      -30144.454      5017.5823      3395.8372    
      1400   277.51752     -30128.192     -8107.5359      3395.4971    
      1500   303.34352     -30136.44       2477.7889      3395.1571    
      1600   324.03573     -30132.45      -9416.9717      3394.8171    
      1700   344.8122      -30152.56      -5731.2852      3394.4771    
      1800   335.74935     -30182.605     -5022.5201      3394.137     
      1900   297.6564      -30187.508     -1645.6907      3393.797     
      2000   289.32679     -30199.773      3868.1671      3393.457     
      2100   282.98319     -30200.262      3106.5408      3393.1169    
      2200   294.61118     -30205.069     -2775.356       3392.7769    
      2300   314.67211     -30208.003     -8494.0324      3392.4369    
      2400   308.98878     -30186.809      768.57651      3392.0969    
      2500   331.22662     -30205.526      1976.4831      3391.7568    
      2600   296.55579     -30211.307      7425.8073      3391.4168    
      2700   274.64314     -30202.864     -958.07309      3391.0768    
      2800   285.67153     -30196.957     -7904.5001      3390.7368    
      2900   289.58945     -30183.219     -5931.8248      3390.3967    
      3000   315.05399     -30203.277     -182.47847      3390.0567    
      3100   302.8329      -30206.922      1859.4888      3389.7167    
      3200   285.51708     -30212.843      621.89144      3389.3767    
      3300   274.32266     -30237.487      2575.9654      3389.0366    
      3400   268.91998     -30211.956     -1156.0577      3388.6966    
      3500   298.44003     -30211.058      2976.7026      3388.3566    
      3600   296.38228     -30192.293     -313.25339      3388.0166    
      3700   287.30405     -30183.125      6836.6908      3387.6765    
      3800   291.45366     -30203.744     -188.2276       3387.3365    
      3900   284.85316     -30219.495      20020.554      3386.9965    
      4000   304.53706     -30237.754      7570.2234      3386.6565    
      4100   302.41321     -30221.08      -2895.3452      3386.3164    
      4200   300.75167     -30181.565     -10834.004      3385.9764    
      4300   323.06894     -30211.973     -2089.7085      3385.6364    
      4400   301.4281      -30218.361     -8063.7252      3385.2964    
      4500   292.8976      -30219.6       -3070.2617      3384.9563    
      4600   301.65565     -30227.763     -13520.048      3384.6163    
      4700   293.14828     -30229.628     -9439.2091      3384.2763    
      4800   298.95067     -30245.296     -17801.277      3383.9363    
      4900   301.79054     -30259.308      1562.5122      3383.5962    
      5000   313.39987     -30260.357     -1469.3332      3383.2562    
      5100   296.73539     -30219.168      814.75129      3382.9162    
      5200   314.82792     -30222.22      -16242.481      3382.5761    
      5300   296.09385     -30224.454     -10935.933      3382.2361    
      5400   283.3912      -30222.248     -3465.8966      3381.8961    
      5500   284.33107     -30218.395     -7807.753       3381.5561    
      5600   308.71297     -30238.27      -12614.372      3381.216     
      5700   267.42412     -30224.332     -10981.258      3380.876     
      5800   285.94554     -30256.866     -9702.1168      3380.536     
      5900   302.00475     -30260.434     -4426.404       3380.196     
      6000   295.07288     -30229.372     -2073.4476      3379.8559    
      6100   315.63123     -30247.263     -7217.5453      3379.5159    
      6200   309.30591     -30249.765     -7109.6351      3379.1759    
      6300   285.52942     -30239.65       5230.8436      3378.8359    
      6400   292.35698     -30254.536      1501.3328      3378.4958    
      6500   292.27643     -30235.807     -1230.1405      3378.1558    
      6600   344.45597     -30255.768      2944.7943      3377.8158    
      6700   293.11469     -30227.574     -4947.9519      3377.4758    
      6800   315.8019      -30263.473     -443.11656      3377.1357    
      6900   303.76514     -30258.183      8027.3185      3376.7957    
      7000   292.98392     -30242.471      3860.0555      3376.4557    
      7100   317.69296     -30229.918      1730.2752      3376.1157    
      7200   338.50728     -30246.888     -2663.0251      3375.7756    
      7300   305.027       -30240.593     -4299.039       3375.4356    
      7400   306.64154     -30262.687      23270.235      3375.0956    
      7500   296.93294     -30270.11       5260.4877      3374.7556    
      7600   286.17589     -30262.04       13644.155      3374.4155    
      7700   289.64973     -30237.018     -4677.5942      3374.0755    
      7800   329.81428     -30255.473     -8777.0968      3373.7355    
      7900   297.21784     -30241.306     -320.2589       3373.3955    
      8000   297.22148     -30257.482     -7514.2565      3373.0554    
      8100   280.68151     -30259.742     -8293.9218      3372.7154    
      8200   294.23145     -30263.428     -5708.349       3372.3754    
      8300   285.92044     -30250.397     -3093.0424      3372.0354    
      8400   298.97037     -30253.387     -9280.3379      3371.6953    
      8500   310.5569      -30251.896     -7161.3199      3371.3553    
      8600   288.71308     -30261.366      7865.4727      3371.0153    
      8700   294.4607      -30280.284     -9485.7351      3370.6752    
      8800   301.55447     -30276.999      10151.963      3370.3352    
      8900   300.02864     -30264.467     -2539.8176      3369.9952    
      9000   335.23723     -30277.63       7215.9033      3369.6552    
      9100   310.89543     -30245.663      7506.3148      3369.3151    
      9200   306.34772     -30266.177     -620.37591      3368.9751    
      9300   298.13415     -30279.811     -1166.2249      3368.6351    
      9400   282.51607     -30269.099     -140.50972      3368.2951    
      9500   311.80741     -30288.931      3879.8038      3367.955     
      9600   306.68471     -30288.077      2185.4483      3367.615     
      9700   300.49759     -30295.373      1296.7866      3367.275     
      9800   265.1086      -30274.068     -9817.1028      3366.935     
      9900   294.01897     -30272.746     -11677.653      3366.5949    
     10000   307.25187     -30270.058     -4409.6105      3366.2549    
Loop time of 376.243 on 8 procs for 10000 steps with 295 atoms

Performance: 1.148 ns/day, 20.902 hours/ns, 26.579 timesteps/s, 7.841 katom-step/s
98.8% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 233.87     | 297.55     | 331.59     | 202.8 | 79.09
Bond    | 0.026954   | 0.029731   | 0.032495   |   0.9 |  0.01
Neigh   | 3.5815     | 4.5151     | 5.0198     |  25.8 |  1.20
Comm    | 7.8104     | 41.877     | 105.55     | 540.5 | 11.13
Output  | 0.028451   | 0.066003   | 0.15859    |  19.3 |  0.02
Modify  | 31.424     | 31.961     | 32.958     |  10.3 |  8.49
Other   |            | 0.2407     |            |       |  0.06

Nlocal:         36.875 ave          48 max          29 min
Histogram: 1 1 1 1 2 0 0 1 0 1
Nghost:        2994.25 ave        3037 max        2940 min
Histogram: 1 0 1 2 0 0 0 1 1 2
Neighs:        22719.1 ave       29164 max       18140 min
Histogram: 2 0 1 1 2 0 0 1 0 1

Total # of neighbors = 181753
Ave neighs/atom = 616.11186
Ave special neighs/atom = 0
Neighbor list builds = 176
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg2

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.1447 13.6088 16.498) with tilt (-7.6974 -0.6366 0.5805)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  295 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*13.6088
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 ${delta} yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 0.136088 yz delta ${deltayz} remap v units box
fix deform_p all deform 100 y delta 0 0.136088 yz delta 0.005805 remap v units box
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 2 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos2.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos2.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos2 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos2 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos2 all custom/gz 100 dump/pos_deform2.lammpstrj.gz id type q x y z
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 114.2 | 116.3 | 117.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -30124.188     -2803.6199      3400.2575    
       100   296.94668     -30107.966      1577.3431      3400.5975    
       200   284.1785      -30070.563     -12916.053      3400.9375    
       300   315.13616     -30099.682     -16225.959      3401.2776    
       400   291.96781     -30092.005     -2844.1815      3401.6176    
       500   326.38177     -30128.047     -5701.0446      3401.9576    
       600   298.87057     -30127.777      60.967493      3402.2976    
       700   296.62823     -30132.55      -5841.1891      3402.6377    
       800   296.67641     -30118.527      4372.3217      3402.9777    
       900   300.6319      -30094.383     -4603.4853      3403.3177    
      1000   312.50853     -30099.35      -12894.043      3403.6577    
      1100   328.56493     -30122.568     -4221.4051      3403.9978    
      1200   310.24274     -30128.852     -3430.8601      3404.3378    
      1300   303.58477     -30143.129      82.784535      3404.6778    
      1400   271.16287     -30118.909     -6123.4614      3405.0178    
      1500   326.79294     -30152.342     -8396.8555      3405.3579    
      1600   310.33376     -30114.786     -2814.1653      3405.6979    
      1700   318.26621     -30109.205      1828.3923      3406.0379    
      1800   305.52809     -30115.771      6963.7679      3406.378     
      1900   298.91858     -30142.482     -14344.649      3406.718     
      2000   280.20425     -30129.15       8340.196       3407.058     
      2100   293.92259     -30118.613     -867.44202      3407.398     
      2200   302.16217     -30117.188     -5763.4042      3407.7381    
      2300   321.23601     -30141.463      3675.8322      3408.0781    
      2400   283.83925     -30143.196     -7183.5496      3408.4181    
      2500   279.82006     -30138.923     -5439.7556      3408.7581    
      2600   291.20331     -30139.084      5751.1028      3409.0982    
      2700   305.30181     -30136.578      3185.2886      3409.4382    
      2800   310.38361     -30134.591      2727.215       3409.7782    
      2900   305.31297     -30134.423     -10757.88       3410.1182    
      3000   313.16768     -30148.644     -2582.1206      3410.4583    
      3100   302.11684     -30151.118     -1775.3358      3410.7983    
      3200   308.27216     -30163.475     -365.90171      3411.1383    
      3300   291.21919     -30151.855      15880.373      3411.4783    
      3400   293.04779     -30148.794      3521.8343      3411.8184    
      3500   282.10183     -30130.718     -3901.774       3412.1584    
      3600   320.75739     -30160.27      -10402.704      3412.4984    
      3700   291.4909      -30144.314      4445.8871      3412.8384    
      3800   307.12487     -30193.545     -9301.0521      3413.1785    
      3900   283.18509     -30179.655     -1610.1029      3413.5185    
      4000   289.89958     -30176.989      4150.0832      3413.8585    
      4100   315.11825     -30179.025      4288.8829      3414.1985    
      4200   327.9224      -30175.946      1792.1013      3414.5386    
      4300   331.17874     -30181.305     -2545.5096      3414.8786    
      4400   319.7899      -30206.986     -13578.528      3415.2186    
      4500   291.81297     -30197.608      3122.6874      3415.5586    
      4600   297.00302     -30188.497      5145.1213      3415.8987    
      4700   294.32325     -30167.827      1936.2478      3416.2387    
      4800   309.25714     -30181.395      2346.4913      3416.5787    
      4900   317.17632     -30219.788      1013.726       3416.9187    
      5000   317.0768      -30252.945      10448.528      3417.2588    
      5100   287.51681     -30251.503      194.05164      3417.5988    
      5200   315.49249     -30300.539      1294.5251      3417.9388    
      5300   286.90592     -30289.505     -335.41829      3418.2789    
      5400   286.05554     -30290.637     -2206.9805      3418.6189    
      5500   304.22822     -30287.286     -6473.0934      3418.9589    
      5600   300.67536     -30258.447     -11089.276      3419.2989    
      5700   326.5676      -30285.923     -5726.5585      3419.639     
      5800   287.33993     -30269.738     -8958.2097      3419.979     
      5900   308.76201     -30296.225     -7813.9202      3420.319     
      6000   311.29145     -30296.7       -4674.8978      3420.659     
      6100   289.25628     -30272.683     -3790.7436      3420.9991    
      6200   301.24879     -30264.936      5491.7832      3421.3391    
      6300   321.33025     -30262.328      13824.573      3421.6791    
      6400   320.26728     -30289.111      7554.0171      3422.0191    
      6500   288.0237      -30277.958     -12767.853      3422.3592    
      6600   291.21007     -30275.703     -3680.6991      3422.6992    
      6700   318.06463     -30288.259     -2859.549       3423.0392    
      6800   315.27806     -30291.644      1733.344       3423.3792    
      6900   305.8532      -30301.993     -9304.1438      3423.7193    
      7000   291.62913     -30311.108      344.74409      3424.0593    
      7100   286.37058     -30298.771     -6025.0905      3424.3993    
      7200   312.4899      -30286.239     -14586.393      3424.7393    
      7300   302.8602      -30278.024     -2647.432       3425.0794    
      7400   314.41495     -30296.599      4318.4613      3425.4194    
      7500   283.799       -30286.12      -9158.8613      3425.7594    
      7600   278.90358     -30290.867     -9795.3096      3426.0994    
      7700   303.66318     -30295.595     -16821.923      3426.4395    
      7800   317.38892     -30279.994     -17808.657      3426.7795    
      7900   331.33671     -30292.474     -10435.741      3427.1195    
      8000   298.73051     -30286.987      1743.8471      3427.4595    
      8100   286.949       -30286.439     -12481.654      3427.7996    
      8200   295.09004     -30286.778     -7229.4546      3428.1396    
      8300   297.31899     -30286.326     -5781.9011      3428.4796    
      8400   306.53817     -30298.777     -7370.4589      3428.8197    
      8500   291.36851     -30303.193      3934.807       3429.1597    
      8600   276.32029     -30318.759      2752.701       3429.4997    
      8700   297.10483     -30343.762      70.624891      3429.8397    
      8800   312.56478     -30336.929      2254.4967      3430.1798    
      8900   318.36782     -30310.546     -1163.5947      3430.5198    
      9000   329.21281     -30319.919      3578.522       3430.8598    
      9100   293.91275     -30313.345     -4979.6028      3431.1998    
      9200   289.37655     -30320.507     -6914.8535      3431.5399    
      9300   304.43266     -30328.575     -2633.7693      3431.8799    
      9400   322.88664     -30318.884      5007.1293      3432.2199    
      9500   335.89892     -30311.216     -8104.5671      3432.5599    
      9600   301.44532     -30299.096     -14966.811      3432.9       
      9700   297.15257     -30325.873     -10954.121      3433.24      
      9800   295.72768     -30334.444     -12885.735      3433.58      
      9900   297.0684      -30336.986     -10785.925      3433.92      
     10000   308.73839     -30323.548     -1669.7654      3434.2601    
Loop time of 371.938 on 8 procs for 10000 steps with 295 atoms

Performance: 1.161 ns/day, 20.663 hours/ns, 26.886 timesteps/s, 7.931 katom-step/s
98.8% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 233.62     | 300.07     | 331.34     | 207.4 | 80.68
Bond    | 0.027814   | 0.029525   | 0.031484   |   0.7 |  0.01
Neigh   | 3.2679     | 4.1314     | 4.4937     |  23.3 |  1.11
Comm    | 3.1431     | 34.405     | 100.85     | 612.3 |  9.25
Output  | 0.03018    | 0.070671   | 0.17015    |  20.1 |  0.02
Modify  | 32.501     | 32.882     | 33.768     |   8.5 |  8.84
Other   |            | 0.3517     |            |       |  0.09

Nlocal:         36.875 ave          42 max          30 min
Histogram: 2 0 1 0 0 0 1 0 2 2
Nghost:        2946.38 ave        2977 max        2916 min
Histogram: 1 0 0 2 1 1 1 1 0 1
Neighs:        22224.4 ave       25043 max       18241 min
Histogram: 2 0 1 0 0 0 1 0 2 2

Total # of neighbors = 177795
Ave neighs/atom = 602.69492
Ave special neighs/atom = 0
Neighbor list builds = 160
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos2

# Delete dir to make sure it is not reused
variable dir delete
# uzz Perturbation
variable dir equal 3
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
variable len0 equal ${lz0}
variable len0 equal 16.498
variable dlen equal lz-${len0}
variable dlen equal lz-16.498
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.1447 13.6088 16.498) with tilt (-7.6974 -0.6366 0.5805)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  295 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*16.498
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.6974000000000000199, deltaxy = 0.076974
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = -0.63660000000000005471, deltaxz = 0.006366
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0.58050000000000001599, deltayz = -0.005805
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no
fix deform_n all deform 100 z delta 0 ${delta} remap v units box flip no
fix deform_n all deform 100 z delta 0 -0.16498 remap v units box flip no
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 3 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg3.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg3.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg3 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg3 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg3 all custom/gz 100 dump/neg_deform3.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 114.2 | 116.3 | 117.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -30124.188     -2803.6199      3400.2575    
       100   296.94719     -30107.962      1576.0028      3399.9175    
       200   284.14829     -30070.843     -12799.189      3399.5774    
       300   315.54428     -30100.315     -16017.901      3399.2374    
       400   293.11695     -30093.047     -2288.8852      3398.8974    
       500   330.49853     -30131.774     -4700.0776      3398.5574    
       600   300.7458      -30129.88      -236.41622      3398.2173    
       700   296.1603      -30132.269     -5790.5786      3397.8773    
       800   293.92859     -30116.327      3768.4387      3397.5373    
       900   302.20841     -30097.665     -6128.7879      3397.1973    
      1000   308.78585     -30093.551     -10136.566      3396.8572    
      1100   331.23783     -30124.323      1177.6383      3396.5172    
      1200   291.99405     -30128.338     -6419.538       3396.1772    
      1300   302.94118     -30150.299     -501.79822      3395.8372    
      1400   274.25458     -30118.493     -578.5541       3395.4971    
      1500   325.11905     -30140.639     -2590.0923      3395.1571    
      1600   313.55378     -30115.773     -7469.4596      3394.8171    
      1700   314.50344     -30118.576      81.600242      3394.4771    
      1800   296.6507      -30136.435      1652.7073      3394.137     
      1900   288.71951     -30144.843     -5366.3693      3393.797     
      2000   293.08384     -30135.928     -7928.9388      3393.457     
      2100   299.70252     -30123.399      4469.9436      3393.1169    
      2200   322.64436     -30134.4       -3550.2863      3392.7769    
      2300   300.93268     -30120.568     -3177.2595      3392.4369    
      2400   317.62624     -30144.271     -16649.886      3392.0969    
      2500   266.3956      -30137.643     -6357.4408      3391.7568    
      2600   286.08202     -30150.109      3517.1336      3391.4168    
      2700   298.69216     -30137.037      5246.3517      3391.0768    
      2800   299.66648     -30127.584      7433.5869      3390.7368    
      2900   309.52652     -30134.908     -4921.3126      3390.3967    
      3000   305.84305     -30152.298     -9223.824       3390.0567    
      3100   276.60878     -30148.001     -1291.8914      3389.7167    
      3200   298.32006     -30156.146      6884.1282      3389.3767    
      3300   318.78879     -30156.954     -1462.4506      3389.0366    
      3400   306.36426     -30155.697     -9681.7134      3388.6966    
      3500   274.57912     -30147.357     -1512.8122      3388.3566    
      3600   293.64594     -30164.296      2596.8729      3388.0166    
      3700   306.69674     -30176.253      4120.0004      3387.6765    
      3800   289.52333     -30174.674     -2674.552       3387.3365    
      3900   292.93813     -30194.138     -3110.2473      3386.9965    
      4000   280.73992     -30184.049     -1120.9114      3386.6565    
      4100   295.3129      -30159.143     -13237.352      3386.3164    
      4200   313.92971     -30168.156     -12410.801      3385.9764    
      4300   304.0862      -30188.558      10831.771      3385.6364    
      4400   312.05242     -30213.72       1111.8449      3385.2964    
      4500   279.39286     -30202.433     -7849.0578      3384.9563    
      4600   291.18236     -30209.597     -15659.385      3384.6163    
      4700   292.23083     -30184.978     -13704.259      3384.2763    
      4800   321.17501     -30192.748     -7530.966       3383.9363    
      4900   319.4171      -30204.937      2518.5362      3383.5962    
      5000   282.79174     -30190.725      7644.0114      3383.2562    
      5100   302.00823     -30210.252     -9110.1943      3382.9162    
      5200   306.69777     -30208.14      -21288.087      3382.5761    
      5300   309.8702      -30200.438     -5879.8276      3382.2361    
      5400   302.05185     -30174.919     -5159.3925      3381.8961    
      5500   326.44215     -30195.561     -14893.304      3381.5561    
      5600   288.14892     -30196.828      1607.2281      3381.216     
      5700   277.102       -30202.792     -5731.6043      3380.876     
      5800   283.93841     -30206.879     -8824.0538      3380.536     
      5900   305.57806     -30211.884     -19093.231      3380.196     
      6000   311.49133     -30192.428     -10255.211      3379.8559    
      6100   320.75792     -30196.424     -7005.7186      3379.5159    
      6200   282.85129     -30200.898      3866.3054      3379.1759    
      6300   295.61095     -30217.403      6249.142       3378.8359    
      6400   293.38767     -30206.955      14813.213      3378.4958    
      6500   314.9128      -30210.827     -4656.6004      3378.1558    
      6600   310.75106     -30210.619     -19699.062      3377.8158    
      6700   285.65913     -30212.835     -7846.4111      3377.4758    
      6800   276.94184     -30225.151     -3542.3315      3377.1357    
      6900   287.44699     -30237.654      1225.1517      3376.7957    
      7000   294.84306     -30217.153     -3513.5652      3376.4557    
      7100   300.27541     -30208.408     -7601.5541      3376.1157    
      7200   298.55611     -30205.327     -2799.2703      3375.7756    
      7300   293.06609     -30208.596     -7800.1577      3375.4356    
      7400   305.14769     -30233.462      3965.7331      3375.0956    
      7500   294.9595      -30234.29       3594.0508      3374.7556    
      7600   295.2243      -30221.362      2035.8888      3374.4155    
      7700   292.90715     -30189.892     -5325.1306      3374.0755    
      7800   327.45146     -30216.612     -7483.2396      3373.7355    
      7900   307.21477     -30221.004      10645.256      3373.3955    
      8000   288.9329      -30219.007      3359.0213      3373.0554    
      8100   300.03016     -30229.431      996.53048      3372.7154    
      8200   305.22632     -30238.257     -8458.0821      3372.3754    
      8300   290.60169     -30225.634     -9068.7512      3372.0354    
      8400   297.23275     -30201.321     -9250.0579      3371.6953    
      8500   313.44819     -30200.24      -11741.062      3371.3553    
      8600   302.13806     -30211.48      -5555.3089      3371.0153    
      8700   288.64618     -30219.628     -16271.263      3370.6752    
      8800   290.74865     -30221.791     -2301.3865      3370.3352    
      8900   319.56891     -30234.012      10295.91       3369.9952    
      9000   333.73633     -30215.638     -1819.4701      3369.6552    
      9100   327.24249     -30200.755      6077.2896      3369.3151    
      9200   299.27443     -30215.215      3716.1822      3368.9751    
      9300   289.90093     -30213.218      2849.6688      3368.6351    
      9400   284.42101     -30208.423     -13924.375      3368.2951    
      9500   314.83451     -30229.739     -5623.2666      3367.955     
      9600   316.72832     -30225.232     -2521.968       3367.615     
      9700   310.99253     -30219.833     -3990.3966      3367.275     
      9800   312.34704     -30247.558     -3407.687       3366.935     
      9900   277.20932     -30230.646     -2853.5903      3366.5949    
     10000   298.45697     -30233.204     -3766.8747      3366.2549    
Loop time of 377.867 on 8 procs for 10000 steps with 295 atoms

Performance: 1.143 ns/day, 20.993 hours/ns, 26.464 timesteps/s, 7.807 katom-step/s
98.7% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 262.42     | 300.87     | 335.18     | 127.4 | 79.62
Bond    | 0.026471   | 0.029897   | 0.03403    |   1.3 |  0.01
Neigh   | 3.2954     | 3.9556     | 4.3732     |  16.9 |  1.05
Comm    | 6.7167     | 41.022     | 79.485     | 345.0 | 10.86
Output  | 0.027492   | 0.063336   | 0.15062    |  18.6 |  0.02
Modify  | 31.285     | 31.685     | 32.358     |   6.0 |  8.39
Other   |            | 0.2426     |            |       |  0.06

Nlocal:         36.875 ave          44 max          28 min
Histogram: 1 0 0 2 0 1 1 1 1 1
Nghost:         3008.5 ave        3095 max        2914 min
Histogram: 2 0 0 2 0 0 1 1 0 2
Neighs:        22657.2 ave       26904 max       17516 min
Histogram: 1 0 1 1 1 0 0 3 0 1

Total # of neighbors = 181258
Ave neighs/atom = 614.4339
Ave special neighs/atom = 0
Neighbor list builds = 154
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg3

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.1447 13.6088 16.498) with tilt (-7.6974 -0.6366 0.5805)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  295 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*16.498
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box
fix deform_p all deform 100 z delta 0 ${delta} remap v units box
fix deform_p all deform 100 z delta 0 0.16498 remap v units box
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 3 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos3.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos3.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos3 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos3 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos3 all custom/gz 100 dump/pos_deform3.lammpstrj.gz id type q x y z
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 114.2 | 116.3 | 117.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -30124.188     -2803.6199      3400.2575    
       100   296.94877     -30107.963      1573.2887      3400.5975    
       200   284.1092      -30070.53      -13002.624      3400.9375    
       300   315.32331     -30099.762     -16243.022      3401.2776    
       400   292.84937     -30092.42      -2822.9043      3401.6176    
       500   329.77469     -30130.742     -5221.9981      3401.9576    
       600   300.92842     -30129.623     -2344.2776      3402.2976    
       700   297.4714      -30132.736     -6719.6132      3402.6377    
       800   294.99082     -30115.981     -1357.5449      3402.9777    
       900   297.22789     -30092.308     -8510.538       3403.3177    
      1000   316.97017     -30098.244     -8849.7217      3403.6577    
      1100   350.57579     -30104.348     -6148.0374      3403.9978    
      1200   330.25822     -30123.65      -8998.3803      3404.3378    
      1300   303.8494      -30128.658      5293.3099      3404.6778    
      1400   275.11234     -30122.845     -7175.7229      3405.0178    
      1500   294.64187     -30148.155     -14393.126      3405.3579    
      1600   305.84741     -30141.897     -11450.851      3405.6979    
      1700   315.35724     -30145.032     -6254.2241      3406.0379    
      1800   293.94456     -30159.764      772.75723      3406.378     
      1900   318.33989     -30188.757      2584.2538      3406.718     
      2000   282.45992     -30156.571      1219.0216      3407.058     
      2100   310.47894     -30173.425     -3110.339       3407.398     
      2200   306.89494     -30162.74      -733.28308      3407.7381    
      2300   311.20567     -30158.933      2619.591       3408.0781    
      2400   297.69895     -30169.396     -4559.3405      3408.4181    
      2500   287.65783     -30176.983      309.02446      3408.7581    
      2600   328.94063     -30211.433      6509.2884      3409.0982    
      2700   311.64996     -30194.096      4981.4876      3409.4382    
      2800   318.67116     -30229.454      1153.8056      3409.7782    
      2900   289.06181     -30219.926      7328.374       3410.1182    
      3000   280.69097     -30208.602      4859.1802      3410.4583    
      3100   288.19224     -30191.008      1627.6301      3410.7983    
      3200   317.51633     -30200.054     -603.46352      3411.1383    
      3300   313.86211     -30211.658      7048.6335      3411.4783    
      3400   320.50911     -30236.618     -4401.6551      3411.8184    
      3500   325.78357     -30261.165      4847.8579      3412.1584    
      3600   312.46708     -30265.924      2665.1897      3412.4984    
      3700   298.3474      -30270.242     -15161.048      3412.8384    
      3800   288.55694     -30262.422      4209.0799      3413.1785    
      3900   293.35845     -30257.719     -6906.3576      3413.5185    
      4000   290.77526     -30256.822      6775.6029      3413.8585    
      4100   311.84007     -30275.176      497.62261      3414.1985    
      4200   299.22912     -30256.777     -4257.1171      3414.5386    
      4300   325.31889     -30250.805     -14847.047      3414.8786    
      4400   300.637       -30230.093      156.11506      3415.2186    
      4500   320.96919     -30278.969      4574.2686      3415.5586    
      4600   296.4078      -30263.103      813.99696      3415.8987    
      4700   268.99432     -30237.65      -7404.5767      3416.2387    
      4800   304.86278     -30258.416     -944.65797      3416.5787    
      4900   327.54545     -30273.224      9555.6771      3416.9187    
      5000   299.76845     -30257.409     -8946.7374      3417.2588    
      5100   277.15428     -30258.081     -8460.9982      3417.5988    
      5200   293.23114     -30282.227      118.32042      3417.9388    
      5300   302.8624      -30272.126     -1023.8773      3418.2789    
      5400   332.2635      -30272.55       6549.8306      3418.6189    
      5500   323.67777     -30271.599     -1972.5859      3418.9589    
      5600   286.03016     -30249.253      1130.287       3419.2989    
      5700   297.61626     -30262.955     -11470.462      3419.639     
      5800   304.4441      -30273.019     -2565.2383      3419.979     
      5900   305.05168     -30274.153     -961.7346       3420.319     
      6000   307.41928     -30271.131      7077.6224      3420.659     
      6100   300.56351     -30258.926      1455.3439      3420.9991    
      6200   293.09136     -30247.162      8701.9535      3421.3391    
      6300   321.09483     -30260.339      11786.892      3421.6791    
      6400   313.7202      -30252.226     -8672.3572      3422.0191    
      6500   304.30362     -30270.953     -2032.7437      3422.3592    
      6600   291.62424     -30269.18       3643.4458      3422.6992    
      6700   305.82822     -30268.577      9306.3067      3423.0392    
      6800   340.58671     -30279.702      11057.599      3423.3792    
      6900   329.17006     -30242.211     -5222.1262      3423.7193    
      7000   306.13345     -30212.535     -14924.61       3424.0593    
      7100   305.81586     -30241.082     -3755.1565      3424.3993    
      7200   301.68619     -30259.482     -1829.2549      3424.7393    
      7300   298.46032     -30268.068     -3693.9432      3425.0794    
      7400   277.70834     -30261.794     -15196.454      3425.4194    
      7500   296.43036     -30257.006     -7151.693       3425.7594    
      7600   331.1224      -30264.876     -10264.9        3426.0994    
      7700   315.43772     -30262.2        2845.7452      3426.4395    
      7800   310.71124     -30276.178      581.6288       3426.7795    
      7900   285.67631     -30269.496      4699.98        3427.1195    
      8000   271.08455     -30252.044     -1981.6608      3427.4595    
      8100   327.32707     -30261.392      29.744741      3427.7996    
      8200   327.80743     -30259.663     -2175.7673      3428.1396    
      8300   303.30576     -30256.178      925.03611      3428.4796    
      8400   284.29793     -30248.538     -7501.0282      3428.8197    
      8500   295.88059     -30251.823     -3701.9341      3429.1597    
      8600   327.04498     -30254.838      4149.7461      3429.4997    
      8700   303.86541     -30230.063     -3269.1416      3429.8397    
      8800   287.76059     -30252.582     -6685.7241      3430.1798    
      8900   289.92938     -30261.444      4556.7127      3430.5198    
      9000   277.69835     -30243.016     -5510.2501      3430.8598    
      9100   304.97652     -30244.932     -4547.3062      3431.1998    
      9200   295.47365     -30236.238     -7244.3077      3431.5399    
      9300   293.54322     -30264.211      1113.1431      3431.8799    
      9400   290.63456     -30281.441     -4874.1047      3432.2199    
      9500   298.58808     -30275.448     -4283.689       3432.5599    
      9600   297.15178     -30254.679     -5654.439       3432.9       
      9700   292.40348     -30236.974     -16728.379      3433.24      
      9800   311.7297      -30251.021     -12302.003      3433.58      
      9900   299.71483     -30264.203      94.919414      3433.92      
     10000   287.48158     -30275.627      6281.5424      3434.2601    
Loop time of 379.489 on 8 procs for 10000 steps with 295 atoms

Performance: 1.138 ns/day, 21.083 hours/ns, 26.351 timesteps/s, 7.774 katom-step/s
98.8% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 241.4      | 310.23     | 333.48     | 166.9 | 81.75
Bond    | 0.026604   | 0.029566   | 0.032321   |   1.0 |  0.01
Neigh   | 3.0776     | 3.9949     | 4.3189     |  19.0 |  1.05
Comm    | 9.123      | 32.395     | 101.25     | 516.5 |  8.54
Output  | 0.027163   | 0.062853   | 0.15018    |  18.6 |  0.02
Modify  | 32.236     | 32.534     | 33.411     |   6.5 |  8.57
Other   |            | 0.2451     |            |       |  0.06

Nlocal:         36.875 ave          41 max          27 min
Histogram: 1 0 0 0 0 1 1 1 1 3
Nghost:        2969.12 ave        3033 max        2891 min
Histogram: 1 1 0 0 0 3 1 0 0 2
Neighs:        22194.2 ave       24597 max       16556 min
Histogram: 1 0 0 0 1 0 1 1 1 3

Total # of neighbors = 177554
Ave neighs/atom = 601.87797
Ave special neighs/atom = 0
Neighbor list builds = 150
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos3

# Delete dir to make sure it is not reused
variable dir delete
# uyz Perturbation
variable dir equal 4
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
variable len0 equal ${lx0}
variable len0 equal 15.1447
variable dlen equal 2*(yz-${yz0})
variable dlen equal 2*(yz-0.5805)
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.1447 13.6088 16.498) with tilt (-7.6974 -0.6366 0.5805)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  295 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*15.1447
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.6974000000000000199, deltaxy = 0.076974
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = -0.63660000000000005471, deltaxz = 0.006366
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0.58050000000000001599, deltayz = -0.005805
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no
fix deform_n all deform 100 yz delta ${delta} remap v units box flip no
fix deform_n all deform 100 yz delta -0.151447 remap v units box flip no
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 4 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg4.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg4.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg4 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg4 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg4 all custom/gz 100 dump/neg_deform4.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 114.2 | 116.3 | 117.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -30124.188     -2803.6199      3400.2575    
       100   296.94881     -30107.966      1575.9972      3400.2575    
       200   284.13541     -30070.811     -12912.087      3400.2575    
       300   315.39442     -30100.165     -16127.964      3400.2575    
       400   292.95815     -30092.879     -2531.5151      3400.2575    
       500   330.11434     -30131.086     -5294.6106      3400.2575    
       600   300.42707     -30129.21      -469.2773       3400.2575    
       700   296.39677     -30132.23      -7226.0848      3400.2575    
       800   293.3182      -30115.113      1768.1704      3400.2575    
       900   300.15723     -30094.766     -5926.5989      3400.2575    
      1000   306.10327     -30093.396     -8363.3383      3400.2575    
      1100   319.48824     -30142.412     -1716.6677      3400.2575    
      1200   301.60156     -30154.667     -9129.4109      3400.2575    
      1300   287.75986     -30142.867     -472.48234      3400.2575    
      1400   282.09486     -30118.25      -11125.224      3400.2575    
      1500   319.43032     -30137.095     -9675.8109      3400.2575    
      1600   321.75214     -30141.893     -3171.8417      3400.2575    
      1700   293.19388     -30141.684     -3094.7992      3400.2575    
      1800   310.90093     -30180.605     -2592.0976      3400.2575    
      1900   293.23505     -30181.997     -8434.2163      3400.2575    
      2000   263.34048     -30154.312     -3429.2577      3400.2575    
      2100   274.33643     -30141.422     -16.312711      3400.2575    
      2200   304.77926     -30160.84      -6944.2181      3400.2575    
      2300   291.82866     -30153.374      7819.9928      3400.2575    
      2400   322.70607     -30183.782      10521.775      3400.2575    
      2500   284.3251      -30175.202      20874.227      3400.2575    
      2600   292.29902     -30200.182     -3831.2786      3400.2575    
      2700   277.96543     -30186.63      -20002.232      3400.2575    
      2800   313.14275     -30213.72      -18889.697      3400.2575    
      2900   297.68436     -30201.924     -1340.9611      3400.2575    
      3000   305.23286     -30227.438      2407.894       3400.2575    
      3100   285.84146     -30238.463      3990.0617      3400.2575    
      3200   287.30398     -30229.998      948.68141      3400.2575    
      3300   297.96985     -30220.876     -5883.9452      3400.2575    
      3400   316.20225     -30226.638     -5384.6713      3400.2575    
      3500   303.01874     -30222.979     -14420.615      3400.2575    
      3600   281.57754     -30207.92      -6882.8758      3400.2575    
      3700   290.24852     -30204.914     -53.573541      3400.2575    
      3800   330.93989     -30204.268      9333.2396      3400.2575    
      3900   307.60699     -30196.655      6591.6221      3400.2575    
      4000   319.42874     -30235.363      416.8304       3400.2575    
      4100   304.46105     -30237.135     -12688.823      3400.2575    
      4200   286.49122     -30229.832     -8319.0184      3400.2575    
      4300   289.897       -30218.473     -7000.9023      3400.2575    
      4400   305.77996     -30202.784     -1776.4081      3400.2575    
      4500   322.14157     -30217.721     -9480.5843      3400.2575    
      4600   309.2498      -30227.207     -3844.9187      3400.2575    
      4700   302.89377     -30231.866      3571.6283      3400.2575    
      4800   310.33602     -30240.942      4877.2436      3400.2575    
      4900   307.34062     -30240.474     -914.57119      3400.2575    
      5000   307.79969     -30236.408     -12723.717      3400.2575    
      5100   294.74823     -30209.959      3843.0643      3400.2575    
      5200   320.73246     -30225.703      1695.4807      3400.2575    
      5300   284.83244     -30218.009      2080.3865      3400.2575    
      5400   295.59027     -30239.471     -8699.2293      3400.2575    
      5500   284.80039     -30230.831     -1508.608       3400.2575    
      5600   327.49108     -30241.742     -4063.5173      3400.2575    
      5700   350.39129     -30242.046     -5502.2052      3400.2575    
      5800   333.75707     -30256.248     -7165.7182      3400.2575    
      5900   294.60071     -30246.107      1138.3331      3400.2575    
      6000   273.40626     -30238.503      4870.6046      3400.2575    
      6100   294.29516     -30264.024     -5892.0182      3400.2575    
      6200   314.57587     -30272.029     -12278.233      3400.2575    
      6300   321.78839     -30268.784     -2837.8717      3400.2575    
      6400   298.88268     -30255.606     -11427.073      3400.2575    
      6500   288.5675      -30260.122     -9560.9776      3400.2575    
      6600   272.15492     -30260.003     -7389.2855      3400.2575    
      6700   278.64225     -30257.076     -6533.8851      3400.2575    
      6800   307.45601     -30249.531     -5362.9762      3400.2575    
      6900   342.59959     -30275.371     -5641.9301      3400.2575    
      7000   307.68013     -30267.385      3228.1271      3400.2575    
      7100   307.97185     -30281.417      6308.6086      3400.2575    
      7200   281.00859     -30255.505     -429.59146      3400.2575    
      7300   301.91042     -30260.183     -483.72454      3400.2575    
      7400   312.93993     -30252.921      7884.9499      3400.2575    
      7500   327.32436     -30238.256     -8297.5825      3400.2575    
      7600   329.66987     -30228.123      12151.767      3400.2575    
      7700   318.2077      -30248.65       7700.2762      3400.2575    
      7800   301.67976     -30256.379      39.015526      3400.2575    
      7900   295.36969     -30268.194     -9355.2439      3400.2575    
      8000   287.25937     -30271.761     -1804.8508      3400.2575    
      8100   284.37264     -30260.235      6678.7813      3400.2575    
      8200   312.56476     -30250.002      7144.7493      3400.2575    
      8300   298.4663      -30241.213     -6147.5256      3400.2575    
      8400   297.12933     -30261.026     -3376.855       3400.2575    
      8500   292.68545     -30276.073     -11129.345      3400.2575    
      8600   287.55277     -30267.143     -295.77065      3400.2575    
      8700   305.94333     -30267.735      1792.1675      3400.2575    
      8800   304.46246     -30259.886     -10520.325      3400.2575    
      8900   296.24087     -30250.643     -13751.329      3400.2575    
      9000   301.58174     -30249.816     -4190.1465      3400.2575    
      9100   292.40223     -30247.868      12447.205      3400.2575    
      9200   297.74175     -30280.779      6885.7806      3400.2575    
      9300   288.72801     -30279.376      266.26053      3400.2575    
      9400   282.85465     -30253.921     -11932.414      3400.2575    
      9500   295.45588     -30246.913      3418.9966      3400.2575    
      9600   308.66743     -30257.337      11035.719      3400.2575    
      9700   306.52895     -30258.044     -2682.6646      3400.2575    
      9800   317.37602     -30266.467     -8892.8081      3400.2575    
      9900   308.13524     -30264.148     -4902.8153      3400.2575    
     10000   301.02165     -30271.312     -5714.2261      3400.2575    
Loop time of 383.123 on 8 procs for 10000 steps with 295 atoms

Performance: 1.128 ns/day, 21.285 hours/ns, 26.101 timesteps/s, 7.700 katom-step/s
98.8% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 269.94     | 317.52     | 338.69     | 117.0 | 82.88
Bond    | 0.026648   | 0.029489   | 0.032134   |   1.0 |  0.01
Neigh   | 3.5558     | 4.1739     | 4.4241     |  12.1 |  1.09
Comm    | 7.0098     | 28.214     | 75.808     | 392.6 |  7.36
Output  | 0.028124   | 0.064636   | 0.15405    |  18.7 |  0.02
Modify  | 32.592     | 32.875     | 33.529     |   4.7 |  8.58
Other   |            | 0.2479     |            |       |  0.06

Nlocal:         36.875 ave          42 max          29 min
Histogram: 1 0 0 1 1 0 1 2 1 1
Nghost:        3004.38 ave        3073 max        2916 min
Histogram: 1 1 0 0 1 1 1 1 0 2
Neighs:        22443.4 ave       25398 max       17929 min
Histogram: 1 0 1 0 1 0 0 3 1 1

Total # of neighbors = 179547
Ave neighs/atom = 608.6339
Ave special neighs/atom = 0
Neighbor list builds = 152
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg4

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.1447 13.6088 16.498) with tilt (-7.6974 -0.6366 0.5805)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  295 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*15.1447
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box
fix deform_p all deform 100 yz delta ${delta} remap v units box
fix deform_p all deform 100 yz delta 0.151447 remap v units box
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 4 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos4.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos4.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos4 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos4 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos4 all custom/gz 100 dump/pos_deform4.lammpstrj.gz id type q x y z
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 114.2 | 116.3 | 117.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -30124.188     -2803.6199      3400.2575    
       100   296.94718     -30107.959      1573.0997      3400.2575    
       200   284.10529     -30070.591     -12882.645      3400.2575    
       300   315.50081     -30099.959     -16117.519      3400.2575    
       400   292.74028     -30092.472     -2521.9819      3400.2575    
       500   329.90347     -30131.021     -4815.4356      3400.2575    
       600   300.40464     -30129.41      -435.74432      3400.2575    
       700   297.44118     -30133.146     -6986.406       3400.2575    
       800   292.95233     -30115.535      3700.8757      3400.2575    
       900   301.01951     -30095.191     -6133.1213      3400.2575    
      1000   307.67236     -30097.106     -11046.012      3400.2575    
      1100   326.45277     -30124.014     -7174.7899      3400.2575    
      1200   302.8894      -30129.798     -8724.4388      3400.2575    
      1300   293.78782     -30137.659      1755.5295      3400.2575    
      1400   291.28701     -30130.646     -8014.3254      3400.2575    
      1500   316.6523      -30132.888     -5071.6054      3400.2575    
      1600   313.74175     -30106.865     -2729.7136      3400.2575    
      1700   335.51053     -30115.013      1223.011       3400.2575    
      1800   315.04053     -30127.588      6977.6567      3400.2575    
      1900   286.17847     -30129.233     -3435.1636      3400.2575    
      2000   300.09451     -30142.992      6331.7054      3400.2575    
      2100   316.65837     -30140.864      6562.881       3400.2575    
      2200   321.41155     -30128.433      3106.7391      3400.2575    
      2300   290.65833     -30107.444      7858.9211      3400.2575    
      2400   290.21956     -30139.358     -10514.324      3400.2575    
      2500   304.19324     -30158.301      1272.9962      3400.2575    
      2600   301.2198      -30148.972     -1651.96        3400.2575    
      2700   285.83977     -30110.072     -1754.6853      3400.2575    
      2800   316.94916     -30113.615      3645.532       3400.2575    
      2900   294.31867     -30100.502     -5095.4624      3400.2575    
      3000   304.44836     -30130.973     -9082.2412      3400.2575    
      3100   299.33576     -30142.541     -4870.6648      3400.2575    
      3200   310.11065     -30164.121     -2091.6948      3400.2575    
      3300   290.87352     -30155.483     -2956.3345      3400.2575    
      3400   295.976       -30141.266     -6884.1137      3400.2575    
      3500   318.86531     -30128.34       3180.544       3400.2575    
      3600   316.83788     -30133.481      10326.825      3400.2575    
      3700   316.03166     -30160.047     -6009.9037      3400.2575    
      3800   282.18951     -30140.1       -12135.248      3400.2575    
      3900   282.49232     -30132.416     -7890.695       3400.2575    
      4000   298.21837     -30137.919      3666.7287      3400.2575    
      4100   312.51436     -30150.621      2296.9976      3400.2575    
      4200   292.64651     -30154.58      -14019.095      3400.2575    
      4300   288.69397     -30159.467     -12960.069      3400.2575    
      4400   296.36921     -30156.946     -2713.3575      3400.2575    
      4500   307.54846     -30139.777     -7568.2753      3400.2575    
      4600   318.5093      -30145.266      3063.5379      3400.2575    
      4700   307.36931     -30163.969     -1810.465       3400.2575    
      4800   289.79741     -30157.606     -3685.0376      3400.2575    
      4900   308.11489     -30163.603      1558.0674      3400.2575    
      5000   298.15695     -30150.957      7388.3754      3400.2575    
      5100   313.91493     -30177.78       928.91535      3400.2575    
      5200   293.69632     -30186.538      3736.2967      3400.2575    
      5300   267.23478     -30162.53      -12364.411      3400.2575    
      5400   311.80492     -30180.289     -4940.9028      3400.2575    
      5500   282.11478     -30151.195     -4526.0308      3400.2575    
      5600   309.46515     -30173.636     -6108.1988      3400.2575    
      5700   297.79313     -30159.289     -12742.998      3400.2575    
      5800   333.44858     -30171.657      1822.3121      3400.2575    
      5900   321.02342     -30148.541     -8956.4924      3400.2575    
      6000   303.98062     -30160.958      2200.3708      3400.2575    
      6100   290.8752      -30164.637     -4715.6725      3400.2575    
      6200   309.94548     -30184.402     -6420.2634      3400.2575    
      6300   284.75592     -30170.895     -7724.2671      3400.2575    
      6400   290.3794      -30178.183      2307.4838      3400.2575    
      6500   312.91066     -30179.454      4978.8272      3400.2575    
      6600   296.51086     -30155.914      2346.5952      3400.2575    
      6700   306.97816     -30158.296     -9311.6478      3400.2575    
      6800   294.77489     -30151.259      3988.1824      3400.2575    
      6900   284.72126     -30171.205      918.75607      3400.2575    
      7000   287.91924     -30181.097     -3798.1406      3400.2575    
      7100   311.05094     -30189.631     -3621.9993      3400.2575    
      7200   307.41748     -30157.514     -458.80786      3400.2575    
      7300   332.24044     -30164.828      1102.8997      3400.2575    
      7400   301.62038     -30152.961     -9640.8275      3400.2575    
      7500   286.58157     -30158.844     -695.02831      3400.2575    
      7600   303.97626     -30187.411      8217.935       3400.2575    
      7700   275.69667     -30174.295      12023.035      3400.2575    
      7800   309.92286     -30199.36       4380.4237      3400.2575    
      7900   326.21031     -30181.74      -10633.07       3400.2575    
      8000   312.38905     -30162.588     -11434.705      3400.2575    
      8100   305.91991     -30178.923     -5621.7895      3400.2575    
      8200   286.36283     -30174.995     -3218.951       3400.2575    
      8300   296.40033     -30183.465     -4388.4759      3400.2575    
      8400   295.35314     -30185.786      2636.4825      3400.2575    
      8500   292.29608     -30185.657     -11524.83       3400.2575    
      8600   305.35773     -30206.323      3885.3226      3400.2575    
      8700   279.17092     -30200.009      2804.2998      3400.2575    
      8800   274.87359     -30210.649      870.24356      3400.2575    
      8900   280.63283     -30195.741     -3034.4269      3400.2575    
      9000   316.63061     -30200.201     -8170.2099      3400.2575    
      9100   317.37545     -30203.95      -4316.4355      3400.2575    
      9200   308.84778     -30211.807      5988.9322      3400.2575    
      9300   312.03007     -30243.846     -1348.1312      3400.2575    
      9400   294.41643     -30254.361     -6492.3487      3400.2575    
      9500   298.06991     -30270.393      7492.8476      3400.2575    
      9600   289.5421      -30271.699      6551.3797      3400.2575    
      9700   282.86181     -30262.297     -13225.623      3400.2575    
      9800   323.27934     -30269.479      3359.2263      3400.2575    
      9900   321.92252     -30259.902      7824.3467      3400.2575    
     10000   305.35224     -30264.594     -16840.628      3400.2575    
Loop time of 378.392 on 8 procs for 10000 steps with 295 atoms

Performance: 1.142 ns/day, 21.022 hours/ns, 26.428 timesteps/s, 7.796 katom-step/s
98.7% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 302.23     | 322.46     | 330.34     |  58.8 | 85.22
Bond    | 0.028788   | 0.030658   | 0.034364   |   1.0 |  0.01
Neigh   | 3.9467     | 4.1814     | 4.327      |   6.5 |  1.11
Comm    | 11.044     | 18.934     | 39.192     | 242.7 |  5.00
Output  | 0.029774   | 0.069062   | 0.1647     |  19.6 |  0.02
Modify  | 32.212     | 32.356     | 32.574     |   2.3 |  8.55
Other   |            | 0.3604     |            |       |  0.10

Nlocal:         36.875 ave          45 max          31 min
Histogram: 1 1 1 1 0 3 0 0 0 1
Nghost:         2961.5 ave        2984 max        2938 min
Histogram: 3 0 0 1 0 0 0 0 2 2
Neighs:        22460.6 ave       27052 max       19045 min
Histogram: 1 1 1 1 0 3 0 0 0 1

Total # of neighbors = 179685
Ave neighs/atom = 609.10169
Ave special neighs/atom = 0
Neighbor list builds = 150
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos4

# Delete dir to make sure it is not reused
variable dir delete
# uxz Perturbation
variable dir equal 5
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
variable len0 equal ${ly0}
variable len0 equal 13.6088
variable dlen equal 2*(xz-${xz0})
variable dlen equal 2*(xz--0.6366)
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.1447 13.6088 16.498) with tilt (-7.6974 -0.6366 0.5805)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  295 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*13.6088
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.6974000000000000199, deltaxy = 0.076974
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = -0.63660000000000005471, deltaxz = 0.006366
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0.58050000000000001599, deltayz = -0.005805
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no
fix deform_n all deform 100 xz delta ${delta} remap v units box flip no
fix deform_n all deform 100 xz delta -0.136088 remap v units box flip no
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 5 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg5.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg5.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg5 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg5 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg5 all custom/gz 100 dump/neg_deform5.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 114.2 | 116.3 | 117.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -30124.188     -2803.6199      3400.2575    
       100   296.95287     -30107.963      1575.0307      3400.2575    
       200   284.19983     -30070.703     -12904.363      3400.2575    
       300   315.55426     -30100.094     -16174.335      3400.2575    
       400   292.9893      -30092.75      -2500.8281      3400.2575    
       500   330.15064     -30131.252     -5031.4463      3400.2575    
       600   300.59104     -30129.608     -70.224643      3400.2575    
       700   295.71344     -30131.719     -6465.0058      3400.2575    
       800   292.65982     -30115.071      3546.0871      3400.2575    
       900   301.54501     -30095.717     -5299.803       3400.2575    
      1000   306.38274     -30094.581     -10590.65       3400.2575    
      1100   323.22136     -30118.779     -6113.8937      3400.2575    
      1200   307.92546     -30130.811     -8975.659       3400.2575    
      1300   297.36035     -30140.636      168.3317       3400.2575    
      1400   285.35729     -30129.206     -5043.97        3400.2575    
      1500   323.7766      -30144.651      1501.4755      3400.2575    
      1600   305.54032     -30106.107     -5115.8997      3400.2575    
      1700   320.67359     -30109.415     -3426.5821      3400.2575    
      1800   299.40291     -30125.279      4550.7066      3400.2575    
      1900   288.845       -30137.175     -1405.6223      3400.2575    
      2000   287.14485     -30134.471      9053.5038      3400.2575    
      2100   298.38        -30120.256      8428.892       3400.2575    
      2200   322.09142     -30130.159     -4367.877       3400.2575    
      2300   304.41675     -30127.603      412.67329      3400.2575    
      2400   270.55816     -30114.626     -8880.3928      3400.2575    
      2500   294.93833     -30133.774      12235.136      3400.2575    
      2600   325.78051     -30156.472      16343.951      3400.2575    
      2700   297.71936     -30135.965     -2068.7956      3400.2575    
      2800   319.00568     -30144.135      5632.8183      3400.2575    
      2900   327.19876     -30144.684      6745.4706      3400.2575    
      3000   311.14295     -30150.975      1667.1448      3400.2575    
      3100   300.98862     -30162.355     -5784.6364      3400.2575    
      3200   283.38512     -30149.448     -6577.4448      3400.2575    
      3300   302.70241     -30152.851     -8250.3269      3400.2575    
      3400   316.01253     -30129.588     -5459.819       3400.2575    
      3500   320.67354     -30134.976     -9786.5981      3400.2575    
      3600   314.99388     -30155.435     -2919.1219      3400.2575    
      3700   309.0536      -30164.78      -9532.0622      3400.2575    
      3800   300.16049     -30164.447      7692.5027      3400.2575    
      3900   282.34327     -30157.064      4624.5177      3400.2575    
      4000   290.04245     -30179.58      -1527.5597      3400.2575    
      4100   286.74282     -30188.142     -1083.7313      3400.2575    
      4200   283.42992     -30170.032     -4072.8837      3400.2575    
      4300   315.20084     -30167.658     -4358.1305      3400.2575    
      4400   293.00159     -30150.129     -10738.632      3400.2575    
      4500   299.98254     -30168.647     -1672.9731      3400.2575    
      4600   288.71907     -30170.811     -6571.1419      3400.2575    
      4700   333.77567     -30237.886      4267.371       3400.2575    
      4800   312.58708     -30246.847     -2530.6368      3400.2575    
      4900   296.75009     -30246.753      9148.4259      3400.2575    
      5000   296.16511     -30254.911     -14522.287      3400.2575    
      5100   275.69183     -30229.274     -4697.9589      3400.2575    
      5200   318.22124     -30236.703     -14140.603      3400.2575    
      5300   321.57341     -30236.635      7424.1417      3400.2575    
      5400   290.7044      -30224.624     -10546.81       3400.2575    
      5500   307.48797     -30244.969      4985.6584      3400.2575    
      5600   299.14034     -30233.778     -1060.1549      3400.2575    
      5700   310.00047     -30244.027      4477.4321      3400.2575    
      5800   343.1658      -30287.835      6896.3665      3400.2575    
      5900   301.75542     -30281.87      -772.22281      3400.2575    
      6000   302.326       -30301.123      6870.174       3400.2575    
      6100   303.97977     -30326.997      1977.7887      3400.2575    
      6200   284.83581     -30321.467     -1799.5094      3400.2575    
      6300   314.73919     -30341.66      -5959.6438      3400.2575    
      6400   329.71158     -30327.444     -10089.238      3400.2575    
      6500   311.48154     -30291.319     -9065.1254      3400.2575    
      6600   319.86286     -30303.114     -9701.3135      3400.2575    
      6700   305.44066     -30306.605     -10772.786      3400.2575    
      6800   317.68249     -30323.47      -3881.9746      3400.2575    
      6900   287.70179     -30313.976      1540.8181      3400.2575    
      7000   277.46152     -30310.621     -2401.1398      3400.2575    
      7100   297.45481     -30323.068     -1715.2203      3400.2575    
      7200   307.30043     -30307.807     -11805.489      3400.2575    
      7300   307.23226     -30290.474     -11773.507      3400.2575    
      7400   298.58224     -30305.079     -14775.39       3400.2575    
      7500   310.83768     -30331.585     -11248.768      3400.2575    
      7600   280.6886      -30314.1       -3119.5881      3400.2575    
      7700   305.66131     -30347.612     -7983.2423      3400.2575    
      7800   292.12936     -30350.584     -5868.6705      3400.2575    
      7900   263.57408     -30343.019     -7409.7141      3400.2575    
      8000   296.50227     -30346.829      6456.9978      3400.2575    
      8100   316.42157     -30337.892     -2641.1211      3400.2575    
      8200   320.73891     -30335.566      82.960539      3400.2575    
      8300   272.93594     -30314.588      2356.7532      3400.2575    
      8400   296.49437     -30337.41      -9.1707995      3400.2575    
      8500   300.74672     -30329.777      4673.3394      3400.2575    
      8600   339.29671     -30331.941     -4615.3665      3400.2575    
      8700   316.52761     -30312.611     -6128.9635      3400.2575    
      8800   304.94511     -30324.72       362.27017      3400.2575    
      8900   286.36715     -30318.69      -11823.607      3400.2575    
      9000   292.76931     -30332.349     -8767.169       3400.2575    
      9100   316.74914     -30354.431     -2064.2403      3400.2575    
      9200   301.60584     -30342.04       3785.2391      3400.2575    
      9300   299.16885     -30342.542     -3990.2734      3400.2575    
      9400   300.24909     -30337.996      6365.3011      3400.2575    
      9500   300.73334     -30324.757     -1594.1403      3400.2575    
      9600   313.10269     -30324.193     -2578.4898      3400.2575    
      9700   318.67309     -30328.083     -9852.0155      3400.2575    
      9800   296.30652     -30326.273      10016.287      3400.2575    
      9900   296.68575     -30347.819     -6658.2293      3400.2575    
     10000   305.28191     -30350.308      10180.843      3400.2575    
Loop time of 383.136 on 8 procs for 10000 steps with 295 atoms

Performance: 1.128 ns/day, 21.285 hours/ns, 26.100 timesteps/s, 7.700 katom-step/s
98.8% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 222.27     | 309.99     | 338.23     | 235.6 | 80.91
Bond    | 0.02613    | 0.030174   | 0.034299   |   1.3 |  0.01
Neigh   | 3.6411     | 4.9235     | 5.4964     |  29.2 |  1.29
Comm    | 5.8973     | 34.286     | 121.91     | 707.6 |  8.95
Output  | 0.029261   | 0.071794   | 0.16859    |  19.3 |  0.02
Modify  | 32.905     | 33.582     | 34.962     |  12.2 |  8.77
Other   |            | 0.2558     |            |       |  0.07

Nlocal:         36.875 ave          45 max          24 min
Histogram: 1 0 0 1 0 1 1 1 2 1
Nghost:           2995 ave        3047 max        2937 min
Histogram: 2 0 1 1 0 0 1 0 0 3
Neighs:        22413.9 ave       27168 max       14948 min
Histogram: 1 0 0 1 0 1 1 1 2 1

Total # of neighbors = 179311
Ave neighs/atom = 607.8339
Ave special neighs/atom = 0
Neighbor list builds = 183
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg5

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.1447 13.6088 16.498) with tilt (-7.6974 -0.6366 0.5805)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  295 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*13.6088
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box
fix deform_p all deform 100 xz delta ${delta} remap v units box
fix deform_p all deform 100 xz delta 0.136088 remap v units box
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 5 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos5.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos5.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos5 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos5 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos5 all custom/gz 100 dump/pos_deform5.lammpstrj.gz id type q x y z
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 114.2 | 116.3 | 117.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -30124.188     -2803.6199      3400.2575    
       100   296.94323     -30107.962      1575.0111      3400.2575    
       200   284.14616     -30070.564     -12874.952      3400.2575    
       300   315.49007     -30100.096     -16067.568      3400.2575    
       400   292.8927      -30092.67      -2576.8099      3400.2575    
       500   330.19937     -30131.13      -5060.9318      3400.2575    
       600   300.78407     -30129.688      99.42016       3400.2575    
       700   296.95618     -30132.691     -6515.2647      3400.2575    
       800   294.3282      -30116.361      1226.5086      3400.2575    
       900   300.06481     -30094.612     -5920.9575      3400.2575    
      1000   304.03237     -30094.701     -10621.175      3400.2575    
      1100   326.81654     -30123.839     -6295.4787      3400.2575    
      1200   314.86271     -30140.611     -11449.926      3400.2575    
      1300   290.86173     -30136.038      528.65913      3400.2575    
      1400   283.55192     -30129.979     -3384.8347      3400.2575    
      1500   315.53224     -30146.322     -957.6168       3400.2575    
      1600   313.48355     -30122.701     -4193.2798      3400.2575    
      1700   330.87883     -30136.408      5838.2922      3400.2575    
      1800   304.20765     -30151.43       10881.829      3400.2575    
      1900   285.77993     -30151.531     -10350.133      3400.2575    
      2000   293.77903     -30160.491      3847.6334      3400.2575    
      2100   294.54651     -30137.887      9359.0415      3400.2575    
      2200   312.93832     -30140.659     -3739.4334      3400.2575    
      2300   304.45466     -30148.33      -8047.0671      3400.2575    
      2400   317.00005     -30170.988     -1499.4619      3400.2575    
      2500   307.58056     -30162.11       11893.592      3400.2575    
      2600   290.48233     -30136.387      7668.9686      3400.2575    
      2700   323.79644     -30152.568     -3355.2049      3400.2575    
      2800   313.826       -30140.052     -14132.3        3400.2575    
      2900   303.54614     -30158.128      3984.1266      3400.2575    
      3000   294.776       -30165.778      19511.754      3400.2575    
      3100   277.07342     -30149.277      6783.2149      3400.2575    
      3200   334.63086     -30175.245     -215.05705      3400.2575    
      3300   301.35844     -30132.946     -9535.6061      3400.2575    
      3400   319.2333      -30152.899     -13108.247      3400.2575    
      3500   291.14749     -30152.973     -18903.974      3400.2575    
      3600   299.43379     -30189.364     -4964.213       3400.2575    
      3700   276.95918     -30162.767     -4502.0957      3400.2575    
      3800   292.50762     -30155.298      9697.3934      3400.2575    
      3900   326.20845     -30167.318      1896.8243      3400.2575    
      4000   301.41025     -30155.349     -3758.0488      3400.2575    
      4100   285.41389     -30158.119     -8154.4429      3400.2575    
      4200   278.44995     -30151.132     -7487.8471      3400.2575    
      4300   312.16836     -30141.446      177.31406      3400.2575    
      4400   338.00965     -30161.969     -7650.1856      3400.2575    
      4500   314.15608     -30170.427      6194.1937      3400.2575    
      4600   282.98844     -30153.266     -9876.2896      3400.2575    
      4700   292.47274     -30154.948     -11167.456      3400.2575    
      4800   312.6746      -30160.117      268.30915      3400.2575    
      4900   342.78462     -30169.234      8234.2324      3400.2575    
      5000   312.93234     -30169.273     -8013.7453      3400.2575    
      5100   306.05896     -30188.963     -14999.681      3400.2575    
      5200   300.7118      -30195.932     -9874.8679      3400.2575    
      5300   297.51        -30189.485     -17712.426      3400.2575    
      5400   316.22209     -30192.993     -12835.798      3400.2575    
      5500   326.54829     -30188.921     -6224.4792      3400.2575    
      5600   314.51402     -30204.181      1261.9152      3400.2575    
      5700   287.87327     -30206.308     -5363.9482      3400.2575    
      5800   300.0133      -30211.351      4757.871       3400.2575    
      5900   289.08506     -30189.143      4092.5271      3400.2575    
      6000   328.73993     -30218.413      6100.3716      3400.2575    
      6100   298.97351     -30234.784     -4527.9735      3400.2575    
      6200   270.09484     -30224.163      3421.8975      3400.2575    
      6300   302.33811     -30247.794      8143.1833      3400.2575    
      6400   285.29653     -30239.573     -1856.2839      3400.2575    
      6500   271.09839     -30249.36      -2275.4616      3400.2575    
      6600   292.0333      -30273.279     -6299.3468      3400.2575    
      6700   300.50781     -30248.446     -10158.999      3400.2575    
      6800   309.62371     -30240.977     -4561.3739      3400.2575    
      6900   312.21244     -30248.888     -6322.0414      3400.2575    
      7000   311.71437     -30261.049     -6173.0914      3400.2575    
      7100   289.13449     -30256.583     -3720.838       3400.2575    
      7200   291.51263     -30254.463      6887.8082      3400.2575    
      7300   312.13851     -30239.065      2890.0888      3400.2575    
      7400   344.41236     -30270.017      8455.8842      3400.2575    
      7500   324.39966     -30282.345     -3853.271       3400.2575    
      7600   304.52785     -30283.189     -10331.882      3400.2575    
      7700   296.91387     -30302.208     -17862.706      3400.2575    
      7800   282.87845     -30290.351      9606.0112      3400.2575    
      7900   322.74709     -30302.534      3912.3664      3400.2575    
      8000   304.01022     -30277.375      576.38508      3400.2575    
      8100   295.0857      -30270.985     -2170.6505      3400.2575    
      8200   314.72814     -30292.16      -4310.632       3400.2575    
      8300   316.39759     -30304.903     -4915.6277      3400.2575    
      8400   326.30424     -30317.418     -6187.2399      3400.2575    
      8500   308.95475     -30304.026     -2095.8167      3400.2575    
      8600   287.0324      -30279.965     -9556.4652      3400.2575    
      8700   299.36178     -30268.36      -2134.4512      3400.2575    
      8800   327.79378     -30269.152     -5668.5804      3400.2575    
      8900   323.45681     -30287.21      -1272.4869      3400.2575    
      9000   281.7491      -30283.686      8559.1664      3400.2575    
      9100   297.36769     -30294.157     -1398.2991      3400.2575    
      9200   305.14179     -30298.127      50.834798      3400.2575    
      9300   298.76787     -30282.521     -12445.965      3400.2575    
      9400   305.12547     -30279.725      2834.6641      3400.2575    
      9500   310.56841     -30273.91      -8172.3393      3400.2575    
      9600   295.18997     -30271.777     -1761.9698      3400.2575    
      9700   286.64754     -30291.866      690.54938      3400.2575    
      9800   289.8883      -30299.101     -8937.6974      3400.2575    
      9900   277.25174     -30282.417      1382.0308      3400.2575    
     10000   328.59899     -30292.529     -2109.2771      3400.2575    
Loop time of 376.346 on 8 procs for 10000 steps with 295 atoms

Performance: 1.148 ns/day, 20.908 hours/ns, 26.571 timesteps/s, 7.839 katom-step/s
98.8% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 246.06     | 302.32     | 332.41     | 190.0 | 80.33
Bond    | 0.02879    | 0.030169   | 0.031454   |   0.5 |  0.01
Neigh   | 3.1295     | 3.7766     | 4.1705     |  20.3 |  1.00
Comm    | 7.9787     | 38.048     | 94.305     | 535.7 | 10.11
Output  | 0.029245   | 0.0708     | 0.17143    |  20.4 |  0.02
Modify  | 31.33      | 31.745     | 32.427     |   7.3 |  8.44
Other   |            | 0.3523     |            |       |  0.09

Nlocal:         36.875 ave          47 max          29 min
Histogram: 1 0 1 1 2 2 0 0 0 1
Nghost:        2978.38 ave        2996 max        2964 min
Histogram: 1 1 1 2 0 1 0 0 0 2
Neighs:        22448.4 ave       28155 max       17840 min
Histogram: 1 0 1 0 3 2 0 0 0 1

Total # of neighbors = 179587
Ave neighs/atom = 608.76949
Ave special neighs/atom = 0
Neighbor list builds = 146
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos5

# Delete dir to make sure it is not reused
variable dir delete
# uxy Perturbation
variable dir equal 6
include displace.mod.lmp
# Find which length (epsilon) to calculate
if "${dir} == 1" then    "variable len0 equal ${lx0}"    "variable dlen equal lx-${len0}"
if "${dir} == 2" then    "variable len0 equal ${ly0}"    "variable dlen equal ly-${len0}"
if "${dir} == 3" then    "variable len0 equal ${lz0}"    "variable dlen equal lz-${len0}"
if "${dir} == 4" then    "variable len0 equal ${lx0}"    "variable dlen equal 2*(yz-${yz0})"
if "${dir} == 5" then    "variable len0 equal ${ly0}"    "variable dlen equal 2*(xz-${xz0})"
if "${dir} == 6" then    "variable len0 equal ${lz0}"    "variable dlen equal 2*(xy-${xy0})"
variable len0 equal ${lz0}
variable len0 equal 16.498
variable dlen equal 2*(xy-${xy0})
variable dlen equal 2*(xy--7.6974)

# strain vector (epsilon)
variable eps equal v_dlen/v_len0

# stress vector (sigma)
variable sig1 equal -f_avgp[1]*${ufac}
variable sig1 equal -f_avgp[1]*0.000101325
variable sig2 equal -f_avgp[2]*${ufac}
variable sig2 equal -f_avgp[2]*0.000101325
variable sig3 equal -f_avgp[3]*${ufac}
variable sig3 equal -f_avgp[3]*0.000101325
variable sig4 equal -f_avgp[6]*${ufac}
variable sig4 equal -f_avgp[6]*0.000101325
variable sig5 equal -f_avgp[5]*${ufac}
variable sig5 equal -f_avgp[5]*0.000101325
variable sig6 equal -f_avgp[4]*${ufac}
variable sig6 equal -f_avgp[4]*0.000101325

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.1447 13.6088 16.498) with tilt (-7.6974 -0.6366 0.5805)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  295 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.003 seconds

# Negative deformation
variable delta equal -${up}*${len0}
variable delta equal -0.01*${len0}
variable delta equal -0.01*16.498
variable deltaxy equal -${up}*xy
variable deltaxy equal -0.01*xy
variable deltaxz equal -${up}*xz
variable deltaxz equal -0.01*xz
variable deltayz equal -${up}*yz
variable deltayz equal -0.01*yz
print "*****debug*****"
*****debug*****
print "xy = $(xy), deltaxy = ${deltaxy}"
xy = -7.6974000000000000199, deltaxy = 0.076974
print "xz = $(xz), deltaxz = ${deltaxz}"
xz = -0.63660000000000005471, deltaxz = 0.006366
print "yz = $(yz), deltayz = ${deltayz}"
yz = 0.58050000000000001599, deltayz = -0.005805
print "*****"
*****

if "${dir} == 1" then    "fix deform_n all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box flip no"
if "${dir} == 2" then    "fix deform_n all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box flip no"
if "${dir} == 3" then    "fix deform_n all deform ${nthermo} z delta 0 ${delta} remap v units box flip no"
if "${dir} == 4" then    "fix deform_n all deform ${nthermo} yz delta ${delta} remap v units box flip no"
if "${dir} == 5" then    "fix deform_n all deform ${nthermo} xz delta ${delta} remap v units box flip no"
if "${dir} == 6" then    "fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no"
fix deform_n all deform ${nthermo} xy delta ${delta} remap v units box flip no
fix deform_n all deform 100 xy delta ${delta} remap v units box flip no
fix deform_n all deform 100 xy delta -0.16498 remap v units box flip no

# Run MD for Negative deformation
print "*****Negative-deform ${dir} starts.*****"
*****Negative-deform 6 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.neg${dir}.out"
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg${dir}.out screen no
print "# Stress and strain vectors, ${structure}, negative deformation ${dir}"       file stress_strain/stress_strain.neg6.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.neg6.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# save trajectory
# if "$(is_defined(dump,dump_neg${dir1}))" then "undump dump_neg${dir1}"
dump dump_neg${dir} all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg6 all custom/gz ${nthermo} dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg6 all custom/gz 100 dump/neg_deform${dir}.lammpstrj.gz id type q x y z
dump dump_neg6 all custom/gz 100 dump/neg_deform6.lammpstrj.gz id type q x y z
# variable dir1 equal ${dir}
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 114.2 | 116.3 | 117.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -30124.188     -2803.6199      3400.2575    
       100   296.94799     -30107.962      1575.003       3400.2575    
       200   284.02694     -30070.786     -12911.227      3400.2575    
       300   315.43488     -30100.045     -16125.141      3400.2575    
       400   292.68886     -30092.314     -2426.2107      3400.2575    
       500   329.89649     -30130.955     -4988.8377      3400.2575    
       600   301.37366     -30130.18      -2585.9539      3400.2575    
       700   296.03294     -30131.857     -5330.5335      3400.2575    
       800   289.47417     -30111.087      1727.8168      3400.2575    
       900   296.43506     -30093.338     -5112.287       3400.2575    
      1000   296.26515     -30092.63      -9760.1526      3400.2575    
      1100   330.01937     -30132.806     -3990.8537      3400.2575    
      1200   307.43793     -30137.876     -9998.6803      3400.2575    
      1300   297.82225     -30137.343      100.71171      3400.2575    
      1400   278.76887     -30107.261     -2706.6768      3400.2575    
      1500   320.37309     -30124.191     -6689.9072      3400.2575    
      1600   297.02134     -30100.91      -2003.2915      3400.2575    
      1700   301.3625      -30104.721     -5930.2497      3400.2575    
      1800   305.42321     -30116.249      8036.1381      3400.2575    
      1900   281.17685     -30121.86      -6337.0277      3400.2575    
      2000   275.34754     -30114.668     -2210.9758      3400.2575    
      2100   305.15792     -30126.009     -4697.5235      3400.2575    
      2200   307.32279     -30119.276     -6887.3581      3400.2575    
      2300   290.33221     -30108.913      4968.5782      3400.2575    
      2400   302.8834      -30118.767     -9279.3721      3400.2575    
      2500   319.5794      -30119.388      2743.6324      3400.2575    
      2600   303.41659     -30093.767     -3939.0358      3400.2575    
      2700   303.00441     -30100.937     -5144.038       3400.2575    
      2800   301.90209     -30129.398      3564.8412      3400.2575    
      2900   289.77346     -30130.144      4534.7799      3400.2575    
      3000   291.96798     -30122.841     -511.03311      3400.2575    
      3100   321.1811      -30125.668     -3908.4729      3400.2575    
      3200   302.08302     -30104.26      -6778.5016      3400.2575    
      3300   299.52454     -30106.848     -15717.553      3400.2575    
      3400   301.37676     -30119.602      1366.7935      3400.2575    
      3500   290.45462     -30133.284     -2076.1631      3400.2575    
      3600   297.06007     -30142.378      1219.3798      3400.2575    
      3700   289.98691     -30128.039     -3416.6671      3400.2575    
      3800   302.24254     -30130.099     -3070.4877      3400.2575    
      3900   296.38394     -30117.892     -13732.02       3400.2575    
      4000   286.94601     -30113.09       709.29098      3400.2575    
      4100   293.50607     -30136.891      14448.801      3400.2575    
      4200   281.87582     -30142.748     -8682.2977      3400.2575    
      4300   293.32029     -30132.895     -19066.099      3400.2575    
      4400   304.71069     -30122.378     -14846.852      3400.2575    
      4500   316.35743     -30129.942     -12514.397      3400.2575    
      4600   291.12009     -30124.542      6698.4393      3400.2575    
      4700   308.44547     -30162.786     -505.2814       3400.2575    
      4800   290.17307     -30151.246      3839.0802      3400.2575    
      4900   293.25378     -30143.515      8805.0466      3400.2575    
      5000   306.91247     -30144.227     -5314.8804      3400.2575    
      5100   287.71503     -30120.311     -3072.1718      3400.2575    
      5200   314.01535     -30121.905     -9448.0217      3400.2575    
      5300   328.91884     -30111.453     -7082.7878      3400.2575    
      5400   315.25294     -30127.331     -8851.6402      3400.2575    
      5500   295.81244     -30132.673     -9055.0143      3400.2575    
      5600   305.52562     -30155.907      8044.6806      3400.2575    
      5700   292.28791     -30153.22       1489.1425      3400.2575    
      5800   305.71214     -30163.826     -2103.283       3400.2575    
      5900   300.87967     -30144.136     -8174.4178      3400.2575    
      6000   310.07946     -30132.725     -5085.7565      3400.2575    
      6100   285.2595      -30116.454      6294.6493      3400.2575    
      6200   303.86471     -30162.949     -4012.1235      3400.2575    
      6300   291.96355     -30164.435      1351.0727      3400.2575    
      6400   298.59587     -30165.954      3806.2682      3400.2575    
      6500   314.04753     -30172.266     -8454.6198      3400.2575    
      6600   296.53065     -30171.559     -4127.8564      3400.2575    
      6700   270.66823     -30180.954     -870.77686      3400.2575    
      6800   297.71509     -30196.296     -761.45957      3400.2575    
      6900   321.55306     -30201.508     -1272.7348      3400.2575    
      7000   291.50621     -30169.16       15473.673      3400.2575    
      7100   309.93834     -30179.436      1822.04        3400.2575    
      7200   303.44083     -30188.103     -5859.7199      3400.2575    
      7300   268.12236     -30177.222      1802.2109      3400.2575    
      7400   288.22594     -30191.599      3513.5525      3400.2575    
      7500   306.14433     -30182.542      6473.7065      3400.2575    
      7600   314.48909     -30169.612     -13337.684      3400.2575    
      7700   306.19395     -30172.11       3255.7298      3400.2575    
      7800   298.41258     -30180.425      12627.713      3400.2575    
      7900   294.33482     -30190.574     -10944.729      3400.2575    
      8000   289.82235     -30195.775      8.8632649      3400.2575    
      8100   295.01506     -30198.234     -9545.2837      3400.2575    
      8200   291.92643     -30194.006     -7841.3782      3400.2575    
      8300   313.22602     -30211.716     -7863.9354      3400.2575    
      8400   309.09578     -30211.961     -16777.292      3400.2575    
      8500   282.73407     -30223.772      4991.0452      3400.2575    
      8600   266.14774     -30205.815     -3912.3977      3400.2575    
      8700   294.41532     -30208.83      -3617.5704      3400.2575    
      8800   308.59837     -30207.051     -1863.2065      3400.2575    
      8900   284.65995     -30181.775     -852.72605      3400.2575    
      9000   299.91863     -30190.216     -6845.6392      3400.2575    
      9100   319.72319     -30195.259      372.64961      3400.2575    
      9200   312.72572     -30197.66       8123.9057      3400.2575    
      9300   290.65975     -30201.612     -6592.6911      3400.2575    
      9400   278.25862     -30200.303     -1322.4178      3400.2575    
      9500   314.75208     -30210.302      382.40008      3400.2575    
      9600   312.04089     -30196.152      6521.5739      3400.2575    
      9700   292.44551     -30190.704     -7693.5879      3400.2575    
      9800   303.3843      -30210.043     -7071.4981      3400.2575    
      9900   288.41479     -30215.39      -19790.842      3400.2575    
     10000   289.42522     -30235.984     -10322.97       3400.2575    
Loop time of 352.918 on 8 procs for 10000 steps with 295 atoms

Performance: 1.224 ns/day, 19.607 hours/ns, 28.335 timesteps/s, 8.359 katom-step/s
98.9% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 211        | 256.47     | 306.8      | 237.0 | 72.67
Bond    | 0.024928   | 0.027328   | 0.030002   |   1.0 |  0.01
Neigh   | 3.174      | 3.7434     | 4.4902     |  27.4 |  1.06
Comm    | 10.591     | 60.922     | 106.37     | 486.1 | 17.26
Output  | 0.026871   | 0.065604   | 0.16026    |  19.8 |  0.02
Modify  | 30.733     | 31.467     | 32.077     |   9.7 |  8.92
Other   |            | 0.2244     |            |       |  0.06

Nlocal:         36.875 ave          43 max          28 min
Histogram: 1 0 0 0 1 2 1 1 1 1
Nghost:        3004.25 ave        3069 max        2931 min
Histogram: 2 0 0 2 0 0 1 0 1 2
Neighs:        22422.2 ave       26012 max       17403 min
Histogram: 1 0 0 1 0 2 1 1 1 1

Total # of neighbors = 179378
Ave neighs/atom = 608.06102
Ave special neighs/atom = 0
Neighbor list builds = 158
Dangerous builds = 0
unfix deform_n
unfix data
undump dump_neg${dir}
undump dump_neg6

# Reset box and simulation parameters
clear
  using 1 OpenMP thread(s) per MPI task
# box tilt large
read_restart equil.res
Reading restart file ...
  restart file = 2 Aug 2023, LAMMPS = 2 Aug 2023
  restoring atom style full from restart
  triclinic box = (0 0 0) to (15.1447 13.6088 16.498) with tilt (-7.6974 -0.6366 0.5805)
WARNING: Triclinic box skew is large. LAMMPS will run inefficiently. (src/domain.cpp:220)
  2 by 2 by 2 MPI processor grid
  pair style reaxff stores no restart info
  295 atoms
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     0 = max # of 1-2 neighbors
     0 = max # of 1-3 neighbors
     0 = max # of 1-4 neighbors
     1 = max # of special neighbors
  special bonds CPU = 0.000 seconds
  read_restart CPU = 0.002 seconds

# Positive deformation
variable delta equal ${up}*${len0}
variable delta equal 0.01*${len0}
variable delta equal 0.01*16.498
variable deltaxy equal ${up}*xy
variable deltaxy equal 0.01*xy
variable deltaxz equal ${up}*xz
variable deltaxz equal 0.01*xz
variable deltayz equal ${up}*yz
variable deltayz equal 0.01*yz
if "${dir} == 1" then    "fix deform_p all deform ${nthermo} x delta 0 ${delta} xy delta ${deltaxy} xz delta ${deltaxz} remap v units box"
if "${dir} == 2" then    "fix deform_p all deform ${nthermo} y delta 0 ${delta} yz delta ${deltayz} remap v units box"
if "${dir} == 3" then    "fix deform_p all deform ${nthermo} z delta 0 ${delta} remap v units box"
if "${dir} == 4" then    "fix deform_p all deform ${nthermo} yz delta ${delta} remap v units box"
if "${dir} == 5" then    "fix deform_p all deform ${nthermo} xz delta ${delta} remap v units box"
if "${dir} == 6" then    "fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box"
fix deform_p all deform ${nthermo} xy delta ${delta} remap v units box
fix deform_p all deform 100 xy delta ${delta} remap v units box
fix deform_p all deform 100 xy delta 0.16498 remap v units box

# Run deformation MD
print "*****Positive-deform ${dir} starts.*****"
*****Positive-deform 6 starts.*****
include ff.mod.lmp
# Setup forcefield, system
# undefine any fix ave/* fix before using reset_timestep
if "$(is_defined(fix,avgp))" then "unfix avgp"
if "$(is_defined(fix,avgl))" then "unfix avgl"
reset_timestep 0

# Assign the force field
pair_style reaxff NULL safezone 3.0 mincap 150
pair_coeff * * ${FF}
pair_coeff * * SiOCHN_2018.ff C H O Si
WARNING: Van der Waals parameters for element SI indicate inner wall+shielding, but earlier atoms indicate a different van der Waals method. This may cause division-by-zero errors. Keeping van der Waals setting for earlier atoms. (src/REAXFF/reaxff_ffield.cpp:251)


# charge method for reaxff
fix myqeq all qeq/reaxff 1 0.0 10.0 1.0e-6 reaxff maxiter 400
# Setup neighbor style
neighbor        2 bin
neigh_modify    every 10 delay 0 check yes

# Setup output
thermo		${nthermo}
thermo		100
thermo_style custom step temp pe press vol
# thermo_style custom step vol lx ly lz yz xz xy
thermo_modify norm no
# thermo_modify line multi

# Sample pressure (and length vector)
fix avgp all ave/time  ${nevery} ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 ${nrepeat} ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 ${nfreq} c_thermo_press mode vector
fix avgp all ave/time  10 10 100 c_thermo_press mode vector
# variable lx equal lx
# variable ly equal ly
# variable lz equal lz
# fix avgl all ave/time  ${nevery} ${nrepeat} ${nfreq} v_lx v_ly v_lz

# nvt
fix fnvt all nvt temp ${temp} ${temp} ${tdamp}
fix fnvt all nvt temp 300 ${temp} ${tdamp}
fix fnvt all nvt temp 300 300 ${tdamp}
fix fnvt all nvt temp 300 300 50


# Save stress, strain to "./stress_strain/stress_strain.pos${dir}.out"
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos${dir}.out screen no
print "# Stress and strain vectors, ${structure}, positive deformation ${dir}"       file stress_strain/stress_strain.pos6.out screen no
fix data all print ${nfreq} "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos${dir}.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"
fix data all print 100 "${eps} ${sig1} ${sig2} ${sig3} ${sig4} ${sig5} ${sig6}"       append stress_strain/stress_strain.pos6.out screen no       title "# eps sig1 sig2 sig3 sig4 sig5 sig6"

# # compute MSD and RDF
# compute msd1 all msd
# fix myMSD all ave/time ${nthermo} 1 ${nthermo} c_msd1[1] c_msd1[2] c_msd1[3] c_msd1[4] c_thermo_temp #     file stress_strain/msd_${dir}.out #     title2 "# TimeStep MSD_X MSD_Y MSD_Z MSD_Total Temperture"
# C-C C-Si Si-O C-H Si-Si
# compute rdf1 all rdf 100 1 1 1 4 3 4 1 2 4 4 cutoff 5.0
# fix myRDF all ave/time ${nthermo} 1 ${nthermo} c_rdf1[*] #     file stress_strain/rdf_${dir}.out mode vector #     title3 "# Row r g1(r) coor1(r) ..."

# save trajectory
# if "$(is_defined(dump,dump_pos${dir1}))" then "undump dump_pos${dir1}"
dump dump_pos${dir} all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos6 all custom/gz ${nthermo} dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos6 all custom/gz 100 dump/pos_deform${dir}.lammpstrj.gz id type q x y z
dump dump_pos6 all custom/gz 100 dump/pos_deform6.lammpstrj.gz id type q x y z
run ${nrun}
run 10000
Neighbor list info ...
  update: every = 10 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12
  ghost atom cutoff = 12
  binsize = 6, bins = 4 3 3
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: full/ghost/bin/3d
      bin: standard
  (2) fix qeq/reaxff, perpetual, copy from (1)
      attributes: half, newton off
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 114.2 | 116.3 | 117.8 Mbytes
   Step          Temp          PotEng         Press          Volume    
         0   300           -30124.188     -2803.6199      3400.2575    
       100   296.94815     -30107.963      1575.3696      3400.2575    
       200   284.23428     -30070.639     -12898.4        3400.2575    
       300   315.52987     -30100.071     -16151.066      3400.2575    
       400   293.08189     -30092.992     -2754.6982      3400.2575    
       500   329.89855     -30130.996     -4974.2029      3400.2575    
       600   300.52604     -30129.581     -177.71348      3400.2575    
       700   296.45975     -30132.3       -6744.2256      3400.2575    
       800   298.40439     -30119.97       1857.5305      3400.2575    
       900   303.92435     -30098.634     -6577.9852      3400.2575    
      1000   310.53744     -30095.789     -6173.5961      3400.2575    
      1100   310.69819     -30122.181      45.454541      3400.2575    
      1200   294.89465     -30141.252     -8095.4859      3400.2575    
      1300   298.19777     -30153.128      861.37918      3400.2575    
      1400   273.5245      -30113.994      2819.0552      3400.2575    
      1500   311.51037     -30124.839     -4382.2997      3400.2575    
      1600   310.17796     -30118.572     -5607.0256      3400.2575    
      1700   314.25936     -30135.109      378.63143      3400.2575    
      1800   278.70957     -30134.844      861.30494      3400.2575    
      1900   303.48287     -30155.597     -5928.0551      3400.2575    
      2000   292.40754     -30129.523      2974.1756      3400.2575    
      2100   305.08548     -30123.995      7933.3009      3400.2575    
      2200   301.06531     -30120.899     -6328.851       3400.2575    
      2300   318.95491     -30142.602      4741.5079      3400.2575    
      2400   288.91423     -30120.791     -8735.5138      3400.2575    
      2500   294.55379     -30140.967      1504.4432      3400.2575    
      2600   298.87638     -30145.51       7115.0911      3400.2575    
      2700   298.52748     -30128.335      2091.0214      3400.2575    
      2800   306.32943     -30123.077      3177.5347      3400.2575    
      2900   315.7622      -30134.715     -764.73182      3400.2575    
      3000   274.44731     -30127.247     -6824.4034      3400.2575    
      3100   303.79541     -30158.228     -2597.94        3400.2575    
      3200   285.44199     -30129.934      2503.8392      3400.2575    
      3300   323.07594     -30130.159     -5369.6108      3400.2575    
      3400   299.84011     -30111.569     -12195.143      3400.2575    
      3500   315.70547     -30134.886     -646.85957      3400.2575    
      3600   285.06268     -30131.564     -249.08961      3400.2575    
      3700   281.69568     -30135.564      2671.3199      3400.2575    
      3800   292.49387     -30142.466      863.60102      3400.2575    
      3900   304.13522     -30149.276      3595.6038      3400.2575    
      4000   280.27346     -30126.446     -1370.0941      3400.2575    
      4100   272.93969     -30115.59       4188.2378      3400.2575    
      4200   312.50899     -30114.524      5013.2933      3400.2575    
      4300   326.52461     -30117.454      522.46221      3400.2575    
      4400   315.09674     -30133.812     -6691.967       3400.2575    
      4500   285.97979     -30126.417      535.55415      3400.2575    
      4600   300.62377     -30144.984      8028.4166      3400.2575    
      4700   295.57378     -30139.777      5578.6908      3400.2575    
      4800   309.43317     -30137.04      -1513.6274      3400.2575    
      4900   306.28432     -30122.71      -9449.7916      3400.2575    
      5000   310.02745     -30130.174     -2411.4414      3400.2575    
      5100   300.27353     -30152.812      1012.0463      3400.2575    
      5200   279.19751     -30150.339      11447.84       3400.2575    
      5300   302.12724     -30167.179     -474.07708      3400.2575    
      5400   303.95689     -30145.698     -7544.307       3400.2575    
      5500   300.68444     -30129.443     -14.129557      3400.2575    
      5600   300.18329     -30136.931     -13142.756      3400.2575    
      5700   313.89423     -30160.227     -9918.9928      3400.2575    
      5800   271.27214     -30144.485     -5086.0017      3400.2575    
      5900   303.50688     -30167.914      1082.3853      3400.2575    
      6000   298.3969      -30152.551      6767.8469      3400.2575    
      6100   311.63681     -30155.12       5186.1987      3400.2575    
      6200   300.93059     -30144.833      7534.5343      3400.2575    
      6300   301.71167     -30140.96      -1174.4762      3400.2575    
      6400   292.18925     -30125.501     -347.71157      3400.2575    
      6500   311.77228     -30141.969     -3427.6681      3400.2575    
      6600   297.9528      -30151.264     -10745.363      3400.2575    
      6700   290.39664     -30161.161     -3896.0083      3400.2575    
      6800   285.6959      -30161.683     -11565.229      3400.2575    
      6900   303.84778     -30141.521      2616.5567      3400.2575    
      7000   315.76199     -30137.634     -3038.574       3400.2575    
      7100   295.6408      -30137.48      -11540.021      3400.2575    
      7200   289.05577     -30148.669     -7470.0733      3400.2575    
      7300   299.68181     -30159.891      7196.689       3400.2575    
      7400   300.70032     -30143.185      15839.103      3400.2575    
      7500   308.57039     -30118.386      19285.024      3400.2575    
      7600   304.99128     -30123.402     -1560.6347      3400.2575    
      7700   298.07959     -30142.573      3504.6649      3400.2575    
      7800   303.48003     -30155.407     -7939.5589      3400.2575    
      7900   298.04336     -30154.885     -2100.6233      3400.2575    
      8000   296.72432     -30150.488     -2057.5838      3400.2575    
      8100   287.27625     -30160.568     -4205.5632      3400.2575    
      8200   271.04733     -30162.036      4499.784       3400.2575    
      8300   290.76137     -30158.558      3878.0741      3400.2575    
      8400   309.8919      -30158.76       202.72759      3400.2575    
      8500   301.21325     -30147.812     -3209.5977      3400.2575    
      8600   294.77034     -30140.733     -14218.788      3400.2575    
      8700   305.5856      -30162.619      225.1151       3400.2575    
      8800   293.35835     -30176.45       2035.7883      3400.2575    
      8900   284.68827     -30157.66       1585.2261      3400.2575    
      9000   327.08145     -30172.198      2064.7179      3400.2575    
      9100   312.04786     -30157.436      5912.6944      3400.2575    
      9200   287.87749     -30139.364     -8871.8126      3400.2575    
      9300   307.11656     -30168.835     -2223.9492      3400.2575    
      9400   282.59153     -30180.306     -9905.0419      3400.2575    
      9500   265.19936     -30166.834      2868.0333      3400.2575    
      9600   275.77192     -30152.845      13361.868      3400.2575    
      9700   297.37794     -30156.392     -2891.7124      3400.2575    
      9800   307.75322     -30149.895     -131.32553      3400.2575    
      9900   297.03404     -30145.388      2914.1753      3400.2575    
     10000   298.97811     -30174.454     -1376.0318      3400.2575    
Loop time of 233.65 on 8 procs for 10000 steps with 295 atoms

Performance: 1.849 ns/day, 12.981 hours/ns, 42.799 timesteps/s, 12.626 katom-step/s
98.4% CPU use with 8 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 194.33     | 197.65     | 201.89     |  17.3 | 84.59
Bond    | 0.023242   | 0.024673   | 0.027776   |   0.9 |  0.01
Neigh   | 3.0924     | 3.1331     | 3.1982     |   1.8 |  1.34
Comm    | 4.4156     | 8.6366     | 11.971     |  82.5 |  3.70
Output  | 0.018239   | 0.049448   | 0.12608    |  18.4 |  0.02
Modify  | 23.799     | 23.845     | 23.901     |   0.8 | 10.21
Other   |            | 0.3096     |            |       |  0.13

Nlocal:         36.875 ave          43 max          27 min
Histogram: 1 0 0 1 0 2 1 0 1 2
Nghost:        2989.12 ave        3018 max        2939 min
Histogram: 1 0 0 2 0 1 0 0 1 3
Neighs:        22442.9 ave       26053 max       16690 min
Histogram: 1 0 0 1 1 1 0 1 1 2

Total # of neighbors = 179543
Ave neighs/atom = 608.62034
Ave special neighs/atom = 0
Neighbor list builds = 158
Dangerous builds = 0
unfix deform_p
unfix data
undump dump_pos${dir}
undump dump_pos6

# Delete dir to make sure it is not reused
variable dir delete

# Calc and output
# include calc.mod.lmp

Total wall time: 1:12:50
