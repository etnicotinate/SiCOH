
include init.in
variable nequil equal 1000*${nthermo}       # length of equilibration run 1000
variable nrun equal 1000*${nthermo}          # length of equilibrated run 
variable seed index 123457                # seed for thermostat 123456

thermo ${nthermo}
thermo_style custom step temp pe press

# Energy minimization
print "##### Minimization starts."
minimize 1.0e-6 1.0e-6 100 1000
min_style cg
# Save the optimized structure
write_data sio2_opt.data
reset_timestep 0
timestep ${timestep}

velocity        all create ${temp} ${seed} dist gaussian
# equilibration
variable thermostat equal 2               # 0 if NVE, 1 if NPT, 2 if NVT
print "equil: ${thermostat}"
include ff.in
# save trajectory
dump dump_opt all custom ${nthermo} dump_opt.lammpstrj id type x y z
run ${nequil}
write_data sio2_eq.data
undump dump_opt
reset_timestep 0

variable thermostat equal 2               # 0 if NVE, 1 if NPT, 2 if NVT
print "##### Main run: ${thermostat}"
include ff.in
include calc.in

# save trajectory
dump dump_main all custom ${nthermo} dump_main.lammpstrj id type x y z
run ${nrun}

# summarize sampling protocol
print "Stress sampling interval = ${nevery}"
variable tmp equal ${nrun}/${nevery}
print "Stress sample count = ${tmp}"
print "Born sampling interval = ${nevery}"
variable tmp equal ${nrun}/${nevery}
print "Born sample count = ${tmp}"

# output the result
# print ""
# print "Output the tensor to C.lmp.log"

# print "${C11} ${C12} ${C13} ${C14} ${C15} ${C16}" &
#     file "C.lmp.log" screen no
# print "${C12} ${C22} ${C23} ${C24} ${C25} ${C26}"&
#     append "C.lmp.log" screen no
# print "${C13} ${C23} ${C33} ${C34} ${C35} ${C36}"&
#     append "C.lmp.log" screen no
# print "${C14} ${C24} ${C34} ${C44} ${C45} ${C46}"&
#     append "C.lmp.log" screen no
# print "${C15} ${C25} ${C35} ${C45} ${C55} ${C56}"&
#     append "C.lmp.log" screen no
# print "${C16} ${C26} ${C36} ${C46} ${C56} ${C66}"&
#     append "C.lmp.log" screen no

print "done!"
